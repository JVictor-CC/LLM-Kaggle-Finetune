Prompt,Response
Write a function to find the shared elements from the given two lists.,"Input:

list1 = [1, 2, 3, 4, 5]

list2 = [4, 5, 6, 7, 8]

Output:

[4, 5]"
Write a python function to identify non-prime numbers.,"def non_prime(num):
    if num > 1:
        for i in range(2, num):
            if (num % i) == 0:
                print(num, ""is not a prime number"")
                break
        else:
            print(num, ""is a prime number"")
    else:
        print(num, ""is not a prime number"")


non_prime(11)"
"Write a function to find the n largest integers from a given list of numbers, returned in descending order.","Example:

largest(2, [7,6,5,4,3,2,1])
// => [7,6]

largest(3, [10,10,10,10,2,3,4,5,6,7,8,9,10])
// => [10,10,10]

largest(3, [10,10,10,10,2,3,4,5,6,7,8,9,10])
// => [10,10,10]

largest(3, [10,10,10,10,2,3,4,5,6,7,8,9,10])
// => [10,10,10]

largest(3, [10,10,10,10,2,3,4,5,6,7,8,9,10])
// => [10,10,10]

largest(3, [10,10,10,10,2,3,4,5,6,7,8,9,10])
// => [10,10,10]

largest(3, [10,10,10,10,2,3,4,5,6,7,8,9,10])
// => [10,10,10]

largest(3, [10,10,10,10,2,3,4,5,6,7,8,9,10])
// => [10,10,10]

largest(3, [10,10,10,10,2,3,4,5,6,7,8,9,10])
// => [10,10,10]

largest(3, [10,10,10,10,2,3,4,5,6,7,8,9,10])
// => [10,10,10]

largest(3, [10"
Write a python function to check whether the two numbers differ at one bit position only or not.,"Input:

Input consists of two integers.

First Line: First integer

Second Line: Second integer

Output:

Print ""yes"" if the two numbers differ at one bit position only.

Print ""no"" if the two numbers do not differ at one bit position only.

Sample Input:

10

12

Sample Output:

yes

Explanation:

Binary representation of 10 is 1010 and binary representation of 12 is 1100.

The two numbers differ at one bit position only.

Sample Input:

10

10

Sample Output:

no

Explanation:

Binary representation of 10 is 1010 and binary representation of 10 is 1010.

The two numbers do not differ at one bit position only.

Sample Input:

10

15

Sample Output:

no

Explanation:

Binary representation of 10 is 1010 and binary representation of 15 is 1111.

The two numbers do not differ at one bit position only.

Sample Input:

10

11

Sample Output:

yes

Explanation:

Binary representation of 10 is 1010 and binary representation of 11 is 1011.

The two numbers differ at one bit position only.

Sample Input:

10

13

Sample Output:

yes

Explanation:

Binary representation of 10 is 1010 and binary representation of 13 is 1101.

The two numbers differ at one bit position only.

Sample Input:

10

14

Sample Output:

yes

Explanation:

Binary representation of 10 is 1010 and binary representation of 14 is 1110.

The two numbers differ at one bit position only.

Sample Input:

10

16

Sample Output:

no

Explanation:

Binary representation of 10 is 101"
Write a function to find all words which are at least 4 characters long in a string.,"Return the result as a string in the same sequence as they appear in the original string.

Example:

Input: ""The quick brown fox jumps over the lazy dog""
Output: ""brown fox jumps lazy""

*/

function findLongWords(str) {
  let words = str.split("" "");
  let result = [];
  for (let i = 0; i < words.length; i++) {
    if (words[i].length >= 4) {
      result.push(words[i]);
    }
  }
  return result.join("" "");
}

console.log(findLongWords(""The quick brown fox jumps over the lazy dog""));"
Write a function to find squares of individual elements in a list.,"Input:

[1,2,3,4,5]

Output:

[1,4,9,16,25]"
Write a python function to find the minimum number of rotations (greater than 0) required to get the same string.,"Input:

str = ""geeks""
Output: 5
Explanation:

After 1 rotation, the string becomes ""eeksg"".
After 2 rotations, the string becomes ""eeksge"".
After 3 rotations, the string becomes ""eeksg"".
After 4 rotations, the string becomes ""geeks"".
After 5 rotations, the string becomes ""geeks""."
Write a python function to remove first and last occurrence of a given character from the string.,"Input:

string = ""abcdabcd""

character = 'a'

Output:

""bcdbcd"""
Write a function to sort a given matrix in ascending order according to the sum of its rows.,"Example

For

matrix = [[1, 3],
          [9, 2],
          [4, 6]]
the output should be

sortByRows(matrix) = [[1, 3],
                      [9, 2],
                      [4, 6]]

Input/Output

[execution time limit] 4 seconds (py3)

[input] array.array.integer matrix

2-dimensional array of integers representing a matrix.

Guaranteed constraints:
1 ≤ matrix.length ≤ 10,
1 ≤ matrix[i].length ≤ 10,
1 ≤ matrix[i][j] ≤ 10.

[output] array.array.integer

Sorted matrix."
Write a python function to find the volume of a triangular prism.,
Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.,"Examples

valid(""aabc_abc"") ➞ true

valid(""aabc_abcc"") ➞ false

valid(""abcabcabcabc"") ➞ true

valid(""Abcabcabcabc"") ➞ false

valid(""abcABCabcABC"") ➞ true

valid(""abcABCabcABC"") ➞ false

Notes

N/A"
Write a function that returns the perimeter of a square given its side length as input.,"Examples
squarePerimeter(1) ➞ 4

squarePerimeter(2) ➞ 8

squarePerimeter(5) ➞ 20

Notes
N/A"
Write a function to remove characters from the first string which are present in the second string.,"Example:

removeChars(""abcd"", ""abc"") should return ""d""
removeChars(""abcd"", ""def"") should return ""abcd""
removeChars(""abcd"", ""ac"") should return ""bd""

*/

function removeChars(str1, str2) {
  let result = """";
  for (let i = 0; i < str1.length; i++) {
    if (str2.indexOf(str1[i]) === -1) {
      result += str1[i];
    }
  }
  return result;
}

console.log(removeChars(""abcd"", ""abc""));
console.log(removeChars(""abcd"", ""def""));
console.log(removeChars(""abcd"", ""ac""));"
Write a function to find whether a given array of integers contains any duplicate element.,"Your function should return true if any value appears at least twice in the array, and it should return false if every element is distinct.

Example:

Input: [19,10,12,11,13,15,14,16,17,18,18,19,20]
Output: true
Explanation: The value 19 appears twice and the value 18 appears twice.

Input: [1,2,3,4,5]
Output: false
Explanation: No value appears more than once.

Input: [3,1]
Output: false
Explanation: No value appears more than once.

Input: [1,1]
Output: true
Explanation: The value 1 appears twice."
Write a function to check if the given number is woodball or not.,"Input:

Number

Output:

Woodball or Not

Example:

Input:

12345

Output:

Woodball

Input:

123456

Output:

Not

Input:

1234567

Output:

Woodball

Input:

12345678

Output:

Not

Input:

123456789

Output:

Woodball

Input:

1234567890

Output:

Not

Input:

12345678901

Output:

Woodball

Input:

123456789012

Output:

Not

Input:

1234567890123

Output:

Woodball

Input:

12345678901234

Output:

Not

Input:

123456789012345

Output:

Woodball

Input:

1234567890123456

Output:

Not

Input:

12345678901234567

Output:

Woodball

Input:

123456789012345678

Output:

Not

Input:

1234567890123456789

Output:

Woodball

Input:

12345678901234567890

Output:

Not

Input:

123456789012345678901

Output:

Woodball

Input:

1234567890123456789012"
Write a python function to check if a given number is one less than twice its reverse.,"For example, 121 is one less than twice its reverse (212).

Function definition is:

def one_less_than_twice(num):

Examples

one_less_than_twice(121) ➞ True

one_less_than_twice(123) ➞ False

one_less_than_twice(3212) ➞ False

one_less_than_twice(4224) ➞ True

one_less_than_twice(8525) ➞ True

one_less_than_twice(100) ➞ False

one_less_than_twice(200) ➞ False

one_less_than_twice(222) ➞ False

one_less_than_twice(223) ➞ True

one_less_than_twice(1000) ➞ False

one_less_than_twice(1234) ➞ False

one_less_than_twice(9876) ➞ False

one_less_than_twice(9998) ➞ True

one_less_than_twice(9999) ➞ False

one_less_than_twice(9990) ➞ False

one_less_than_twice(10000) ➞ False

one_less_than_twice(11110) ➞ False

one_less_than_twice(11111) ➞ False

one_less_than_twice(11112) ➞ True

one_less_than_twice(12345) ➞ False

one_less_than_twice(123456) ➞ False

one_less_than_twice(1234567) ➞ False"
Write a python function to find the largest number that can be formed with the given list of digits.,"Input: [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]
Output: 9876543210

Input: [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0]
Output: 98765432109876543210

Input: [1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4,"
Write a python function to check whether the given two integers have opposite sign or not.,"Input:

Input two integers.

Output:

Print ""True"" if they have opposite sign otherwise ""False"".

Sample Input:

10 -10

Sample Output:

True

Hint:

Use the following formula to check the sign of a number.

sign(x) = -1 if x < 0

sign(x) = 0 if x = 0

sign(x) = 1 if x > 0"
Write a function to find the nth octagonal number.,"The nth octagonal number is the sum of the nth triangular number and the nth pentagonal number.

The first few octagonal numbers are:

1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 16, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99, 102, 105, 108, 111, 114, 117, 120, 123, 126, 129, 132, 135, 138, 141, 144, 147, 150, 153, 156, 159, 162, 165, 168, 171, 174, 177, 180, 183, 186, 189, 192, 195, 198, 201, 204, 207, 210, 213, 216, 219, 222, 225, 228, 231, 234, 237, 240, 243, 246, 249, 252, 255, 258, 261, 264, 267, 270, 273, 276, 279, 282, 285, 288, 291"
Write a python function to count the number of substrings with the sum of digits equal to their length.,"Input:
The first line of input contains an integer T denoting the number of test cases. Then T test cases follow. Each test case consists of a string s.

Output:
Print the number of substrings with the sum of digits equal to their length.

Constraints:
1<=T<=100
1<=length of string s<=100

Example:
Input:
2
123
1234
Output:
1
4

Explanation:
For first test case,
The substrings are 1, 2, 3, 12, 23, 123.
The sum of digits of 1 is 1,
the sum of digits of 2 is 2,
the sum of digits of 3 is 3,
the sum of digits of 12 is 3,
the sum of digits of 23 is 5,
the sum of digits of 123 is 6.
Hence, the answer is 1.

For second test case,
The substrings are 1, 2, 3, 4, 12, 23, 34, 123, 234, 1234.
The sum of digits of 1 is 1,
the sum of digits of 2 is 2,
the sum of digits of 3 is 3,
the sum of digits of 4 is 4,
the sum of digits of 12 is 3,
the sum of digits of 23 is 5,
the sum of digits of 34 is 7,
the sum of digits of 123 is 6,
the sum of digits of 234 is 9,
the sum of digits of 1234 is 10.
Hence, the answer is 4."
Write a python function to find smallest number in a list.,"def smallest_number(numbers):
    smallest = numbers[0]
    for number in numbers:
        if number < smallest:
            smallest = number
    return smallest

numbers = [10, 20, 30, 40, 50]
print(smallest_number(numbers))"
Write a function to find the maximum difference between available pairs in the given tuple list.,"Input:

[(1, 2), (2, 3), (3, 4), (4, 5)]

Output:

2

Explanation:

The maximum difference between available pairs is 2."
Write a function to sort a list of tuples using the second value of each tuple.,"For example:

Input: [('a', 2), ('b', 1), ('c', 3)]
Output: [('b', 1), ('a', 2), ('c', 3)]

""""""


def sort_tuples(tuples):
    return sorted(tuples, key=lambda x: x[1])


print(sort_tuples([('a', 2), ('b', 1), ('c', 3)]))"
Write a function to flatten a list and sum all of its elements.,"Example:

input: [[1, 2, [3]], 4]
output: 10"
Write a python function to count the number of positive numbers in a list.,"Sample List : [1,2,3,4,5,-1,-2,-3,-4,-5]
Expected Result : 5

""""""

def count_positive(lst):
    count = 0
    for num in lst:
        if num > 0:
            count += 1
    return count

# Test the function
lst = [1,2,3,4,5,-1,-2,-3,-4,-5]
print(count_positive(lst))  # Output: 5


""""""

Q2.

Write a Python program to get the largest number from a list without using max().

""""""

def largest_number(lst):
    largest = lst[0]
    for num in lst:
        if num > largest:
            largest = num
    return largest

# Test the function
lst = [1,2,3,4,5,-1,-2,-3,-4,-5]
print(largest_number(lst))  # Output: 5


""""""

Q3.

Write a Python program to remove duplicates from a list.

""""""

def remove_duplicates(lst):
    unique_lst = []
    for item in lst:
        if item not in unique_lst:
            unique_lst.append(item)
    return unique_lst

# Test the function
lst = [1,2,3,4,5,1,2,3,4,5]
print(remove_duplicates(lst))  # Output: [1, 2, 3, 4, 5]


""""""

Q4.

Write a Python program to check a list is empty or not.

""""""

def is_empty(lst):
    return len(lst) == 0

# Test the function
lst1 = []
lst2 = [1,2,3]
print(is_empty(lst1))  # Output: True
print(is_empty(lst2))  # Output: False


""""""

Q5.

Write a Python program to clone or copy a list."
Write a function to find the number of ways to partition a set of Bell numbers.,"Input:

The first line of input contains an integer T denoting the number of test cases.
The first line of each test case is N.

Output:

Print the number of ways to partition the set of Bell numbers.

Constraints:

1 ≤ T ≤ 100
1 ≤ N ≤ 100

Example:

Input:
2
2
3

Output:
1
2

Explanation:
Testcase 1: There is only one way to partition the set of Bell numbers.
Testcase 2: There are two ways to partition the set of Bell numbers.


*/

#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <list>
#include <ctime>
#include <climits>
#include <cctype>
#include <cfloat>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <bitset>
#include <functional>
#include <numeric>
#include <utility>
#include <limits>
#include <tuple>
#include <array>
#include <initializer_list>
#include <type_traits>
#include <forward_list>
#include <vector>
#include <deque>
#include <list>
#include <map>
#include <set>
#include <stack>
#include <queue>
#include <unordered_map>
#include <unordered_set>
#include <cstring>
#include <string>
#include <sstream>
#include <iomanip>
#include <ios>
#include <locale>
#include <clocale>
#include <cstdio>
#include <cctype>
#include <cstd"
Write a python function to check whether the given array is monotonic or not.,"An array is monotonic if all the elements from the second element to last element are either all greater than or smaller than the first element.

For example:

monotonic([1,2,3,4,5])

Output:

True

monotonic([5,4,3,2,1])

Output:

True

monotonic([1,2,3,4,1])

Output:

False

monotonic([1,2,3,2,1])

Output:

False

monotonic([1,2,3,3,2,1])

Output:

False

monotonic([1,2,3,4,5,6,7,8,9,10])

Output:

True

monotonic([10,9,8,7,6,5,4,3,2,1])

Output:

True

monotonic([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])

Output:

True

monotonic([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30])

Output:

True

monotonic([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46"
Write a function to check whether a list contains the given sublist or not.,"Example:

Input:

list1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

list2 = [1, 2, 3, 4]

Output:

True

Explanation:

The sublist [1, 2, 3, 4] is present in the list1.

Input:

list1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

list2 = [1, 2, 3, 4, 5]

Output:

False

Explanation:

The sublist [1, 2, 3, 4, 5] is not present in the list1."
Write a function to find whether all the given tuples have equal length or not.,"Input:

tuple1 = (‘a’, ‘b’, ‘c’)

tuple2 = (‘a’, ‘b’)

tuple3 = (‘a’, ‘b’, ‘c’, ‘d’)

Output:

False

Explanation:

All the given tuples have different length."
Write a function to sort a list of elements.,"Example:

Input: [1, 2, 3, 4, 5]

Output: [5, 4, 3, 2, 1]

Input: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

Output: [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]

Input: [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]

Output: [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]

Input: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]

Output: [20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]

Input: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]

Output: [25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4"
Write a python function to check whether the given number can be represented as the difference of two squares or not.,"Input:

n = 10

Output:

True

Explanation:

10 = 3^2 - 1^2

Input:

n = 16

Output:

False

Explanation:

16 cannot be represented as the difference of two squares.

Input:

n = 25

Output:

True

Explanation:

25 = 5^2 - 1^2

Input:

n = 3

Output:

True

Explanation:

3 = 1^2 - 1^2"
Write a function to check whether it follows the sequence given in the patterns array.,"In case a false is encounter then terminate the program and return false.

Examples
isValid([""a"", ""a"", ""a"", ""a""], [""abba"", ""bbaa""]) ➞ true

isValid([""n"", ""s"", ""n"", ""s"", ""n"", ""s"", ""n"", ""s"", ""n"", ""s""], [""snn"", ""nnn"", ""sss""]) ➞ false

isValid([""b"", ""c"", ""b"", ""a""], [""aab"", ""bba"", ""aba""]) ➞ false

Notes
All tests will include only two valid patterns.
*/

#include <iostream>
#include <string>
#include <vector>

using namespace std;

bool isValid(vector<string> arr, vector<string> patterns)
{
    for (int i = 0; i < arr.size(); i++)
    {
        if (arr[i] != patterns[0][i % patterns[0].size()])
        {
            return false;
        }
    }
    return true;
}

int main()
{
    vector<string> arr = {""a"", ""a"", ""a"", ""a""};
    vector<string> patterns = {""abba"", ""bbaa""};
    cout << isValid(arr, patterns) << endl;
    return 0;
}"
Write a function to find tuples which have all elements divisible by k from the given list of tuples.,"Input Format:

The first line of input contains an integer n, the number of tuples.

The next n lines contains the elements of the tuple with space separated integers.

The last line contains the value of k.

Output Format:

Print the list of tuples which have all elements divisible by k.

Sample Input:

3

1 2 3

4 5 6

7 8 9

2

Sample Output:

[(4, 5, 6), (8, 9)]

Explanation:

The first tuple (1,2,3) does not have all the elements divisible by 2.

The second tuple (4,5,6) has all the elements divisible by 2.

The third tuple (7,8,9) does not have all the elements divisible by 2.

Hence the output is [(4,5,6), (8,9)]."
Write a python function to find whether a number is divisible by 11.,"Input:

11

Output:

True

Explanation:

11 is divisible by 11."
Write a python function to check whether the length of the word is odd or not.,"Sample Input:

['abc', 'def', 'ghi', 'jkl']

Sample Output:

['abc', 'ghi']

Explanation:

The length of the word 'abc' is 3.
The length of the word 'def' is 3.
The length of the word 'ghi' is 3.
The length of the word 'jkl' is 3.

The words with odd length are 'abc' and 'ghi'."
Write a function to find the nth tetrahedral number.,"A tetrahedral number is a number of the form (n)(n + 1)(n + 2)/6, where n is a non-negative integer.

Examples
tetra(2) ➞ 4

tetra(5) ➞ 35

tetra(6) ➞ 56
Notes
0 is the 0th tetrahedral number.
""""""


def tetra(n):
    return n * (n + 1) * (n + 2) // 6


print(tetra(2))
print(tetra(5))
print(tetra(6))"
Write a function to find the volume of a sphere.,
Write a python function to find the character made by adding the ASCII value of all the characters of the given string modulo 26.,"Input Format:

The first line of input contains the string

Output Format:

The output contains the character made by adding the ASCII value of all the characters of the given string modulo 26.

Sample Input:

abcd

Sample Output:

d

Explanation:

The ASCII value of a is 97, b is 98, c is 99 and d is 100. The sum of these values is 392. The modulo of 392 by 26 is 13. The character corresponding to 13 is d.

Sample Input:

abcd

Sample Output:

d

Explanation:

The ASCII value of a is 97, b is 98, c is 99 and d is 100. The sum of these values is 392. The modulo of 392 by 26 is 13. The character corresponding to 13 is d.

Sample Input:

abcd

Sample Output:

d

Explanation:

The ASCII value of a is 97, b is 98, c is 99 and d is 100. The sum of these values is 392. The modulo of 392 by 26 is 13. The character corresponding to 13 is d.

Sample Input:

abcd

Sample Output:

d

Explanation:

The ASCII value of a is 97, b is 98, c is 99 and d is 100. The sum of these values is 392. The modulo of 392 by 26 is 13. The character corresponding to 13 is d.

Sample Input:

abcd

Sample Output:

d

Explanation:

The ASCII value of a is 97, b is 98, c is 99 and d is 100. The sum of these values is 392. The modulo of 392 by 26 is 13. The character corresponding to 13 is d"
Write a function to find the nth number in the newman conway sequence.,"The newman_conway function should return a list of the Newman Conway numbers from 1 to n.

The function should return a list of the Newman Conway numbers which are equal to the input number.

If input number is less than 1 then raise a ValueError.

If input is equal to 1 then return [1].

If the input is equal to 2 then return [1, 1].

The first 10 numbers of the sequence are:

1, 1, 2, 2, 3, 4, 4, 5, 6, 7, ...

You can read more about this sequence on Wikipedia.

For example:

newman_conway(3) should return [1, 1, 2]
newman_conway(10) should return [1, 1, 2, 2, 3, 4, 4, 5, 6, 7]

""""""


def newman_conway(num):
    """"""Returns a list of the Newman Conway numbers for the given value.
    """"""
    if num < 1:
        raise ValueError(""Input must be greater than 0"")

    if num == 1:
        return [1]

    if num == 2:
        return [1, 1]

    sequence = [1, 1]

    for i in range(2, num):
        sequence.append(sequence[sequence[i - 1] - 1] + sequence[i - sequence[i - 1] - 1])

    return sequence


print(newman_conway(10))"
Write a function to find the surface area of a sphere.,
Write a function to find nth centered hexagonal number.,"Centered hexagonal number is a centered figurate number that represents the number of dots in a regular hexagon with n dots on each side, with all dots centered.

For example, the first six centered hexagonal numbers are:

1, 6, 15, 28, 45, 66, ..."
Write a function to merge three dictionaries into a single dictionary.,"def merge_dicts(*dicts):
    result = {}
    for d in dicts:
        result.update(d)
    return result

print(merge_dicts({'a': 1}, {'b': 2}, {'c': 3}))"
"Write a function to get the frequency of all the elements in a list, returned as a dictionary.","Example:

Input: [1, 2, 3, 2, 1, 3, 4, 5, 4, 5, 4]

Output: {1: 2, 2: 2, 3: 2, 4: 3, 5: 2}"
Write a function to find the closest smaller number than n.,"Example:

Input: 123456789
Output: 12345678

Input: 12345678
Output: 1234567

Input: 1234567
Output: 123456

Input: 123456
Output: 12345

Input: 12345
Output: 1234

Input: 1234
Output: 123

Input: 123
Output: 12

Input: 12
Output: 1

Input: 1
Output: 0

Input: 0
Output: 0

Input: 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
Write a python function to find the length of the longest word.,"Sample Input

1

Sample Output

6

Explanation

Longest word is 'GeeksforGeeks' of length 13"
Write a function to check if a string is present as a substring in a given list of string values.,"Input:

list_of_strings = [""Rashmi"", ""Rashmi Sharma"", ""Sharmaji"", ""Rashmi Sharmaji""]

string = ""Rashmi Sharmaji""

Output:

True

Explanation:

As Rashmi Sharmaji is present in the list of strings, the function returns True."
Write a function to check whether the given number is undulating or not.,"Undulating number is a number in which all adjacent digits in the number are different.

Input Format

First line contains an integer T, the number of test cases.

Next T lines contains an integer N.

Constraints

1 <= T <= 100

1 <= N <= 1000000000

Output Format

Print ""Yes"" if the number is undulating otherwise print ""No"".

Sample Input 0

3
123456
1234567
12345678
Sample Output 0

Yes
No
Yes
Explanation 0

For first test case, all adjacent digits are different.

For second test case, 6 and 7 are adjacent digits.

For third test case, all adjacent digits are different.

Sample Input 1

2
123456789
1234567890
Sample Output 1

No
Yes
Explanation 1

For first test case, 9 and 0 are adjacent digits.

For second test case, all adjacent digits are different.

Sample Input 2

2
12345678901234567890
123456789012345678901
Sample Output 2

No
Yes
Explanation 2

For first test case, 0 and 1 are adjacent digits.

For second test case, all adjacent digits are different.

Sample Input 3

2
123456789012345678901234567890
1234567890123456789012345678901234567890
Sample Output 3

No
Yes
Explanation 3

For first test case, 0 and 1 are adjacent digits.

For second test case, all adjacent digits are different.

Sample Input 4

2
12"
Write a function to calculate the value of 'a' to the power 'b'.,"Test Data :
((a, b), expected) [
((0, 0), 1),
((1, 1), 1),
((2, 2), 4),
((3, 3), 27),
((4, 4), 256),
((5, 5), 3125),
((10, 10), 10000000000),
((2, 10), 1024),
((10, 2), 100),
((2, 15), 32768),
((5, 2), 25),
((5, 4), 625),
((100, 0), 1),
((100, 1), 100),
((999, 0), 1),
((999, 1), 999),
((999, 2), 998001),
((999, 3), 9970001001),
((999, 4), 996000000010001),
((999, 5), 995000000000000100001),
((999, 6), 9940000000000000000000001),
((999, 7), 99300000000000000000000000001),
((999, 8), 992000000000000000000000000000001),
((999, 9), 9910000000000000000000000000000000001),
((999, 10), 99000000000000000000"
"Given a list of tuples, write a function that returns the first value of the tuple with the smallest second value.","Examples

min_value([(0, 1), (1, 2), (4, 1), (2, -1), (3, -2)]) ➞ 4

min_value([(0, 1), (1, 2), (4, 1), (2, -1), (3, -2), (0, 0)]) ➞ 3

min_value([(0, 1), (1, 2), (4, 1), (2, -1), (3, -2), (0, 0), (0, 1)]) ➞ 0

Notes

All tuples will be unique."
Write a python function to find the length of the smallest list in a list of lists.,"Sample Input
[[1,2,3],[4,5],[6,7,8,9]]

Sample Output
2

Explanation
The smallest list in the list of lists is [4,5] which has a length of 2."
Write a python function to find the number of divisors of a given integer.,"Input: 10
Output: 4

Input: 100
Output: 9

Input: 1000
Output: 16

Input: 10000
Output: 25

Input: 100000
Output: 33

Input: 1000000
Output: 34

Input: 10000000
Output: 35

Input: 100000000
Output: 36

Input: 1000000000
Output: 37

Input: 10000000000
Output: 38

Input: 100000000000
Output: 39

Input: 1000000000000
Output: 40

Input: 10000000000000
Output: 41

Input: 100000000000000
Output: 42

Input: 1000000000000000
Output: 43

Input: 10000000000000000
Output: 44

Input: 100000000000000000
Output: 45

Input: 1000000000000000000
Output: 46

Input: 10000000000000000000
Output: 47

Input: 100000000000000000000
Output: 48

Input: 1000000000000000000000
Output: 49

Input: 10000000000000000000000
Output:"
"Write a function to find frequency of each element in a flattened list of lists, returned in a dictionary.","Example:

flattened_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

frequency_of_each_element(flattened_list)

{1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 9: 1}"
Write a function to multiply all the numbers in a list and divide with the length of the list.,"Example:

Input: [1, 2, 3, 4]
Output: 2.5

Input: [1, 2, 3, 4, 5]
Output: 3

Input: [1, 2, 3, 4, 5, 6]
Output: 3.5

Input: [1, 2, 3, 4, 5, 6, 7]
Output: 4

Input: [1, 2, 3, 4, 5, 6, 7, 8]
Output: 4.5

Input: [1, 2, 3, 4, 5, 6, 7, 8, 9]
Output: 5

Input: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
Output: 5.5

Input: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
Output: 6

Input: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
Output: 6.5

Input: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
Output: 7

Input: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
Output: 7.5

Input: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
Output: 8

Input: [1, 2, 3, 4, 5, 6, 7,"
"Write a function to convert the given decimal number to its binary equivalent, represented as a string with no leading zeros.","Examples
decimalToBinary(10) ➞ ""1010""

decimalToBinary(1) ➞ ""1""

decimalToBinary(5) ➞ ""101""
Notes
All numbers will be whole numbers.
*/

function decimalToBinary(num) {
  let binary = """";
  while (num > 0) {
    binary = (num % 2) + binary;
    num = Math.floor(num / 2);
  }
  return binary;
}

console.log(decimalToBinary(10));
console.log(decimalToBinary(1));
console.log(decimalToBinary(5));"
"Write a function to find the next smallest palindrome of a specified integer, returned as an integer.","For example:

nextSmallestPalindrome(808) => 818
nextSmallestPalindrome(922) => 933
nextSmallestPalindrome(1234) => 1331
nextSmallestPalindrome(999) => 1001
nextSmallestPalindrome(1221) => 1331
nextSmallestPalindrome(1000) => 1001
nextSmallestPalindrome(999999) => 1000001
nextSmallestPalindrome(1000000) => 1000001
nextSmallestPalindrome(9999999) => 10000001
nextSmallestPalindrome(989990) => 9900099
nextSmallestPalindrome(53535) => 54445
nextSmallestPalindrome(99999999) => 100000001
nextSmallestPalindrome(100000000) => 100000001
nextSmallestPalindrome(999999999) => 1000000001
nextSmallestPalindrome(9999999949999999) => 10000000050000001
nextSmallestPalindrome(9999999959999999) => 10000000060000001
nextSmallestPalindrome(9999999999999999) => 10000000000000001
nextSmallestPalindrome(9999999998999999) => 10000000009000001
nextSmallestPalindrome(9999999999999997) => 100000"
Write a function to find the kth element in the given array using 1-based indexing.,"Input
The first line of the input contains two integers n and k (1≤n≤1000, 1≤k≤n).

The second line of the input contains n integers a1,a2,…,an (1≤ai≤109).

Output
Print the kth element of the given array.

Examples
inputCopy
5 3
1 2 3 4 5
outputCopy
3
inputCopy
4 2
1 2 3 4
outputCopy
2
inputCopy
10 10
1 2 3 4 5 6 7 8 9 10
outputCopy
10
Note
In the first sample the third element is 3.

In the second sample the second element is 2.

In the third sample the tenth element is 10.
*/

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int main()
{
    int n, k;
    cin >> n >> k;
    vector<int> v(n);
    for (int i = 0; i < n; i++)
    {
        cin >> v[i];
    }
    sort(v.begin(), v.end());
    cout << v[k - 1] << endl;
    return 0;
}"
Write a function to convert a snake case string to camel case string.,"Examples
snakeToCamel(""hello_world"") ➞ ""helloWorld""

snakeToCamel(""is_modal_open"") ➞ ""isModalOpen""

snakeToCamel(""get_element_by_id"") ➞ ""getElementById""
Notes
Test input will always be a valid snake case string.
""""""


def snake_to_camel(txt):
    return ''.join(word.title() for word in txt.split('_'))


print(snake_to_camel(""hello_world""))
print(snake_to_camel(""is_modal_open""))
print(snake_to_camel(""get_element_by_id""))"
"Write a function to find the Eulerian number a(n, m).","Eulerian number is a generalization of factorial that begins as follows:

a(n, 0) = 0, for n >= 0
a(n, 1) = 1, for n >= 0
a(n, m) = (m * a(n - 1, m) + a(n - 1, m - 1)) / n, for n >= 1, m >= 1"
Write a function to sort each sublist of strings in a given list of lists.,"Example:

Input: [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']]
Output: [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']]

Explanation: The sublists are already sorted.

Input: [['c', 'b', 'a'], ['f', 'e', 'd'], ['i', 'h', 'g']]
Output: [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']]

Explanation: The sublists are sorted in reverse alphabetical order.

Input: [['a', 'c', 'b'], ['d', 'f', 'e'], ['g', 'i', 'h']]
Output: [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']]

Explanation: The sublists are sorted in alphabetical order.

Input: [['c', 'a', 'b'], ['f', 'd', 'e'], ['h', 'i', 'g']]
Output: [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']]

Explanation: The sublists are sorted in reverse alphabetical order.

Input: [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']]
Output: [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']]

Explanation: The sublists are already sorted.

Input: [['c', 'b', 'a'], ['f', 'e', 'd'], ['i', 'h', 'g']]
Output: [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']]

Explanation: The sublists are sorted in reverse alphabetical order.

Input: [['a', 'c', 'b'], ['d', 'f', '"
Write a python function to count true booleans in the given list.,"def count_true(lst):
    count = 0
    for i in lst:
        if i == True:
            count += 1
    return count


print(count_true([True, False, True, True, False, True, False, True, True, False]))"
Write a function to append the given list to the given tuples.,"Input:

tuples = [(1, 2, 3), (4, 5, 6), (7, 8, 9)]

list = [10, 11, 12]

Output:

[(1, 2, 3, 10, 11, 12), (4, 5, 6, 10, 11, 12), (7, 8, 9, 10, 11, 12)]"
Write a function to merge three lists into a single sorted list.,"Input:

list1 = [1, 3, 5, 7, 9]

list2 = [2, 4, 6, 8, 10]

list3 = [11, 13, 15, 17, 19]

Output:

[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19]"
Write a python function to find the number of numbers with an odd value when rotating a binary string the given number of times.,"Example 1:

Input:

A = ""101101101""

B = 2

Output:

6

Explanation:

After rotating the binary string once, we have ""101101101""

After rotating the binary string twice, we have ""101101101""

After rotating the binary string thrice, we have ""101101101""

After rotating the binary string four times, we have ""101101101""

After rotating the binary string five times, we have ""101101101""

After rotating the binary string six times, we have ""101101101""

After rotating the binary string seven times, we have ""101101101""

After rotating the binary string eight times, we have ""101101101""

After rotating the binary string nine times, we have ""101101101""

After rotating the binary string ten times, we have ""101101101""

Example 2:

Input:

A = ""111111111""

B = 3

Output:

1

Explanation:

After rotating the binary string once, we have ""111111111""

After rotating the binary string twice, we have ""111111111""

After rotating the binary string thrice, we have ""111111111""

After rotating the binary string four times, we have ""111111111""

After rotating the binary string five times, we have ""111111111""

After rotating the binary string six times, we have ""111111111""

After rotating the binary string seven times, we have ""111111111""

After rotating the binary string eight times, we have ""111111111""

After rotating the binary string nine times, we have ""111"
Write a function to find the common elements in given nested lists.,"Example:

Input:

[[1, 2, 3, 4, 5], [2, 4, 5, 8, 10], [3, 5, 7, 9, 11], [1, 3, 5, 7, 9]]
Output:

[5]
""""""


def common_elements(lists):
    return list(set.intersection(*map(set, lists)))


print(common_elements([[1, 2, 3, 4, 5], [2, 4, 5, 8, 10], [3, 5, 7, 9, 11], [1, 3, 5, 7, 9]]))"
Write a function to check if a string represents an integer or not.,"Example

Input: ""123""
Output: true

Input: ""123.45""
Output: false

Input: ""123.0""
Output: true

Input: ""123e2""
Output: false

Input: ""123e+2""
Output: false

Input: ""123e-2""
Output: true

Input: ""123e2.0""
Output: false

Input: ""123e2.5""
Output: false

Input: ""123e2.5e2""
Output: false

Input: ""123e2.5e-2""
Output: true

Input: ""123e2.5e-2.0""
Output: false

Input: ""123e2.5e-2.5""
Output: false

Input: ""123e2.5e-2.5e2""
Output: false

Input: ""123e2.5e-2.5e-2""
Output: true

Input: ""123e2.5e-2.5e-2.0""
Output: false

Input: ""123e2.5e-2.5e-2.5""
Output: false

Input: ""123e2.5e-2.5e-2.5e2""
Output: false

Input: ""123e2.5e-2.5e-2.5e-2""
Output: true

Input: ""123e2.5e-2.5e-2.5e-2.0""
Output: false

Input: ""123e2.5e-2.5e-2.5e-2.5""
Output: false

Input: ""123e2.5e-2.5e-2.5e-2.5e2""
Output: false

Input: ""123e2.5e-2.5e-2.5e-2.5e-2""
Output: true

Input: ""1"
Write a function to check whether all dictionaries in a list are empty or not.,"Examples

is_empty_dict([{}]) ➞ True

is_empty_dict([{}, {}]) ➞ True

is_empty_dict([{1: 2}, {}]) ➞ False

Notes

Return False if you get an empty list."
Write a function to convert a given tuple of positive integers into a single integer.,"Example:

Input: (1, 2, 3)

Output: 123

Input: (10, 20)

Output: 1020"
Write a function to convert all possible convertible elements in a list of lists to floats.,"Examples
convert_to_float([[""1.2"", ""2.6"", ""3.3""], [""7"", ""2"", ""3.4""]]) ➞ [[""1.2"", ""2.6"", ""3.3""], [""7"", ""2"", ""3.4""]]

convert_to_float([[""5"", ""7"", ""8.7"", ""9.9""], [""5"", ""7"", ""8.1"", ""9.32""]]) ➞ [[""5"", ""7"", ""8.7"", ""9.9""], [""5"", ""7"", ""8.1"", ""9.32""]]

convert_to_float([[""1.1"", ""2.2""], [""1.1"", ""3.3""]]) ➞ [[""1.1"", ""2.2""], [""1.1"", ""3.3""]]

convert_to_float([[""5"", ""7""], [""7"", ""9""]]) ➞ [[""5"", ""7""], [""7"", ""9""]]

convert_to_float([[""1"", ""2"", ""3""], [""1"", ""2"", ""3""]]) ➞ [[""1"", ""2"", ""3""], [""1"", ""2"", ""3""]]

Notes
N/A"
Write a function to convert a string to a list of strings split on the space character.,"Examples
split_into_list(""Hello World"") ➞ [""Hello"", ""World""]

split_into_list(""I love Python"") ➞ [""I"", ""love"", ""Python""]

split_into_list(""I love Python so much"") ➞ [""I"", ""love"", ""Python"", ""so"", ""much""]

Notes
There will be no punctuation in each string."
Write a python function to find the element that appears only once in a sorted array.,"All other elements appear exactly twice.

Input: arr[] = {1, 1, 3, 3, 4, 5, 5, 7, 7, 8, 8}
Output: 4

Input: arr[] = {1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8}
Output: 8

Input: arr[] = {1, 3, 3, 4, 4, 5, 5, 7, 7, 8, 8}
Output: 1

Input: arr[] = {1, 1, 3, 3, 4, 5, 5, 7, 7, 8, 8}
Output: -1"
Write a function to find the maximum absolute product between numbers in pairs of tuples within a given list.,"Input: [(1, 2), (3, 4), (5, 6)]
Output: 30

Input: [(1, 2), (3, 4), (5, 6), (7, 8)]
Output: 40

Input: [(1, 2), (3, 4), (5, 6), (7, 8), (9, 10)]
Output: 50

Input: [(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12)]
Output: 60

Input: [(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12), (13, 14)]
Output: 70

Input: [(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16)]
Output: 80

Input: [(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18)]
Output: 90

Input: [(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20)]
Output: 100

Input: [(1, 2), (3, 4), (5, 6), (7, 8), (9, 10), (11, 12), (13, 14), (15, 16), (17, 18), (19, 20"
Write a function to sum all amicable numbers from 1 to a specified number.,"Amicable numbers are two different numbers so related that the sum of the proper divisors of each is equal to the other number. (A proper divisor of a number is a positive factor of that number other than the number itself. For example, the proper divisors of 6 are 1, 2, and 3.)

Example
For n = 5000, the output should be
sumAmicableNumbers(n) = 5020.

12 is amicable because the proper divisors of 12 are (1, 2, 3, 4, 6) and the sum of these divisors is 16, the second number is 16 and the sum of the proper divisors of 16 is 1 + 2 + 4 + 8 = 15, which is equal to the first number.
10 is amicable because the proper divisors of 10 are (1, 2, 5) and the sum of these divisors is 8, the second number is 8 and the sum of the proper divisors of 8 is 1 + 2 + 4 = 7, which is equal to the first number.

Input/Output

[input] integer n

Constraints: 1 ≤ n ≤ 5000.

[output] an integer

The sum of all amicable numbers from 1 to n."
Write a function to get the angle of a complex number.,
Write a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.,"Input:

The first line of input contains an integer T denoting the number of test cases.
The first line of each test case is the string S.

Output:

Print the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.

Constraints:

1 ≤ T ≤ 100
1 ≤ |S| ≤ 1000

Example:

Input:
2
11000010001
11111100000

Output:
6
0

Explanation:
Testcase 1: The maximum difference of 0s and 1s is 6."
Write a python function to find the sum of common divisors of two given numbers.,"Input:

Input first number: 10

Input second number: 20

Output:

Sum of common divisors is 8

Explanation:

Common divisors of 10 and 20 are 1, 2 and 5.

Sample Input:

10

20

Sample Output:

8

Explanation:

Common divisors of 10 and 20 are 1, 2 and 5.

Hint:

Use the function to find the common divisors of two numbers.

Use the function to find the sum of the common divisors.

Use the function to print the sum of the common divisors.

Use the function to find the sum of the common divisors.

Use the function to print the sum of the common divisors.

Use the function to find the sum of the common divisors.

Use the function to print the sum of the common divisors.

Use the function to find the sum of the common divisors.

Use the function to print the sum of the common divisors.

Use the function to find the sum of the common divisors.

Use the function to print the sum of the common divisors.

Use the function to find the sum of the common divisors.

Use the function to print the sum of the common divisors.

Use the function to find the sum of the common divisors.

Use the function to print the sum of the common divisors.

Use the function to find the sum of the common divisors.

Use the function to print the sum of the common divisors.

Use the function to find the sum of the common divisors.

Use the function to print the sum of the common divisors.

Use the function to find the sum of the common divisors.

Use the function to print the sum of the common divisors.

Use the function to find the sum of the common divisors.

Use the function to print the sum of the common divisors.

Use the function to find the sum of the common divisors.

Use the function"
Write a function to multiply two integers.,"The function should return an integer.

Example:

multiply(2, 3) = 6
multiply(1, 1) = 1
multiply(0, 4) = 0
multiply(0, 0) = 0

*/

function multiply(a, b) {
  return a * b;
}"
Write a function to find words that are longer than n characters from a given list of words.,"def filter_long_words(words, n):
    return [word for word in words if len(word) > n]


print(filter_long_words(['hello', 'world', 'python', 'programming'], 5))"
Write a function to calculate whether the matrix is a magic square.,"A magic square is a square of numbers in which the sum of each row, column, and diagonal is the same.

For example, the following is a magic square:

17 24 1 8 15
23 5 7 14 16
4 6 13 20 22
10 12 19 21 3
11 18 25 2 9

Write a function to calculate whether the matrix is a magic square."
Write a function to find the item with maximum frequency in a given list.,"Input: [1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,"
Write a python function to reverse only the vowels of a given string (where y is not a vowel).,"Input:

""hello world""

Output:

""hollo werld""

Input:

""aeroplane""

Output:

""eroplaane""

Input:

""aeroplane""

Output:

""eroplaane""

Input:

""aeroplane""

Output:

""eroplaane""

Input:

""aeroplane""

Output:

""eroplaane""

Input:

""aeroplane""

Output:

""eroplaane""

Input:

""aeroplane""

Output:

""eroplaane""

Input:

""aeroplane""

Output:

""eroplaane""

Input:

""aeroplane""

Output:

""eroplaane""

Input:

""aeroplane""

Output:

""eroplaane""

Input:

""aeroplane""

Output:

""eroplaane""

Input:

""aeroplane""

Output:

""eroplaane""

Input:

""aeroplane""

Output:

""eroplaane""

Input:

""aeroplane""

Output:

""eroplaane""

Input:

""aeroplane""

Output:

""eroplaane""

Input:

""aeroplane""

Output:

""eroplaane""

Input:

""aeroplane""

Output:

""eroplaane""

Input:

""aeroplane""

Output:

""eroplaane""

Input:

""aeroplane""

Output:

""eroplaane""

Input:

""aeroplane""

Output:

""eroplaane""

Input:

""aeroplane""

Output:

""eroplaane""

Input:

""aer"
Write a function to convert a tuple to a string.,"Input:

tuple = ('e', 'x', 'e', 'r', 'c', 'i', 's', 'e', 's')

Output:

'exercises'

""""""


def convert_tuple_to_string(tuple):
    return ''.join(tuple)


print(convert_tuple_to_string(('e', 'x', 'e', 'r', 'c', 'i', 's', 'e', 's')))"
Write a function to calculate the sum of the negative numbers of a given list of numbers.,"Example:

sumNegative([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15])

returns -59"
Write a function to find the nth hexagonal number.,"Hexagonal number is a number that's represented in hexadecimal and has the following pattern: 1, 6, 15, 28, 45, 66, 91, 120, 153, 190, 231, 276, 325, 378, 435, 496, 561, 630, 703, 780, 861, 946, 1035, 1128, 1225, 1326, 1431, 1540, 1653, 1770, 1891, 2016, 2145, 2278, 2415, 2556, 2701, 2850, 3003, 3160, 3321, 3486, 3655, 3828, 4005, 4186, 4371, 4560, 4753, 4950, 5151, 5356, 5565, 5778, 5995, 6216, 6441, 6670, 6903, 7140, 7381, 7626, 7875, 8128, 8385, 8646, 8911, 9180, 9453, 9730, 10011, 10296, 10585, 10878, 11175, 11476, 11781, 12090, 12403, 12720, 13041, 13366, 13695, 14028,"
Write a function to find the ratio of zeroes to non-zeroes in an array of integers.,"Example:

Input: [0, 2, 0, 5, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,"
Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.,"Input:

The first line of input contains an integer T denoting the number of test cases. Then T test cases follow. The first line of each test case contains an integer N.

Output:

Print 1 if the number can be represented as sum of non-zero powers of 2, else print 0.

Constraints:

1<=T<=100

1<=N<=103

Example:

Input:

2

1

2

Output:

1

1

Explanation:

For the first test case, 1 can be written as 1 which is a non-zero power of 2.

For the second test case, 2 can be written as 2 which is a non-zero power of 2."
Write a function to find the circumference of a circle.,"Input

The input will be a single line containing a single integer, the radius of the circle.

Output

Output the circumference of the circle with a precision of 6 decimal places.

Sample Input 1 

1
Sample Output 1

6.283185
Sample Input 2 

10
Sample Output 2

62.831853
Hint

The circumference of a circle is 2πr.

*/

#include <iostream>
#include <cmath>
using namespace std;

int main()
{
    double r;
    cin >> r;
    cout << fixed;
    cout.precision(6);
    cout << 2 * M_PI * r << endl;
    return 0;
}"
Write a function to flatten the list of lists into a single set of numbers.,"Example:

flatten([[1, 2, 3], [4, 5, 6], [7, 8, 9]])

returns [1, 2, 3, 4, 5, 6, 7, 8, 9]

flatten([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]])

returns [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]

flatten([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12], [13, 14, 15]])

returns [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]

flatten([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12], [13, 14, 15], [16, 17, 18]])

returns [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]

flatten([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12], [13, 14, 15], [16, 17, 18], [19, 20, 21]])

returns [1, 2, 3, 4, 5, 6, 7, 8, 9,"
Write a function to sort a list of elements.,"Example:

Input: [1, 2, 3, 4, 5]

Output: [5, 4, 3, 2, 1]

Input: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

Output: [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]

Input: [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]

Output: [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]

Input: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]

Output: [20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]

Input: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]

Output: [25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4"
Write a function to count number items that are identical in the same position of three given lists.,"Examples
count_same_ends([1, 2, 3], [5, 2, 3], [5, 2, 3]) ➞ 2

count_same_ends([1, 2], [5, 2], [5, 2]) ➞ 2

count_same_ends([1, 2, 2], [5, 2, 2], [5, 2, 2]) ➞ 3
Notes
Lists will be of same length.
""""""


def count_same_ends(lst1, lst2, lst3):
    return sum(1 for i in range(len(lst1)) if lst1[i] == lst2[i] == lst3[i])


print(count_same_ends([1, 2, 3], [5, 2, 3], [5, 2, 3]))
print(count_same_ends([1, 2], [5, 2], [5, 2]))
print(count_same_ends([1, 2, 2], [5, 2, 2], [5, 2, 2]))"
Write a function to find number of lists present in the given tuple.,"Input:

tuple1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)

Output:

Number of lists present in the tuple: 1"
Write a python function to find the maximum difference between any two elements in a given array.,"Input:

[1, 2, 90, 10, 110]

Output:

109

Explanation:

Maximum difference is between 90 and 110"
"Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.","Examples:

solve(2, 1, 5) ➞ (2, 5)
solve(4, 1, 19) ➞ (4, 4)
solve(22, 1, 88) ➞ (22, 4)
solve(3, 1, 7) ➞ None
Notes:

x and y will be integers.
a, b and n will be between 1 and 1000000000."
Write a function to remove all elements from a given list present in another list.,"Example:

Input:

list1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

list2 = [2, 4, 6, 8]

Output:

[1, 3, 5, 7, 9, 10]

""""""


def remove_elements(list1, list2):
    return [x for x in list1 if x not in list2]


print(remove_elements([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [2, 4, 6, 8]))"
"Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).","Example:

sum(4) // returns 3
sum(5) // returns 5
sum(6) // returns 7
sum(7) // returns 9
sum(8) // returns 11
sum(9) // returns 13
sum(10) // returns 15
sum(11) // returns 17
sum(12) // returns 19
sum(13) // returns 21
sum(14) // returns 23
sum(15) // returns 25
sum(16) // returns 27
sum(17) // returns 29
sum(18) // returns 31
sum(19) // returns 33
sum(20) // returns 35
sum(21) // returns 37
sum(22) // returns 39
sum(23) // returns 41
sum(24) // returns 43
sum(25) // returns 45
sum(26) // returns 47
sum(27) // returns 49
sum(28) // returns 51
sum(29) // returns 53
sum(30) // returns 55
sum(31) // returns 57
sum(32) // returns 59
sum(33) // returns 61
sum(34) // returns 63
sum(35) // returns 65
sum(36) // returns 67
sum(37) // returns 69
sum(38) // returns 71
sum(39) // returns 73
sum(40) // returns 75
sum(41) // returns 77
sum(42) // returns 79
sum(43) // returns 81
sum(44) // returns 83
sum(45) // returns 85
sum(46) // returns 87
sum(47) // returns 89
sum(48) // returns 91
sum(49) // returns 93
sum(50) // returns 95"
Write a function to calculate the area of a regular polygon given the length and number of its sides.,"The formula for the area of a regular polygon is:

area = (n * s^2) / (4 * tan(pi/n))

where n is the number of sides, s is the length of each side, and tan is the tangent function.

The function should return the area as a floating-point number.

Examples

polygonArea(6, 4) ➞ 25.19911411182522

polygonArea(7, 3) ➞ 17.524

polygonArea(20, 6) ➞ 157.49

Notes

    n and s will be integers.
    Round your answer to the nearest tenth.
    If you get stuck on a challenge, find help in the Resources tab.
    If you're really stuck, unlock solutions in the Solutions tab.

*/

#include <stdio.h>
#include <math.h>

double polygonArea(int n, int s)
{
    double area = (n * s * s) / (4 * tan(M_PI / n));
    return round(area * 10) / 10;
}

int main()
{
    printf(""%f\n"", polygonArea(6, 4));
    printf(""%f\n"", polygonArea(7, 3));
    printf(""%f\n"", polygonArea(20, 6));
    return 0;
}"
Write a function to determine if the sum of the divisors of two integers are the same.,"Example:

If the two integers are 6 and 28, then the divisors of 6 are: 1, 2, 3, 6

and the divisors of 28 are: 1, 2, 4, 7, 14, 28

The sum of the divisors of 6 is 16 and the sum of the divisors of 28 is 56.

Therefore, the result is true."
Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive).,"Examples

""abcdefghijklmnopqrstuvwxyz"" ➞ 26

""abccdefghijklmnopqrstuvwxyz"" ➞ 26

""abcdefghijklmnopqrstuvwxyzA"" ➞ 27

""abcdefghijklmnopqrstuvwxyzAB"" ➞ 28

""abcdefghijklmnopqrstuvwxyzABC"" ➞ 29

""abcdefghijklmnopqrstuvwxyzABCD"" ➞ 30

""abcdefghijklmnopqrstuvwxyzABCDE"" ➞ 31

""abcdefghijklmnopqrstuvwxyzABCDEF"" ➞ 32

""abcdefghijklmnopqrstuvwxyzABCDEFG"" ➞ 33

""abcdefghijklmnopqrstuvwxyzABCDEFGH"" ➞ 34

""abcdefghijklmnopqrstuvwxyzABCDEFGHI"" ➞ 35

""abcdefghijklmnopqrstuvwxyzABCDEFGHIJ"" ➞ 36

""abcdefghijklmnopqrstuvwxyzABCDEFGHIJK"" ➞ 37

""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKL"" ➞ 38

""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLM"" ➞ 39

""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMN"" ➞ 40

""abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNO"" ➞ 41

""abcdefghijklmnop"
Write a function that counts the number of pairs of integers in a list that xor to an even number.,"Examples
count_evens([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) ➞ 5

count_evens([1, 3, 5, 7, 9]) ➞ 0

count_evens([2, 4, 6, 8, 10]) ➞ 10

count_evens([2, 2, 2, 2, 2, 2, 2, 2, 2, 2]) ➞ 10
Notes
N/A"
Write a python function to find the smallest power of 2 greater than or equal to n.,"Example:

Input: 12
Output: 16

Input: 17
Output: 32"
Write a function to count the number of occurrences of a number in a given list.,"Example:

Input: [1, 2, 2, 3, 3, 3, 4, 4, 4, 4]

Output: {1: 1, 2: 2, 3: 3, 4: 4}


def count_occurrences(numbers):
    count = {}
    for num in numbers:
        if num in count:
            count[num] += 1
        else:
            count[num] = 1
    return count

numbers = [1, 2, 2, 3, 3, 3, 4, 4, 4, 4]
print(count_occurrences(numbers))"
Write a function to find the sum of numbers in a list within a range specified by two indices.,"Example

For lst = [1, 3, 5, 6, 10, 2, 3, 15], start = 2, and end = 4, the output should be
sumInRange(lst, start, end) = 14.

Input/Output

[execution time limit] 4 seconds (py3)

[input] array.integer lst

A list of integers.

Guaranteed constraints:
1 ≤ lst.length ≤ 105,
-100 ≤ lst[i] ≤ 100.

[input] integer start

An integer that represents the start of the range.

Guaranteed constraints:
0 ≤ start ≤ lst.length - 1.

[input] integer end

An integer that represents the end of the range.

Guaranteed constraints:
start ≤ end ≤ lst.length - 1.

[output] integer

The sum of the elements of lst within the given range."
Write a function to find the perimeter of a regular pentagon from the length of its sides.,
Write a function to count the number of occurence of the string 'std' in a given string.,"Example:

std_count('std_count_std') -> 2
std_count('std_count_std_std') -> 3
std_count('std') -> 1"
Write a function to check if all the elements in tuple have same data type or not.,"Input:

tuple1 = (1, 2, 3, 4, 5)

Output:

True

Explanation:

All the elements in tuple1 are of same data type.

Input:

tuple1 = (1, 2, 3, 4, 5, ""6"")

Output:

False

Explanation:

All the elements in tuple1 are not of same data type."
"Write a function that takes in a sorted array, its length (n), and an element and returns whether the element is the majority element in the given sorted array. (The majority element is the element that occurs more than n/2 times.)","Sample Input
array = [1, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 6, 6, 6, 6, 6, 6]
n = 20
element = 5
Sample Output
true"
Write a python function to count the number of set bits (binary digits with value 1) in a given number.,"Input:

The first line of input contains an integer T denoting the number of test cases.
The first line of each test case is N.

Output:

Print the count of set bits in the given number.

Constraints:

1 ≤ T ≤ 100
1 ≤ N ≤ 1000

Example:

Input:
2
6
11

Output:
2
3

Explanation:
Testcase 1: The binary representation of the given number is 110111 when we do bitwise & of 6 and 1 we get 110111 so the count of the set bit is 2."
Write a python function to remove the characters which have odd index values of a given string.,"Sample String : 'abcdef'
Expected Result : 'ace'


def remove_odd_index(string):
    return string[::2]

print(remove_odd_index('abcdef'))"
Write a function to find minimum of three numbers.,
Write a python function to check whether all the bits are unset in the given range or not.,"Input:

n = 10

l = 1

r = 5

Output:

True

Explanation:

Binary representation of 10 is 1010.

All the bits are unset in the given range.

Input:

n = 15

l = 1

r = 5

Output:

False

Explanation:

Binary representation of 15 is 1111.

All the bits are set in the given range."
"Write a function that takes in an array and an integer n, and re-arranges the first n elements of the given array so that all negative elements appear before positive ones, and where the relative order among negative and positive elements is preserved.","Example:

Input: [1, -2, 3, -4, 5, -6, 7, -8, 9, 10], 5
Output: [1, -2, -4, -6, -8, 3, 5, 7, 9, 10]"
"Write a function that takes in a string and character, replaces blank spaces in the string with the character, and returns the string.","Examples
replaceBlank(""hello world"", ""*"") ➞ ""hello*world""

replaceBlank(""a b c d"", ""."") ➞ ""a.b.c.d""

replaceBlank(""string"", ""+"") ➞ ""string""

Notes
All test cases will have a valid character."
Write a function that takes in a list and an integer n and returns a list containing the n largest items from the list.,"Example:

largest(list, 2) = [10, 9]

largest(list, 3) = [10, 9, 8]

largest(list, 4) = [10, 9, 8, 7]

largest(list, 5) = [10, 9, 8, 7, 6]

largest(list, 6) = [10, 9, 8, 7, 6, 5]

largest(list, 7) = [10, 9, 8, 7, 6, 5, 4]

largest(list, 8) = [10, 9, 8, 7, 6, 5, 4, 3]

largest(list, 9) = [10, 9, 8, 7, 6, 5, 4, 3, 2]

largest(list, 10) = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]

largest(list, 11) = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]

largest(list, 12) = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1]

largest(list, 13) = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2]

largest(list, 14) = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, -1, -2, -3]

largest(list, 15) = [10, 9, 8, 7, 6, 5, 4,"
Write a function to find the lateral surface area of a cylinder.,"The function should take in the radius and height as arguments and return the LSA.

LSA = (2 * pi * radius * height) + (2 * pi * radius^2)

Examples:

cylinderLSA(2, 3) ➞ 75.4

cylinderLSA(1, 1) ➞ 12.57

cylinderLSA(7, 2) ➞ 301.52
Notes:

Use the following constant values:

pi = 3.1415926535897932384626433832795
Round to the nearest hundredth."
Write a function to find the volume of a cube given its side length.,
Write a python function to set all even bits of a given number.,"Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:

Input:"
Write a function that takes in a list of tuples and returns a dictionary mapping each unique tuple to the number of times it occurs in the list.,"Example:

Input: [(1, 2), (2, 3), (1, 2), (3, 4), (1, 2)]
Output: {(1, 2): 3, (2, 3): 1, (3, 4): 1}"
Write a python function to count the number of non-empty substrings of a given string.,"Input string: w3resource

Expected output: 55


def count_substring(str1):
    count = 0
    for i in range(len(str1)):
        for j in range(i, len(str1)):
            count += 1
    return count

print(count_substring(""w3resource""))"
"Write a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m.","For example, if m = 10 and n = 4, the function should return 8, because there are 8 possible sequences:

[2, 4, 6, 8]
[2, 4, 6, 10]
[2, 4, 8, 10]
[2, 6, 8, 10]
[4, 6, 8, 10]
[2, 4, 6, 9]
[2, 4, 8, 9]
[2, 6, 8, 9]"
Write a function that takes in two lists and replaces the last element of the first list with the elements of the second list.,"Example:

list1 = [1, 2, 3, 4, 5]
list2 = [6, 7, 8, 9, 10]

replace_last(list1, list2)

print(list1)

Output: [1, 2, 3, 4, 6, 7, 8, 9, 10]"
Write a function to count the total number of characters in a string.,"Example:

Input: “The quick brown fox jumps over the lazy dog.”

Output: 43

*/

function countCharacters(str) {
  let count = 0;
  for (let i = 0; i < str.length; i++) {
    count++;
  }
  return count;
}

console.log(countCharacters(""The quick brown fox jumps over the lazy dog.""));"
Write a python function to find the next perfect square greater than a given number.,"If the given number is not a perfect square then -1 should be returned.

You may assume the number is non-negative.

NextPerfectSquare(121) --> 144

NextPerfectSquare(625) --> 676

NextPerfectSquare(114) --> -1 since 114 is not a perfect"
"Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.","A bitonic sequence is a sequence of numbers that is first strictly increasing and then strictly decreasing.

Example 1:

Input: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]
Output: 21
Explanation: The bitonic sequence is [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]

Example 2:

Input: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
Output: 21
Explanation: The bitonic sequence is [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]

Example 3:

Input: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
Output: 30
Explanation: The bitonic sequence is [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 6, 7,"
Write a function for computing square roots using the babylonian method.,"The babylonian method is a way to quickly calculate square roots. The basic idea is to start with an initial guess, and then improve the guess by calculating the average of the guess and the quotient of the number and the guess.

For example, if we want to calculate the square root of 13, we can start with a guess of 6. The average of 6 and 13/6 is 8.4, so we guess again with 8.4. The average of 8.4 and 13/8.4 is 9.02, so we guess again with 9.02. The average of 9.02 and 13/9.02 is 9.00013, which is pretty close to the actual square root of 13.

Write a function babylonian(num) that takes a number and returns the square root of the number using babylonian method.

Examples
babylonian(100) ➞ 10

babylonian(8) ➞ 2.8284271247461903

babylonian(64) ➞ 8

Notes
    The tests will include very large numbers.
    The babylonian method is infamous for being slow, so the tests will be very high.
    Round the result to the nearest decimal place.

*/

#include <assert.h>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

double babylonian(double num) {
	// your code goes here
	double guess = 1.0;
	double quotient = num / guess;
	double average = (guess + quotient) / 2.0;
	while (fabs(average - guess) > 0.0000000000000000000000000000000000000000000000000000000000000000000000000000000000"
Write a function to find the length of the longest palindromic subsequence in the given string.,"Input:

The first line of input contains an integer T denoting the number of test cases.
The first line of each test case is S.

Output:

Print the length of the longest palindromic subsequence for each test case in a new line.

Constraints:

1 ≤ T ≤ 100
1 ≤ |S| ≤ 1000

Example:

Input:
2
bbabcbcab
bbbab

Output:
7
4

Explanation:
Testcase 1: Subsequence ""bcbabcb"" is the longest subsequence which is also a palindrome."
Write a function that takes in an integer n and calculates the harmonic sum of n-1.,"The harmonic sum is the sum of reciprocals of the positive integers. It is defined as follows:

n = 1
1

n = 2
1 + 1/2

n = 3
1 + 1/2 + 1/3

n = 4
1 + 1/2 + 1/3 + 1/4

etc.

The return value should be a float representing the sum returned with 3 decimal places.

Examples
harmonicSum(1) ➞ 1.000

harmonicSum(2) ➞ 1.500

harmonicSum(4) ➞ 2.083

harmonicSum(10) ➞ 2.929

Notes
N/A"
Write a function to find the intersection of two arrays.,
Write a python function that takes in a tuple and an element and counts the occcurences of the element in the tuple.,"Sample Input:

tuple1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100)

element = 10

Sample Output:

1"
"Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list.","Examples
insertBefore([1, 2, 3], 4) ➞ [4, 4, 4, 1, 2, 3]

insertBefore([2, 3, 4], 1) ➞ [1, 2, 3, 4]

insertBefore([2, 3, 4], 1) ➞ [1, 2, 3, 4]

insertBefore([2, 3, 4], 1) ➞ [1, 2, 3, 4]

insertBefore([2, 3, 4], 1) ➞ [1, 2, 3, 4]

insertBefore([2, 3, 4], 1) ➞ [1, 2, 3, 4]

insertBefore([2, 3, 4], 1) ➞ [1, 2, 3, 4]

insertBefore([2, 3, 4], 1) ➞ [1, 2, 3, 4]

insertBefore([2, 3, 4], 1) ➞ [1, 2, 3, 4]

insertBefore([2, 3, 4], 1) ➞ [1, 2, 3, 4]

insertBefore([2, 3, 4], 1) ➞ [1, 2, 3, 4]

insertBefore([2, 3, 4], 1) ➞ [1, 2, 3, 4]

insertBefore([2, 3, 4], 1) ➞ [1, 2, 3, 4]

insertBefore([2, 3, 4], 1) ➞ [1, 2, 3, 4]

insertBefore([2, 3, 4], 1) ➞ [1, 2, 3, 4]

insertBefore([2, 3, 4], 1) ➞ [1,"
Write a python function to convert complex numbers to polar coordinates.,
Write a python function that returns the number of integer elements in a given list.,"Sample Input
[1, 2, 3, 4, 5]

Sample Output
5

Explanation
The function should return the number of elements in the list."
"Write a function that takes in a list and length n, and generates all combinations (with repetition) of the elements of the list and returns a list with a tuple for each combination.","Example:

list = [1, 2, 3]
n = 2

combinations(list, n)

Output:

[(1, 1), (1, 2), (1, 3), (2, 1), (2, 2), (2, 3), (3, 1), (3, 2), (3, 3)]"
Write a python function that takes in a non-negative number and returns the number of prime numbers less than the given non-negative number.,"Example:

Input: 10
Output: 4
Explanation: There are 4 prime numbers less than 10, they are 2, 3, 5, 7"
Write a function that takes in two numbers and returns a tuple with the second number and then the first number.,"Examples

first_last([1, 2, 3, 4]) ➞ (4, 1)

first_last([80, 3, 6, 10, 2]) ➞ (2, 80)

first_last([-5, 100]) ➞ (100, -5)

first_last([5, 5]) ➞ (5, 5)

Notes

N/A"
Write a function to maximize the given two tuples.,"Input:

tuple1 = (1, 2, 3, 4, 5)

tuple2 = (6, 7, 8, 9, 10)

Output:

(6, 7, 8, 9, 10)

Explanation:

tuple2 has the maximum sum of elements."
Write a function to find the nth newman–shanks–williams prime number.,"The newman–shanks–williams prime number is a prime number that is the sum of two consecutive composite numbers.

For example, 5 = (2+3) and 11 = (3+5) are the first two newman–shanks–williams prime numbers.

The function should return the nth newman–shanks–williams prime number.

Examples

newmanShanksWilliams(1) ➞ 5

newmanShanksWilliams(2) ➞ 11

newmanShanksWilliams(3) ➞ 17

newmanShanksWilliams(4) ➞ 29

newmanShanksWilliams(5) ➞ 41

newmanShanksWilliams(6) ➞ 53

newmanShanksWilliams(7) ➞ 71

newmanShanksWilliams(8) ➞ 97

newmanShanksWilliams(9) ➞ 127

newmanShanksWilliams(10) ➞ 157

newmanShanksWilliams(11) ➞ 191

newmanShanksWilliams(12) ➞ 229

newmanShanksWilliams(13) ➞ 271

newmanShanksWilliams(14) ➞ 317

newmanShanksWilliams(15) ➞ 367

newmanShanksWilliams(16) ➞ 421

newmanShanksWilliams(17) ➞ 479

newmanShanksWilliams(18) ➞ 541

newmanShanksWilliams(19) ➞ 607

newmanShanksWilliams(20) ➞ 677

newmanShanksWilliams(21) ➞ 751

newmanShanksWilliams(22) ➞ 829"
Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.,"Example:

Input:

tuple1 = (1, 2, 3, 4, 5)

tuple2 = (1, 2, 3, 4, 5)

Output:

(1, 1, 1, 1, 1)

Explanation:

(1, 2, 3, 4, 5) / (1, 2, 3, 4, 5) = (1, 1, 1, 1, 1)"
"Write a function that takes in a list and an integer L and splits the given list into two parts where the length of the first part of the list is L, and returns the resulting lists in a tuple.","If the given list is empty, return an empty tuple.

If the given list does not have enough elements to split into two parts, return the original list in a tuple with an empty list.

If the given integer L is negative or zero, return an empty tuple.

Examples
split_into_two_parts([1, 2, 3, 4, 5], 2) ➞ ([1, 2], [3, 4, 5])

split_into_two_parts([1, 2, 3, 4, 5], 3) ➞ ([1, 2, 3], [4, 5])

split_into_two_parts([1, 2, 3, 4, 5], 4) ➞ ([1, 2, 3, 4], [5])

split_into_two_parts([1, 2, 3, 4, 5], 10) ➞ ([1, 2, 3, 4, 5], [])

split_into_two_parts([], 3) ➞ ([], [])

split_into_two_parts([1, 2, 3, 4, 5], -1) ➞ ([], [])
Notes
Do not hardcode the tuple (e.g. return ([1, 2], [3, 4, 5]) directly)."
Write a function to calculate a dog's age in dog's years.,"The function should accept one argument: dog's age in human years. The function should return the dog's age in dog's years.

The conversion from human to dog years is:

The first two years of a dog's life count as 10.5 dog years each.
Each year following equates to 4 dog years."
"Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.","Examples
split_into_chunks([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 3) ➞ [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10]]

split_into_chunks([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 5) ➞ [[1, 2, 3, 4, 5], [6, 7, 8, 9, 10]]

split_into_chunks([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 1) ➞ [[1], [2], [3], [4], [5], [6], [7], [8], [9], [10]]

split_into_chunks([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 0) ➞ []
Notes
Your function should work with negative n as well.
If n is greater than the number of elements in the list, return a list with the original list inside it.
If n is 0, return an empty list."
Write a function to find the lateral surface area of a cube given its side length.,
Write a python function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.,"Sample Input
5
Sample Output
35
Explanation
The first 5 odd natural numbers are 1, 3, 5, 7, 9.
The square of each of these numbers is 1, 9, 25, 49, 81.
The sum of these squares is 35."
Write a function to find the n'th star number.,"The star number is the sum of the factorial of each digit in the number.

Example

Given 1, return 1

Given 12, return 2

Given 135, return 1

Note

Assume n < 2^31

Challenge

Can you do it in O(log(n)) time complexity?

Tags Expand 
Math Recursion"
Write a function to find the ascii value of a character.,
Write a python function to find the sum of even numbers at even positions of a list.,"Input:

[1,2,3,4,5,6,7,8,9]

Output:

20

Explanation:

2+4+6+8=20"
Write a python function that takes in an integer n and finds the sum of the first n even natural numbers that are raised to the fifth power.,"Sample Input:

10

Sample Output:

10000000000

Explanation:

10000000000 = 1^5 + 2^5 + 3^5 + 4^5 + 5^5 + 6^5 + 7^5 + 8^5 + 9^5 + 10^5"
Write a function that takes in a list of tuples and returns a list containing the rear element of each tuple.,"Examples
get_second_elements([(1, 2), (3, 4), (5, 6)]) ➞ [2, 4, 6]

get_second_elements([(5, 6, 7), (8, 9, 10), (11, 12, 13)]) ➞ [6, 9, 12]

get_second_elements([(1, 2, 3, 4), (5, 6, 7, 8), (9, 10, 11, 12)]) ➞ [2, 6, 10]
Notes
Remember to return a list."
Write a function that takes in two tuples and subtracts the elements of the first tuple by the elements of the second tuple with the same index.,"Example:

Input:

tuple1 = (1, 2, 3, 4, 5)
tuple2 = (1, 2, 3, 4, 5)
Output:

(0, 0, 0, 0, 0)"
Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients.,"Example:

Input: 3
Output: 2
Explanation: 

The binomial coefficients are: 1, 3, 3, 1.
The sum of even index binomial coefficients is 2."
Write a function that takes in the radius and height of a cylinder and returns the the volume.,
Write a function that takes in a dictionary and integer n and filters the dictionary to only include entries with values greater than or equal to n.,"Examples
filter_dict({'a': 1, 'b': 2, 'c': 3}, 2) ➞ { 'b': 2, 'c': 3 }

filter_dict({'a': 1, 'b': 2, 'c': 3}, 3) ➞ { 'c': 3 }

filter_dict({'a': 1, 'b': 2, 'c': 3}, 4) ➞ {}

Notes
Return an empty dictionary if n is greater than all values in the dictionary."
Write a function to find the number of elements that occurs before the tuple element in the given tuple.,"Input Format:

The first line of input contains the tuple.

Output Format:

The output displays the number of elements that occurs before the tuple element.

Sample Input:

(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100)

Sample Output:

100

Explanation:

The number of elements that occurs before the tuple element is 100."
Write a function to find the nth decagonal number.,
Write a function that takes in an array and element and returns a tuple containing a boolean that indicates if the element is in the array and the index position of the element (or -1 if the element is not found).,"Examples

find_element([1, 2, 3, 4, 5], 5) ➞ (True, 4)

find_element([1, 2, 3, 4, 5], 10) ➞ (False, -1)

find_element([1, 2, 3, 4, 5], 4) ➞ (True, 3)

Notes

The function should return a tuple."
Write a python function to check if the elements of a given list are unique or not.,"Input:

[1,2,3,4,5]

Output:

True

Input:

[1,2,3,4,5,1]

Output:

False"
Write a function to subtract two lists element-wise.,"The function should be pure.

Examples

subtract_two_lists([1, 2, 3], [4, 5, 6]) ➞ [-3, -3, -3]

subtract_two_lists([1, 2, 3], [4, 5]) ➞ ""Lists must be of same length""

subtract_two_lists([1, 2, 3], [4, 5, 6]) ➞ [-3, -3, -3]
Notes

Lists are of the same length.

""""""


def subtract_two_lists(l1, l2):
    if len(l1) != len(l2):
        return ""Lists must be of same length""
    return [l1[i] - l2[i] for i in range(len(l1))]


print(subtract_two_lists([1, 2, 3], [4, 5, 6]))
print(subtract_two_lists([1, 2, 3], [4, 5]))
print(subtract_two_lists([1, 2, 3], [4, 5, 6]))"
Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.,"For example, if the input integer is 3332211, then the function should return True because the frequency of each digit in the integer is 3, 2, 1 and 1 which is less than or equal to the digit itself. If the input integer is 3332212, then the function should return False because the frequency of 2 is 2 which is greater than 2."
Write a function that takes in a list and element and checks whether all items in the list are equal to the given element.,"Example

For inputArray = [1, 1, 1] and elem = 1, the output should be
allEqual(inputArray, elem) = true;
For inputArray = [1, 2, 1] and elem = 1, the output should be
allEqual(inputArray, elem) = false.
Input/Output

[execution time limit] 4 seconds (py3)

[input] array.integer inputArray

Guaranteed constraints:
1 ≤ inputArray.length ≤ 10,
-1000 ≤ inputArray[i] ≤ 1000.

[input] integer elem

Guaranteed constraints:
-1000 ≤ elem ≤ 1000.

[output] boolean

true if all elements in inputArray are equal to elem, false otherwise."
Write a function that checks whether a string contains the 'a' character followed by two or three 'b' characters.,"Examples

abc => False
abbb => True
abbbc => False
abbbbc => True


def abcmath(a, b, c):
    for i in range(b):
        a += a
    return a % c == 0"
Write a function to find the largest sum of a contiguous array in the modified array which is formed by repeating the given array k times.,"Example 1:

Input:
arr[] = {1, 2, 3, -4, 5}
k = 3
Output:
11
Explanation:
The subarray is {1, 2, 3, -4, 5, 1, 2, 3, -4, 5, 1, 2, 3, -4, 5}

Example 2:

Input:
arr[] = {1, 2, 3, -4, 5}
k = 2
Output:
10
Explanation:
The subarray is {1, 2, 3, -4, 5, 1, 2, 3, -4, 5}

Your Task:
This is a function problem. The input is already taken care of by the driver code. You only need to complete the function maxSum() that takes an array (arr), sizeOfArray (n), an integer k, and return the maximum sum. The driver code takes care of the printing.

Expected Time Complexity: O(N*K).
Expected Auxiliary Space: O(N).

Constraints:
1 <= N <= 105
1 <= K <= 105
-106 <= arr[i] <= 106"
Write a python function takes in an integer n and returns the sum of squares of first n even natural numbers.,"Sample Input:

5

Sample Output:

55

Explanation:

Sum of squares of first 5 even natural numbers is 55."
Write a function to find the list of maximum length in a list of lists.,"Example:

Input: [[1, 2, 3, 4], [1, 2, 3, 4, 5], [1, 2, 3]]
Output: [1, 2, 3, 4, 5]

Input: [[1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3]]
Output: [1, 2, 3, 4]

Input: [[1, 2, 3, 4], [1, 2, 3], [1, 2, 3]]
Output: [1, 2, 3]

Input: [[1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4]]
Output: [1, 2, 3, 4]

Input: [[1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4]]
Output: [1, 2, 3, 4]

Input: [[1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4]]
Output: [1, 2, 3, 4]

Input: [[1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4]]
Output: [1, 2, 3, 4]

Input: [[1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3"
Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.,"Input:

n = 3, k = 2
Output:

6
Explanation:

We have 3 posts and 2 colors. We can color the posts in 2 ways as shown in the figure below."
Write a python function to find quotient of two numbers (rounded down to the nearest integer).,"Input:

Input consists of 2 integers.

First line of input contains the first number.

Second line of input contains the second number.

Output:

Output consists of a single integer.

Output consists of quotient of two numbers.

Sample Input 1:

10

3

Sample Output 1:

3

Sample Input 2:

10

2

Sample Output 2:

5

Explanation:

Quotient of 10 and 2 is 5.

Sample Input 3:

10

0

Sample Output 3:

Error

Explanation:

Quotient of 10 and 0 is undefined.

Sample Input 4:

10

-2

Sample Output 4:

-5

Explanation:

Quotient of 10 and -2 is -5.

Sample Input 5:

10

-3

Sample Output 5:

3

Explanation:

Quotient of 10 and -3 is -3.

Sample Input 6:

10

1

Sample Output 6:

10

Explanation:

Quotient of 10 and 1 is 10.

Sample Input 7:

10

-1

Sample Output 7:

-10

Explanation:

Quotient of 10 and -1 is -10.

Sample Input 8:

10

10

Sample Output 8:

1

Explanation:

Quotient of 10 and 10 is 1.

Sample Input 9:

10

-10

Sample Output 9:

-1

Explanation:

Quotient of 10 and -10 is -1.

Sample Input 10:

10

0.5

Sample Output 10:

20

Explanation:

Quotient of 10 and 0"
Write a function to find the third side of a right angled triangle.,"Given 2 sides, return the third side rounded to two decimal places.

If either side is less than 1, or either side is greater than 100,000, return ""Invalid"".

If either side is not a number, return ""Not a number"".

Examples

otherSide(3, 4) ➞ 5

otherSide(5, 7) ➞ 8.49

otherSide(8, 10) ➞ 11.63

otherSide(7, ""string"") ➞ ""Not a number""

otherSide(true, 5) ➞ ""Invalid""

Notes

    Hint: Pythagorean Theorem
    Round to two decimal places.
    Check Resources for more info.

*/

function otherSide(a, b) {
  if (a < 1 || b < 1 || a > 100000 || b > 100000) return ""Invalid"";
  if (typeof a !== ""number"" || typeof b !== ""number"") return ""Not a number"";
  return +Math.sqrt(a * a + b * b).toFixed(2);
}

console.log(otherSide(3, 4));
console.log(otherSide(5, 7));
console.log(otherSide(8, 10));
console.log(otherSide(7, ""string""));
console.log(otherSide(true, 5));"
Write a function to find the maximum value in a given heterogeneous list.,"The heterogeneous list may contain tuples, lists and other lists.

Example:

Input: [1,2,3,[4,5,6],[10,11,12],[7,8,9]]

Output: 12

Input: [1,2,3,4,5]

Output: 5

Input: [10,[11,12]]

Output: 12

Input: [[[100]],[101]]

Output: 101

Input: [[[100]],[101,102]]

Output: 102

Input: [[[100]],[101,102],[103,104]]

Output: 104

Input: [[[100]],[101,102],[103,104],[105,106]]

Output: 106

Input: [[[100]],[101,102],[103,104],[105,106],[107,108]]

Output: 108

Input: [[[100]],[101,102],[103,104],[105,106],[107,108],[109,110]]

Output: 110

Input: [[[100]],[101,102],[103,104],[105,106],[107,108],[109,110],[111,112]]

Output: 112

Input: [[[100]],[101,102],[103,104],[105,106],[107,108],[109,110],[111,112],[113,114]]

Output: 114"
Write a function to return the sum of all divisors of a number.,"The divisors of a number are all the numbers that divide evenly into it. For example, the divisors of 4 are 1, 2, and 4, since all of the numbers from 1 to 4 divide evenly into 4.

Example:

divisors(4)  === 6 // since 1, 2, and 4 are all divisors of 4
divisors(5)  === 8 // since 1, 2, 3, and 5 are all divisors of 5
divisors(12) === 28 // since 1, 2, 3, 4, 6, 12 and 24 are all divisors of 12

*/

function divisors(integer) {
  let divisors = [];
  for (let i = 2; i < integer; i++) {
    if (integer % i === 0) {
      divisors.push(i);
    }
  }
  return divisors.length === 0 ? `${integer} is prime` : divisors.reduce((a, b) => a + b);
};

console.log(divisors(15));
console.log(divisors(12));
console.log(divisors(13));
console.log(divisors(25));
console.log(divisors(4));
console.log(divisors(5));
console.log(divisors(1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
Write a python function to count inversions in an array.,"Inversion count is the number of pairs of elements in the array such that i < j and arr[i] > arr[j].

Input:

The first line of input contains an integer T denoting the number of test cases.
The first line of each test case is N, the size of array.
The second line of each test case contains N elements.

Output:

Print the inversion count of array.

Constraints:

1 ≤ T ≤ 100
1 ≤ N ≤ 107
1 ≤ C ≤ 1018

Example:

Input:
3
5
2 4 1 3 5
5
2 3 4 5 1
5
1 2 3 4 5

Output:
3
3
0

Explanation:
Testcase 1: The sequence 2, 4, 1, 3, 5 has three inversions (2, 1), (4, 1), (4, 3)."
Write a function to flatten a given nested list structure.,"Each element of the list could be either an integer or a list.

Example 1:

Input: [[1,1],2,[1,1]]
Output: [1,1,2,1,1]
Explanation: By calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,1,2,1,1].
Example 2:

Input: [1,[4,[6]]]
Output: [1,4,6]
Explanation: By calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,4,6]."
Write a function to calculate the maximum aggregate from the list of tuples.,"Input: [(1, 2), (3, 4), (5, 6)]

Output: 15

Explanation: (1+2) + (3+4) + (5+6) = 15


def max_aggregate(lst):
    return sum(sum(i) for i in lst)


print(max_aggregate([(1, 2), (3, 4), (5, 6)]))"
Write a function to find the count of all binary sequences of length 2n such that sum of first n bits is same as sum of last n bits.,"Input: n = 2
Output: 6

Input: n = 3
Output: 24

Input: n = 4
Output: 120

Input: n = 5
Output: 480

Input: n = 10
Output: 10240

Input: n = 15
Output: 1555200

Input: n = 20
Output: 12612600

Input: n = 25
Output: 12612600

Input: n = 30
Output: 12612600

Input: n = 35
Output: 12612600

Input: n = 40
Output: 12612600

Input: n = 45
Output: 12612600

Input: n = 50
Output: 12612600

Input: n = 55
Output: 12612600

Input: n = 60
Output: 12612600

Input: n = 65
Output: 12612600

Input: n = 70
Output: 12612600

Input: n = 75
Output: 12612600

Input: n = 80
Output: 12612600

Input: n = 85
Output: 12612600

Input: n = 90
Output: 12612600

Input: n = 95
Output: 12612600

Input: n = 100
Output: 12612600

Input: n = 105
Output: 12612600

Input: n = 110
Output: 12612600

Input: n = 115
Output: 12612600

Input: n = 120
Output: 126126"
Write a function to find the depth of a dictionary.,"Example:

Input:

{
    ""key1"": 1,
    ""key2"": {
        ""key3"": 1,
        ""key4"": {
            ""key5"": 4
        }
    }
}

Output: 3

""""""


def depth(dictionary):
    if isinstance(dictionary, dict):
        if len(dictionary) == 0:
            return 1
        else:
            return 1 + max(depth(value) for value in dictionary.values())
    else:
        return 0


if __name__ == '__main__':
    print(depth({
        ""key1"": 1,
        ""key2"": {
            ""key3"": 1,
            ""key4"": {
                ""key5"": 4
            }
        }
    }))"
Write a python function to find element at a given index after number of rotations.,"Input:

arr[] = {1, 2, 3, 4, 5}

index = 2

Output: 3

Explanation:

After 1st rotation - {5, 1, 2, 3, 4}

After 2nd rotation - {4, 5, 1, 2, 3}

Element at index 2 is 3"
Write a function to return two words from a list of words starting with letter 'p'.,"Example:

words = ['peter', 'pan', 'pickle', 'pepper', 'pick', 'pepperoni']

p_words = get_p_words(words)

print(p_words)

# Output: ['peter', 'pan', 'pepper', 'pepperoni']


def get_p_words(words):
    p_words = []
    for word in words:
        if word[0] == 'p':
            p_words.append(word)
    return p_words


words = ['peter', 'pan', 'pickle', 'pepper', 'pick', 'pepperoni']

p_words = get_p_words(words)

print(p_words)


# Output: ['peter', 'pan', 'pepper', 'pepperoni']"
"Write a function to find the maximum sum of increasing subsequence from prefix until ith index and also including a given kth element which is after i, i.e., k > i .","Input:

arr[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
k = 3
Output:

16
Explanation:

The subsequence is {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}

Input:

arr[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
k = 10
Output:

10
Explanation:

The subsequence is {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}

Input:

arr[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
k = 1
Output:

1
Explanation:

The subsequence is {1}

Input:

arr[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
k = 2
Output:

3
Explanation:

The subsequence is {1, 2}

Input:

arr[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
k = 5
Output:

10
Explanation:

The subsequence is {1, 2, 3, 4, 5}

Input:

arr[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
k = 6
Output:

15
Explanation:

The subsequence is {1, 2, 3, 4, 5, 6}

Input:

arr[] = {1, 2, 3, 4, 5, 6, 7, 8, 9,"
Write a function to get a colon of a tuple.,"Example:

get_colon(('a', 'b', 'c', 'd', 'e')) -> 'b:d'
get_colon(('a', 'b', 'c', 'd', 'e', 'f')) -> 'b:d'
get_colon(('a', 'b', 'c', 'd', 'e', 'f', 'g')) -> 'b:f'

""""""


def get_colon(tup):
    if len(tup) % 2 == 0:
        return f""{tup[len(tup) // 2 - 1]}:{tup[len(tup) // 2]}""
    else:
        return f""{tup[len(tup) // 2]}:{tup[len(tup) // 2]}""


print(get_colon(('a', 'b', 'c', 'd', 'e')))
print(get_colon(('a', 'b', 'c', 'd', 'e', 'f')))
print(get_colon(('a', 'b', 'c', 'd', 'e', 'f', 'g')))"
"Write a function to find the specified number of largest products from two given lists, selecting one factor from each list.","Example

For lst1 = [1, 2, 3, 4, 5] and lst2 = [6, 7, 8, 9, 10], and n = 3, the output should be
largestProducts(lst1, lst2, n) = [50, 49, 48].

The 3 largest products are 50 (5 * 10), 49 (5 * 9), and 48 (4 * 10).

Input/Output

[execution time limit] 4 seconds (py3)

[input] array.integer lst1

A list of integers.

Guaranteed constraints:
1 ≤ lst1.length ≤ 105,
-1000 ≤ lst1[i] ≤ 1000.

[input] array.integer lst2

A list of integers.

Guaranteed constraints:
1 ≤ lst2.length ≤ 105,
-1000 ≤ lst2[i] ≤ 1000.

[input] integer n

An integer representing the number of products to select.

Guaranteed constraints:
1 ≤ n ≤ min(lst1.length, lst2.length).

[output] array.integer

The n largest products, in descending order."
Write a python function to find the maximum of two numbers.,"def max_num(a,b):
    if a>b:
        return a
    else:
        return b

print(max_num(10,20))"
Write a function to convert a given string to a tuple of characters.,"Use map() to apply a function to each element of the string.

Sample Input:

str1 = ""python""

Sample Output:

('p', 'y', 't', 'h', 'o', 'n')

Explanation:

The characters of the string are converted to a tuple.

Solution:

def convert_to_tuple(str1):
    return tuple(str1)

str1 = ""python""
print(convert_to_tuple(str1))

Output:

('p', 'y', 't', 'h', 'o', 'n')"
Write a python function to set the left most unset bit.,"Input: 10
Output: 8

Input: 15
Output: 0

Input: 1
Output: 0

Input: 0
Output: 1

Input: 16
Output: 0

Input: 12
Output: 8

Input: 13
Output: 9

Input: 14
Output: 10

Input: 17
Output: 16

Input: 18
Output: 17

Input: 19
Output: 20

Input: 20
Output: 0

Input: 21
Output: 1

Input: 22
Output: 2

Input: 23
Output: 3

Input: 24
Output: 0

Input: 25
Output: 1

Input: 26
Output: 2

Input: 27
Output: 3

Input: 28
Output: 4

Input: 29
Output: 5

Input: 30
Output: 6

Input: 31
Output: 0

Input: 32
Output: 0

Input: 33
Output: 1

Input: 34
Output: 2

Input: 35
Output: 3

Input: 36
Output: 4

Input: 37
Output: 5

Input: 38
Output: 6

Input: 39
Output: 7

Input: 40
Output: 0

Input: 41
Output: 1

Input: 42
Output: 2

Input: 43
Output: 3

Input: 44
Output: 4

Input: 45
Output: 5

Input: 46
Output: 6

Input: 47
Output: 7

Input: 48
Output: 0

Input: 49
Output: 1

Input: 50
Output: 2

Input: 5"
Write a function to find the volume of a cone.,"function volumeOfCone(radius, height) {
  return (Math.PI * Math.pow(radius, 2) * height) / 3;
}

console.log(volumeOfCone(3, 5));"
Write a python function to find the highest power of 2 that is less than or equal to n.,"Example:

Input: 10
Output: 8

Input: 15
Output: 8

Input: 16
Output: 16

Input: 1
Output: 1

Input: 2
Output: 2

Input: 3
Output: 2

Input: 4
Output: 4

Input: 5
Output: 4

Input: 6
Output: 4

Input: 7
Output: 4

Input: 8
Output: 8

Input: 9
Output: 8

Input: 10
Output: 8

Input: 11
Output: 8

Input: 12
Output: 12

Input: 13
Output: 12

Input: 14
Output: 12

Input: 15
Output: 12

Input: 16
Output: 16

Input: 17
Output: 16

Input: 18
Output: 16

Input: 19
Output: 16

Input: 20
Output: 16

Input: 21
Output: 16

Input: 22
Output: 16

Input: 23
Output: 16

Input: 24
Output: 24

Input: 25
Output: 24

Input: 26
Output: 24

Input: 27
Output: 24

Input: 28
Output: 24

Input: 29
Output: 24

Input: 30
Output: 24

Input: 31
Output: 24

Input: 32
Output: 32

Input: 33
Output: 32

Input: 34
Output: 32

Input: 35
Output: 32

Input: 36
Output: 32

Input: 37
Output: 32

Input: 38
Output:"
Write a function to find the n'th lucas number.,"The first few lucas numbers are 2, 1, 3, 4, 7, 11, 18, 29, 47.

Note that the lucas numbers are 0-indexed (e.g. 2 is the first number).

Examples
lucas_num(0) ➞ 2

lucas_num(1) ➞ 1

lucas_num(4) ➞ 7

lucas_num(5) ➞ 11

lucas_num(6) ➞ 18

lucas_num(7) ➞ 29

lucas_num(8) ➞ 47

lucas_num(9) ➞ 76

lucas_num(10) ➞ 123

Notes
The input n is guaranteed to be a positive integer."
Write a function to apply a given format string to all of the elements in a list.,"The function should return a new list containing the formatted elements.

The function should be able to handle the following format strings:

""{0}"" -> the element at the current index
""{1}"" -> the element at the current index + 1
""{2}"" -> the element at the current index + 2
""{3}"" -> the element at the current index + 3
""{4}"" -> the element at the current index + 4
""{5}"" -> the element at the current index + 5
""{6}"" -> the element at the current index + 6
""{7}"" -> the element at the current index + 7
""{8}"" -> the element at the current index + 8
""{9}"" -> the element at the current index + 9
""{10}"" -> the element at the current index + 10
""{11}"" -> the element at the current index + 11
""{12}"" -> the element at the current index + 12
""{13}"" -> the element at the current index + 13
""{14}"" -> the element at the current index + 14
""{15}"" -> the element at the current index + 15
""{16}"" -> the element at the current index + 16
""{17}"" -> the element at the current index + 17
""{18}"" -> the element at the current index + 18
""{19}"" -> the element at the current index + 19
""{20}"" -> the element at the current index + 20
""{21}"" -> the element at the current index + 21
""{22}"" -> the element at the current index + 22
""{23}"" -> the element at the current index + 23
""{24}"" -> the element at the current index + 24
""{25}"" -> the element at the current index + 25
""{26}"" -> the element at the current index + 26
""{27}"" -> the element at the current index + 27
""{28}"" -> the element at the current index + 28
""{29}"" -> the element at the"
Write a function to convert more than one list to nested dictionary.,"Input Format

The first line contains the number of lists N.
The next N lines contains the number of elements in the list followed by the elements in the list.

Constraints

1<=N<=100

Output Format

Print the nested dictionary.

Sample Input

4
3 1 2 3
2 a b
3 1 2 3
1 5
Sample Output

{1: {2: {3: {}}}, 'a': {'b': {}}, 1: {2: {3: {}}}, 5: {}}
Explanation

The first list [1,2,3] converted to a dictionary:

1 -->2-->3.
Similarly, the list ['a','b'] converted to a dictionary:

'a'-->'b'.
""""""


def convert_to_dict(lst):
    if len(lst) == 1:
        return lst[0]
    else:
        return {lst[0]: convert_to_dict(lst[1:])}


def nested_dict(lst):
    return convert_to_dict(lst)


if __name__ == '__main__':
    n = int(input())
    lst = []
    for i in range(n):
        lst.append(list(map(int, input().split())))
    print(nested_dict(lst))"
"Write a function to find the maximum sum possible by using the given equation f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n).","Input:
The first line of input contains an integer T denoting the number of test cases. Then T test cases follow. The first line of each test case contains an integer n.

Output:
For each test case, print the maximum sum possible by using the given equation.

Constraints:
1<=T<=100
1<=n<=1000

Example:
Input:
2
12
24
Output:
13
27

*/

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int maxSum(int n, vector<int> &dp)
{
    if (n <= 1)
        return n;

    if (dp[n] != -1)
        return dp[n];

    int ans = n;
    for (int i = 2; i <= 5; i++)
    {
        if (n % i == 0)
        {
            ans = max(ans, maxSum(n / i, dp) + maxSum(n / (i - 1), dp));
        }
    }

    return dp[n] = ans;
}

int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;
        vector<int> dp(n + 1, -1);
        cout << maxSum(n, dp) << endl;
    }
    return 0;
}"
Write a function to find the list with maximum length.,"Example:

Input: [[1, 2, 3, 4], [1, 2], [1, 2, 3], [1, 2, 3, 4, 5]]
Output: [1, 2, 3, 4]"
Write a function to check if given tuple contains no duplicates.,"Input:

tuple1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)

Output:

True

Explanation:

No duplicates in given tuple.

Input:

tuple1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10)

Output:

False

Explanation:

Duplicate 10 in given tuple."
Write a python function to find the first non-repeated character in a given string.,"Sample Input:

string = 'abcdcaf'

Sample Output:

b

Explanation:

The first non-repeated character in the given string is b."
Write a function to check whether the given string starts and ends with the same character or not.,"Input Format:

The first line of input contains T denoting the number of testcases. T testcases follow. Each testcase contains one line of input containing a string.

Output Format:

For each testcase, in a new line, print ""YES"" if the string starts and ends with the same character, else print ""NO"". (Without the double quotes)

Your Task:

This is a function problem. You only need to complete the function startAndEndWithSameChar() that takes string as parameter and returns true if string starts and ends with the same character, else return false.

Constraints:

1 <= T <= 100
1 <= |S| <= 100

Examples:

Input:

2
abba
abcd

Output:

YES
NO

Explanation:

Testcase 1: The given string starts and ends with the same character.

Testcase 2: The given string starts and ends with different characters.


*/

#include <iostream>
using namespace std;

bool startAndEndWithSameChar(string s)
{
    if (s[0] == s[s.length() - 1])
        return true;
    else
        return false;
}

int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        string s;
        cin >> s;
        if (startAndEndWithSameChar(s))
            cout << ""YES"" << endl;
        else
            cout << ""NO"" << endl;
    }
    return 0;
}"
Write a function to find the median of three numbers.,"Example 1:

Input: num1 = 2, num2 = 3, num3 = 4
Output: 3
Explanation: The median of the three numbers is 3.
Example 2:

Input: num1 = 1, num2 = 2, num3 = 3
Output: 2
Explanation: The median of the three numbers is 2.
Example 3:

Input: num1 = 2, num2 = 3, num3 = 1
Output: 2
Explanation: The median of the three numbers is 2.
Example 4:

Input: num1 = 1, num2 = 2, num3 = 2
Output: 2
Explanation: The median of the three numbers is 2.
Example 5:

Input: num1 = 2, num2 = 2, num3 = 2
Output: 2
Explanation: The median of the three numbers is 2.


Constraints:

-231 <= num1, num2, num3 <= 231 - 1


Follow up:

Can you solve it in O(1) time?"
Write a function to compute the sum of digits of each number of a given list.,"Use map() function.

Given:

lst = [12, 65, 54, 39, 102, 339, 221]
Expected Output:

[3, 16, 10, 18, 3, 18, 3]
""""""

lst = [12, 65, 54, 39, 102, 339, 221]

def sum_digits(num):
    return sum(int(i) for i in str(num))

print(list(map(sum_digits, lst)))"
Write a function to perform the mathematical bitwise xor operation across the given tuples.,"The function should return a tuple with the result of the bitwise xor operation.

Examples
bitwise_xor((10, 0, 0, 1), (1, 1, 1, 1)) ➞ (11, 1, 1, 0)

bitwise_xor((1, 1, 1, 1, 1), (0, 1, 1, 1, 1)) ➞ (1, 0, 0, 0, 0)

bitwise_xor((1, 0, 1, 0, 1, 0), (0, 1, 0, 1, 0, 1)) ➞ (1, 1, 1, 1, 1, 1)

Notes
The given tuples are non-empty.
The bitwise xor operation must be performed on the binary representations of the numbers.
""""""


def bitwise_xor(a, b):
    return tuple(x ^ y for x, y in zip(a, b))


print(bitwise_xor((10, 0, 0, 1), (1, 1, 1, 1)))
print(bitwise_xor((1, 1, 1, 1, 1), (0, 1, 1, 1, 1)))
print(bitwise_xor((1, 0, 1, 0, 1, 0), (0, 1, 0, 1, 0, 1)))"
Write a function to extract the number of unique tuples in the given list.,"Input:

[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

Output:

10"
Write a function to perform index wise addition of tuple elements in the given two nested tuples.,"Input Format:

The first line of input contains the number of test cases T.

The first line of each test case contains the number of elements in the tuple.

The second line of each test case contains the elements of the first tuple.

The third line of each test case contains the elements of the second tuple.

Output Format:

For each test case, print the index wise addition of the two tuples.

Sample Input:

1

4

1 2 3 4

5 6 7 8

Sample Output:

6 8 10 12

Explanation:

The first tuple is (1, 2, 3, 4) and the second tuple is (5, 6, 7, 8).

The index wise addition of the two tuples is (1 + 5, 2 + 6, 3 + 7, 4 + 8) = (6, 8, 10, 12)."
Write a python function to find the minimum of two numbers.,"def min(a,b):
    if a<b:
        return a
    else:
        return b

a=int(input(""Enter the first number: ""))
b=int(input(""Enter the second number: ""))
print(""The minimum of two numbers is: "",min(a,b))"
Write a function to check whether an element exists within a tuple.,"def check_element(tup, element):
    if element in tup:
        return True
    else:
        return False

tup = (1, 2, 3, 4, 5)
element = 3
print(check_element(tup, element))"
Write a python function to find whether the parity of a given number is odd.,
Write a function to create the next bigger number by rearranging the digits of a given number.,"For example, the next bigger number of 123 is 132.

The next bigger number of 12345 is 12354.

The next bigger number of 123456 is 123465.

The next bigger number of 1234567 is 1234675.

The next bigger number of 12345678 is 12345768.

The next bigger number of 123456789 is 123456879.

If the given number is the biggest number that can be formed, the function should return -1.

Examples

nextBigger(12)==21
nextBigger(513)==531
nextBigger(2017)==2071
nextBigger(414)==441
nextBigger(144)==414"
Write a function to find k number of smallest pairs which consist of one element from the first array and one element from the second array.,"Example 1:

Input:
nums1 = [1, 7, 11]
nums2 = [2, 4, 6]
k = 3
Output:
[1, 2], [1, 4], [1, 6]
Explanation:
The first 3 pairs are returned from the sequence:
[1, 2], [1, 4], [1, 6], [7, 2], [7, 4], [11, 2], [7, 6], [11, 4], [11, 6]
Example 2:

Input:
nums1 = [1, 1, 2]
nums2 = [1, 2, 3]
k = 2
Output:
[1, 1], [1, 1]
Explanation:
The first 2 pairs are returned from the sequence:
[1, 1], [1, 1], [1, 2], [2, 1], [1, 2], [2, 2], [1, 3], [1, 3], [2, 3]
Example 3:

Input:
nums1 = [1, 2]
nums2 = [3]
k = 3
Output:
[1, 3], [2, 3]
Explanation:
All possible pairs are returned from the sequence:
[1, 3], [2, 3]"
Write a function to find the minimum product from the pairs of tuples within a given list.,"Input: [(1, 2), (3, 4), (5, 6)]

Output: 12

Explanation: (1, 2) = 2, (3, 4) = 12, (5, 6) = 30, Minimum product is 12"
Write a function to find the minimum value in a given heterogeneous list.,"Example:

Input: [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
Output: 10

Input: [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
Output: 1

Input: [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, ""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j""]
Output: 1

Input: [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, ""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"", ""j"", 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 1.10]
Output: 1

Input: [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, ""a"", ""b"", ""c"", ""d"", ""e"", ""f"", ""g"", ""h"", ""i"","
Write a function to convert the given snake case string to camel case string.,"Input:

The input string contains only lowercase alphabets and spaces.

Output:

Print the camel case string.

Example:

Input:

snake case string

Output:

snakeCaseString

*/

#include <iostream>
#include <string>
using namespace std;

int main()
{
    string str;
    getline(cin, str);
    for (int i = 0; i < str.length(); i++)
    {
        if (str[i] == ' ')
        {
            str[i + 1] = toupper(str[i + 1]);
        }
    }
    for (int i = 0; i < str.length(); i++)
    {
        if (str[i] == ' ')
        {
            str.erase(i, 1);
        }
    }
    cout << str;
    return 0;
}"
Write a python function to remove odd numbers from a given list.,"Sample List : [1,2,3,4,5,6,7,8,9]
Expected Result : [2, 4, 6, 8]

""""""

def remove_odd(lst):
    return [i for i in lst if i%2==0]

print(remove_odd([1,2,3,4,5,6,7,8,9]))"
Write a function to extract the nth element from a given list of tuples.,"Example:

Input: [(1, 2), (3, 4), (5, 6)]
Output: 3

""""""

def extract_nth_element(lst, n):
    return [x[n] for x in lst]

print(extract_nth_element([(1, 2), (3, 4), (5, 6)], 0))
print(extract_nth_element([(1, 2), (3, 4), (5, 6)], 1))
print(extract_nth_element([(1, 2), (3, 4), (5, 6)], 2))
print(extract_nth_element([(1, 2), (3, 4), (5, 6)], 3))
print(extract_nth_element([(1, 2), (3, 4), (5, 6)], 4))
print(extract_nth_element([(1, 2), (3, 4), (5, 6)], 5))
print(extract_nth_element([(1, 2), (3, 4), (5, 6)], 6))
print(extract_nth_element([(1, 2), (3, 4), (5, 6)], 7))
print(extract_nth_element([(1, 2), (3, 4), (5, 6)], 8))
print(extract_nth_element([(1, 2), (3, 4), (5, 6)], 9))
print(extract_nth_element([(1, 2), (3, 4), (5, 6)], 10))
print(extract_nth_element([(1, 2), (3, 4), (5, 6)], 11))
print(extract_nth_element([(1, 2), (3, 4), (5, 6)], 12))
print(extract_nth_element([(1,"
Write a python function to check whether any value in a sequence exists in a sequence or not.,"Sample Input:

[1,2,3,4,5,6,7,8,9,10]

[1,2,3,4,5,6,7,8,9,10]

Sample Output:

True

Explanation:

1 is present in both the sequences."
Write a python function to find a pair with highest product from a given array of integers.,"Examples:

Input: arr[] = {1, 2, 3, 4, 7, 0}
Output: {7, 3}

Input: arr[] = {0, -1, -2}
Output: {-1, 0}

Input: arr[] = {-1, 4, -3, 2, 3}
Output: {-3, -1}

Input: arr[] = {-1, 0}
Output: {0, -1}

Input: arr[] = {1, -3, 4, 2}
Output: {4, 1}

Input: arr[] = {-1, -3, 4, 2}
Output: {4, -1}

Input: arr[] = {1, 2, 3, 4, 7, 0, -1, -2}
Output: {7, 4}

Input: arr[] = {1, 2, 3, 4, 7, 0, -1, -2, -3}
Output: {7, 4}

Input: arr[] = {1, 2, 3, 4, 7, 0, -1, -2, -3, -4}
Output: {7, 4}

Input: arr[] = {1, 2, 3, 4, 7, 0, -1, -2, -3, -4, -5}
Output: {7, 4}

Input: arr[] = {1, 2, 3, 4, 7, 0, -1, -2, -3, -4, -5, -6}
Output: {7, 4}

Input: arr[] = {1, 2, 3, 4, 7, 0, -1, -2, -3, -4, -5, -6, -7}
Output: {7, 4}

Input: arr[] = {1, 2, 3, 4, 7, 0, -1, -2, -3, -4, -5, -6, -7, -8}"
Write a function to find common first element in given list of tuple.,"Input: [(1, 2, 3), (4, 5, 6), (7, 8, 9)]
Output: 1

Input: [(1, 2, 3), (1, 2, 3), (1, 2, 3)]
Output: 1

Input: [(1, 2, 3), (4, 5, 6), (7, 8, 10)]
Output: None

Input: [(1, 2, 3), (1, 2, 3), (1, 3, 6)]
Output: 1

Input: [(1, 2, 3), (4, 5, 6), (7, 8, 9), (7, 8, 9)]
Output: 7

Input: [(1, 2, 3), (1, 2, 3), (1, 3, 6), (7, 8, 9)]
Output: 1

Input: [(1, 2, 3), (1, 2, 3), (1, 3, 6), (7, 8, 9), (7, 8, 9)]
Output: 7

Input: [(1, 2, 3), (1, 2, 3), (1, 3, 6), (7, 8, 9), (7, 8, 9), (7, 8, 9)]
Output: 7

Input: [(1, 2, 3), (1, 2, 3), (1, 3, 6), (7, 8, 9), (7, 8, 9), (7, 8, 9), (7, 8, 9)]
Output: 7

Input: [(1, 2, 3), (1, 2, 3), (1, 3, 6), (7, 8, 9), (7, 8, 9), (7, 8, 9), (7, 8, 9), (7, 8, 9)]
Output:"
Write a python function to find the element of a list having maximum length.,"Input:

[‘abc’, ‘def’, ‘ghi’, ‘jkl’, ‘mno’]

Output:

‘jkl’"
Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list.,"Round downwards to the nearest integer.

Example

For [1.1, 2.1, 3.9], the output should be
roundAndSum(inputArray) = 13.

The sum of the rounded values is 6.1 + 7.1 + 3.9 = 13.1. The answer should be rounded down to the nearest integer, that is, 13.

Input/Output

[execution time limit] 4 seconds (py3)

[input] array.float inputArray

An array of real numbers.

Guaranteed constraints:
0 ≤ inputArray.length ≤ 10,
0 ≤ inputArray[i] ≤ 100.

[output] integer

The rounded and summed total."
Write a python function to find the cube sum of first n even natural numbers.,"def cube_sum(n):
    sum = 0
    for i in range(1, n+1):
        sum += i**3
    return sum

n = int(input(""Enter a number: ""))
print(""The cube sum of first"", n, ""even natural numbers is"", cube_sum(n))"
Write a function to concatenate each element of tuple by the delimiter.,"Input:

tuple = ('a', 'b', 'c', 'd')
delimiter = '*'

Output:

a*b*c*d"
Write a python function to find the average of cubes of first n natural numbers.,"def cubes(n):
    sum=0
    for i in range(1,n+1):
        sum=sum+i**3
    return sum

n=int(input(""Enter the number:""))
print(""The sum of cubes of first"",n,""natural numbers is"",cubes(n))"
Write a function to extract only the rear index element of each string in the given tuple.,"Given:

tuple1 = (1,2,3,4)
tuple2 = (""p"",""q"")
tuple3 = (10,20,30,40)
Expected output:

(4,)
('q',)
(40,)"
Write a function to count the number of sublists containing a particular element.,"def count_sublists(lst, element):
    count = 0
    for sublist in lst:
        if element in sublist:
            count += 1
    return count

# Test the function
lst = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
element = 5
print(count_sublists(lst, element))  # Output: 1"
Write a function to filter odd numbers.,"function filterOddNumbers(numbers) {
  return numbers.filter(function(number) {
    return number % 2 !== 0;
  });
}

// Test cases
console.log(filterOddNumbers([1, 2, 3, 4, 5])); // [1, 3, 5]
console.log(filterOddNumbers([2, 4, 6, 8, 10])); // []
console.log(filterOddNumbers([1, 3, 5, 7, 9])); // [1, 3, 5, 7, 9]"
Write a function to convert a date of yyyy-mm-dd format to dd-mm-yyyy format.,"Example

Input: 2022-04-20

Output: 20-04-2022

Input: 2021-12-31

Output: 31-12-2021

Input: 2020-01-01

Output: 01-01-2020

Input: 2019-10-09

Output: 09-10-2019

Input: 2018-05-22

Output: 22-05-2018

Input: 2017-06-11

Output: 11-06-2017

Input: 2016-07-23

Output: 23-07-2016

Input: 2015-08-04

Output: 04-08-2015

Input: 2014-09-15

Output: 15-09-2014

Input: 2013-10-26

Output: 26-10-2013

Input: 2012-11-07

Output: 07-11-2012

Input: 2011-12-18

Output: 18-12-2011

Input: 2010-01-29

Output: 29-01-2010

Input: 2009-02-10

Output: 10-02-2009

Input: 2008-03-21

Output: 21-03-2008

Input: 2007-04-02

Output: 02-04-2007

Input: 2006-05-13

Output: 13-05-200"
Write a function to sort the given array by using shell sort.,"Input:

The first line of input contains an integer T denoting the number of test cases.
The first line of each test case is N, size of array.
The second line of each test case contains N input A[i].

Output:

Print the sorted array.

Constraints:

1 ≤ T ≤ 50
1 ≤ N ≤ 100
1 ≤ A[i] ≤ 1000

Example:

Input:
2
5
10 2 1 45 3
6
10 9 8 7 6 5

Output:
1 2 10 45 3
5 6 7 8 9 10

Explanation:
Testcase 1: After sorting elements are in the following order. 1, 2, 3, 10, 45.

*/

#include <iostream>
using namespace std;

void shellSort(int arr[], int n)
{
    for (int gap = n / 2; gap > 0; gap /= 2)
    {
        for (int i = gap; i < n; i++)
        {
            int temp = arr[i];
            int j;
            for (j = i; j >= gap && arr[j - gap] > temp; j -= gap)
            {
                arr[j] = arr[j - gap];
            }
            arr[j] = temp;
        }
    }
}

int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;
        int arr[n];
        for (int i = 0; i < n; i++)
        {
            cin >> arr[i];
        }
        shellSort(arr, n);
        for (int i = 0; i < n; i++)
        {
            cout << arr[i] << "" "";
        }
        cout << endl;
    }
    return 0;
}"
Write a function to extract the elementwise and tuples from the given two tuples.,"Input Format:

The first line of input contains the number of test cases T.

The first line of each test case contains the number of elements in the first tuple.

The second line of each test case contains the elements of the first tuple.

The third line of each test case contains the number of elements in the second tuple.

The fourth line of each test case contains the elements of the second tuple.

Output Format:

For each test case, print the elementwise and tuples.

Sample Input:

1

4

1 2 3 4

3

5 6 7

Sample Output:

(1, 5) (2, 6) (3, 7)

(1, 2, 3) (4,) (5, 6, 7)

Explanation:

The first tuple is (1, 2, 3, 4) and the second tuple is (5, 6, 7).

The elementwise and tuples are (1, 5) (2, 6) (3, 7) and (1, 2, 3) (4,) (5, 6, 7)."
Write a function to find the directrix of a parabola.,"The function should take the following parameters:

a: the coefficient of x^2
b: the coefficient of x
c: the constant term

The function should return the value of the directrix.

Examples

findDirectrix(1, -2, 1) ➞ 1

findDirectrix(1, -7, 12) ➞ 3

findDirectrix(1, 3, 2) ➞ -1

Notes

The graph will always be above the x-axis.

*/

#include <assert.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MIN(a, b) (((a) < (b)) ? (a) : (b))
#define MAX(a, b) (((a) > (b)) ? (a) : (b))

int
findDirectrix(int a, int b, int c)
{
	double x;

	x = -b / (2.0 * a);
	return (int)x;
}

int
main(void)
{
	assert(findDirectrix(1, -2, 1) == 1);
	assert(findDirectrix(1, -7, 12) == 3);
	assert(findDirectrix(1, 3, 2) == -1);

	return 0;
}"
Write a function that takes two lists and returns true if they have at least one common element.,"Examples
common_elements([1, 2, 3], [4, 5, 6]) ➞ False

common_elements([1, 2, 3], [1, 2, 3]) ➞ True

common_elements([1, 2], [2, 3]) ➞ True

common_elements([1, 2, 3], [4, 5]) ➞ False

common_elements([1, 2, 3], [4, 5, 3]) ➞ True

common_elements([1, 2, 3], [3, 2, 1]) ➞ True
Notes
Don't forget to return the result.
If you get stuck on a challenge, find help in the Resources tab.
If you're really stuck, unlock solutions in the Solutions tab."
Write a function to find the median length of a trapezium.,"The function should take the length of the two parallel sides and the height as arguments and return the median length.

Examples
medianLength(1, 1, 1) ➞ 1

medianLength(2, 2, 2) ➞ 2

medianLength(2, 2, 1) ➞ 1.5

Notes
N/A
*/

function medianLength(a, b, c) {
	return (a + b) / 2 - c;
}

console.log(medianLength(1, 1, 1));
console.log(medianLength(2, 2, 2));
console.log(medianLength(2, 2, 1));"
Write a function to check whether the entered number is greater than the elements of the given array.,"Input:

Enter the size of the array: 5

Enter the elements of the array: 1 2 3 4 5

Enter the number to be compared: 6

Output:

The number is greater than the elements of the array."
Write a function that matches a string that has an a followed by one or more b's.,"function checkAB(str) {
  let regex = /a(b+)/;
  return regex.test(str);
}

checkAB(""lane Bbbbb"");"
Write a python function to find the last digit of a given number.,"Sample Input:
12345

Sample Output:
5

Explanation:
The last digit of the given number 12345 is 5."
Write a python function to return the negative numbers in a list.,"Sample Input

[1, -1, 2, -2, 3, -3, 4, -4]

Sample Output

[-1, -2, -3, -4]"
Write a function to remove odd characters in a string.,"Example:

Input: ""Hello World""
Output: ""HloWrd""

Input: ""Hello""
Output: ""Hlo""

Input: ""H""
Output: ""H""

Input: """"
Output: """"

Input: "" ""
Output: "" ""

Input: ""Hello World!""
Output: ""HloWrld!""

Input: ""Hello World!""
Output: ""HloWrld!""

Input: ""Hello World!""
Output: ""HloWrld!""

Input: ""Hello World!""
Output: ""HloWrld!""

Input: ""Hello World!""
Output: ""HloWrld!""

Input: ""Hello World!""
Output: ""HloWrld!""

Input: ""Hello World!""
Output: ""HloWrld!""

Input: ""Hello World!""
Output: ""HloWrld!""

Input: ""Hello World!""
Output: ""HloWrld!""

Input: ""Hello World!""
Output: ""HloWrld!""

Input: ""Hello World!""
Output: ""HloWrld!""

Input: ""Hello World!""
Output: ""HloWrld!""

Input: ""Hello World!""
Output: ""HloWrld!""

Input: ""Hello World!""
Output: ""HloWrld!""

Input: ""Hello World!""
Output: ""HloWrld!""

Input: ""Hello World!""
Output: ""HloWrld!""

Input: ""Hello World!""
Output: ""HloWrld!""

Input: ""Hello World!""
Output: ""HloWrld!""

Input: ""Hello World!""
Output: ""HloWrld!""

Input: ""Hello World!""
Output: ""HloWrld!""

Input: ""Hello World!""
Output: ""HloWrld!""

Input: ""Hello World!""
Output: ""HloWrld!""

Input: ""Hello World!""
Output: ""HloWrld!""

Input: ""Hello World!""
Output: ""HloWrld!""

Input: ""Hello World!""
Output: ""HloWrld!""

Input: ""Hello World!""
Output: ""HloWrld!"""
Write a function to count bidirectional tuple pairs.,"Input:

(1, 2), (2, 3), (3, 4)

Output:

2

Explanation:

(1, 2) and (2, 3) are bidirectional tuple pairs.

(3, 4) is not bidirectional tuple pair."
Write a function to join a list of multiple integers into a single integer.,"Example:

Input: [11, 222, 3333]

Output: 112223333

Input: [4, 3, 2, 5, 6]

Output: 43256"
Write a function to find the first adverb and their positions in a given sentence.,"Input:

The three musketeers are at the back of the room.

Output:

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers are at the back of the room.

The three musketeers"
Write a function to find the surface area of a cube of a given size.,
Write a function to find the ration of positive numbers in an array of integers.,"Example:

Input: [1,2,3,4,5,6,7,8,9,10,-11,-12,-13,-14,-15]
Output: 0.5

*/

function posNegRatio(arr) {
  let pos = 0;
  let neg = 0;
  for (let i = 0; i < arr.length; i++) {
    if (arr[i] > 0) {
      pos++;
    } else {
      neg++;
    }
  }
  return pos / neg;
}

console.log(posNegRatio([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -11, -12, -13, -14, -15]));"
Write a python function to find the largest negative number from the given list.,
Write a function to trim each tuple by k in the given tuple list.,"Input:

[(1, 2, 3, 4), (1, 2), ('a', 'b'), ('a', 'b', 'c'), ('d', 'e')]

Output:

[(1, 2), ('a', 'b'), ('a', 'b'), ('d', 'e')]"
Write a function to perform index wise multiplication of tuple elements in the given two tuples.,"Sample Input:

(1,2,3,4,5,6,7,8,9,10)
(1,2,3,4,5,6,7,8,9,10)

Sample Output:

(1,4,9,16,25,36,49,64,81,100)"
Write a python function to count the occurence of all elements of list in a tuple.,"Input:

list1 = [1,2,3,4,5,6,7,8,9,10]

tuple1 = (1,2,3,4,5,6,7,8,9,10)

Output:

{1: 2, 2: 2, 3: 2, 4: 2, 5: 2, 6: 2, 7: 2, 8: 2, 9: 2, 10: 2}"
Write a function to find cubes of individual elements in a list.,"Input Format

A list of integers

Output Format

A list of cubes of individual elements in the input list

Sample Input

[1,2,3,4,5]

Sample Output

[1, 8, 27, 64, 125]

Explanation

Cubes of individual elements in the list are [1, 8, 27, 64, 125]"
Write a function to calculate the sum of perrin numbers.,"The Perrin numbers are generated by the following formula:

P(0) = 3;
P(1) = 0;
P(2) = 2;
P(n) = P(n-2) + P(n-3)

The first few Perrin numbers are:

6, 3, 2, 5, 4, 7, 8, 11, 12, 15, 16, 19, 20, 23, 24, 27, 28, 31, 32, 35, 36, 39, 40, 43, 44, 47, 48, 51, 52, 55, 56, 59, 60, 63, 64, 67, 68, 71, 72, 75, 76, 79, 80, 83, 84, 87, 88, 91, 92, 95, 96, 99, 100, 103, 104, 107, 108, 111, 112, 115, 116, 119, 120, 123, 124, 127, 128, 131, 132, 135, 136, 139, 140, 143, 144, 147, 148, 151, 152, 155, 156, 159, 160, 163, 164, 167, 168, 171, 172, 175, 176, 179, 180, 183, 184, 187, 188, 191, 192, 195,"
Write a function to extract specified size of strings from a given list of string values.,"If the size of the string is greater or equal to 3 and is a multiple of 3, add the string to the new list.

Return an empty list if there are no strings which satisfy the above conditions.


Examples

['Red', 'Green', 'Black', 'Orange', 'White']

3

['Red', 'Orange', 'White']

5

[]"
Write a function to remove all whitespaces from the given string.,"Example:

removeSpaces(""I love my dog"") ➞ ""Ilovemydog""

removeSpaces(""Georgia is a state in North America"") ➞ ""GeorgiaisastateinNorthAmerica""

removeSpaces(""The quick brown fox jumps over the lazy dog"") ➞ ""Thequickbrownfoxjumpsoverthelazydog""

Notes:

    The string will always have at least one word.
    There will be no double spaces.

*/

function removeSpaces(str) {
	return str.split(' ').join('');
}

console.log(removeSpaces('I love my dog'));
console.log(removeSpaces('Georgia is a state in North America'));
console.log(removeSpaces('The quick brown fox jumps over the lazy dog'));"
Write a function that gives loss amount on a sale if the given amount has loss else return 0.,"Input:

The function will take a single argument as a number.

Output:

The function must return a number.

Examples:

getLosses(1000) ➞ 0

getLosses(100) ➞ 10

getLosses(225) ➞ 25

getLosses(1425) ➞ 150

getLosses(4000) ➞ 1000

getLosses(25000) ➞ 12500

Notes:

N/A"
Write a python function to find the sum of even factors of a number.,"Sample Input:

10

Sample Output:

20

Explanation:

Even factors of 10 are 2, 4, 5, 10. Sum of these even factors is 20."
Write a function that matches a word containing 'z'.,"The function should check not only the 'z' character but also its neighbors.

Examples

zozooh

zozooh

zzzooz

zzzooz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zzzzzz

zz"
Write a function to check whether the given month number contains 31 days or not.,"Input:

Enter the month number: 1

Output:

31 days

Input:

Enter the month number: 2

Output:

28 days

Input:

Enter the month number: 12

Output:

31 days

Input:

Enter the month number: 11

Output:

30 days

Input:

Enter the month number: 10

Output:

31 days

Input:

Enter the month number: 9

Output:

30 days

Input:

Enter the month number: 8

Output:

31 days

Input:

Enter the month number: 7

Output:

31 days

Input:

Enter the month number: 6

Output:

30 days

Input:

Enter the month number: 5

Output:

31 days

Input:

Enter the month number: 4

Output:

30 days

Input:

Enter the month number: 3

Output:

31 days

Input:

Enter the month number: 2

Output:

28 days

Input:

Enter the month number: 1

Output:

31 days

Input:

Enter the month number: 13

Output:

Invalid input

Input:

Enter the month number: 0

Output:

Invalid input

Input:

Enter the month number: -1

Output:

Invalid input

Input:

Enter the month number: 1.5

Output:

Invalid input

Input:

Enter the month number: 1.5

Output:

Invalid input

Input:

Enter the month number: 1.5

Output:

Invalid input

Input:

Enter the month number: 1.5

Output:

Invalid input

Input:

Enter the month number: 1.5

Output:

Invalid input

Input:

Enter the month number: 1.5

Output:

Invalid"
Write a function to reverse each string in a given list of string values.,"Example:

Input: ['I', 'love', 'arrays', 'they', 'are', 'my', 'favorite']
Output: ['I', 'evol', 'sray', 'they', 'era', 'ym', 'etirovaf']"
Write a python function to find the sublist having minimum length.,"Input:

[1,2,3,4,5,6,7,8,9,10]

Output:

[1,2,3,4,5]

Explanation:

The sublist having minimum length is [1,2,3,4,5]"
Write a function to find the area of a rectangle.,"function areaOfRectangle(length, width) {
  return length * width;
}

console.log(areaOfRectangle(5, 10));"
Write a function to remove uppercase substrings from a given string.,"Example

For inputString = ""Hello, World"", the output should be
removeUppercaseSubstrings(inputString) = ""Hello, World"";
For inputString = ""Hello, WORLD"", the output should be
removeUppercaseSubstrings(inputString) = ""Hello, WORLD"".
Input/Output

[execution time limit] 4 seconds (js)

[input] string inputString

A string of lowercase and uppercase letters.

Guaranteed constraints:
1 ≤ inputString.length ≤ 100.

[output] string

A string of lowercase letters."
Write a python function to get the first element of each sublist.,"Sample Input:
[[1, 2, 3], [4, 5, 6], [7, 8, 9]]

Sample Output:
[1, 4, 7]"
Write a python function to count the upper case characters in a given string.,"Sample String : 'The quick Brow Fox'

Expected Output : 3


def upper_case(string):
    count = 0
    for i in string:
        if i.isupper():
            count += 1
    return count


print(upper_case('The quick Brow Fox'))"
Write a function to find all possible combinations of the elements of a given list.,"Example:

Input: [1, 2, 3]

Output: [[1], [2], [3], [1, 2], [1, 3], [2, 3], [1, 2, 3]]"
Write a function to find the maximum product subarray of the given array.,"Example 1:

Input: [2, 3, -2, 4]
Output: 6
Explanation: [2, 3] has the largest product 6.
Example 2:

Input: [-2, 0, -1]
Output: 0
Explanation: The result cannot be 2, because [-2, -1] is not a subarray."
Write a function to check if all values are same in a dictionary.,"def all_same(d):
    return len(set(d.values())) == 1


print(all_same({'a': 1, 'b': 1, 'c': 1}))
print(all_same({'a': 1, 'b': 2, 'c': 1}))"
Write a function to drop empty items from a given dictionary.,"Input:

{
  ""name"": ""David"",
  ""class"": 6,
  ""subjects"": [""Math"", ""Physics"", ""English""]
}

Output:

{
  ""name"": ""David"",
  ""class"": 6,
  ""subjects"": [""Math"", ""Physics"", ""English""]
}"
Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.,"Example 1:

Input:
N = 5
arr[] = {6, 7, 8, 1, 2, 3, 9, 10}
Output: 180
Explanation: The maximum product formed by
multiplying numbers of increasing subsequence
is (6 * 7 * 8 * 9 * 10).
Example 2:

Input:
N = 7
arr[] = {2, 3, 4, 5, 10, 3, 7}
Output: 1200
Explanation: The maximum product formed by
multiplying numbers of increasing subsequence
is (2 * 3 * 4 * 5 * 10 * 12 * 14).
Your Task:

You don't need to read input or print anything. Your task is to complete the function maxProduct() which takes the array arr[] and its size N as inputs and returns the maximum product formed by multiplying numbers of increasing subsequence.

Expected Time Complexity: O(N*N)
Expected Auxiliary Space: O(N*N)

Constraints:
1 ≤ N ≤ 500
1 ≤ arr[i] ≤ 200"
Write a function to find the pairwise addition of the neighboring elements of the given tuple.,"Input Format:

The first line of the input contains the number of test cases T.

The first line of each test case contains the number of elements in the tuple.

The second line of each test case contains the elements of the tuple separated by space.

Output Format:

For each test case, print the pairwise addition of the neighboring elements of the given tuple.

Sample Input:

1

4

1 2 3 4

Sample Output:

3 5 7

Explanation:

The pairwise addition of the neighboring elements of the given tuple is (1+2, 2+3, 3+4)."
Write a python function to find the product of the array multiplication modulo n.,"Input:

arr[] = {10, 3, 4, 2}
n = 13
Output:

2
Explanation:

10*3*4*2 = 240.
240 % 13 = 2"
Write a python function to check whether the given list contains consecutive numbers or not.,"Input:

[1,2,3,4,5,6,7,8,9]

Output:

True

Input:

[1,2,3,4,5,6,7,8,9,10]

Output:

False

Input:

[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]

Output:

True

Input:

[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]

Output:

False

Input:

[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]

Output:

True

Input:

[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]

Output:

False

Input:

[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,4"
Write a function to find the tuple intersection of elements in the given tuple list irrespective of their order.,"Input:

tuple_list = [(1, 2, 3, 4), (2, 3, 4, 5), (3, 4, 5, 6), (4, 5, 6, 7)]

Output:

(2, 3, 4)

Explanation:

The intersection of all the tuple elements is (2, 3, 4)."
Write a function to replace characters in a string.,"The function takes three arguments:

The string to be replaced
The character to be replaced
The character to replace with

Example:

replace(""Hello World"", ""o"", ""x"") returns ""Hellx Wxrld""

*/

function replace(str, old, neww) {
  return str.replace(old, neww);
}"
Write a function to sort a dictionary by value.,"Input:

{‘George’: 43, ‘John’: 24, ‘Paul’: 30, ‘Ringo’: 50}

Output:

[‘John’, ‘George’, ‘Paul’, ‘Ringo’]

""""""


def sort_dict_by_value(dictionary):
    return sorted(dictionary, key=dictionary.get)


print(sort_dict_by_value({'George': 43, 'John': 24, 'Paul': 30, 'Ringo': 50}))"
Write a python function to find the sum of the largest and smallest value in a given array.,"Input: [1,2,3,4,5]
Output: 6

Input: [2,4,6,8,10]
Output: 12

Input: [1]
Output: 2

Input: [1,2]
Output: 3

Input: [2,1]
Output: 3

Input: [1,2,3]
Output: 4

Input: [3,2,1]
Output: 4

Input: [-1,2,3]
Output: 2

Input: [1,-2,3]
Output: 2

Input: [1,2,-3]
Output: 2

Input: [-1,-2,-3]
Output: -4

Input: [1,-2,-3]
Output: -2

Input: [-1,2,-3]
Output: -2

Input: [1,2,3,-4]
Output: 0

Input: [1,2,3,-4,-5]
Output: -1

Input: [1,2,3,-4,-5,6]
Output: 1

Input: [1,2,3,-4,-5,6,7]
Output: 2

Input: [1,2,3,-4,-5,6,7,-8]
Output: -3

Input: [1,2,3,-4,-5,6,7,-8,9]
Output: 3

Input: [1,2,3,-4,-5,6,7,-8,9,10]
Output: 5

Input: [1,2,3,-4,-5,6,7,-8,9,10,-11]
Output: -6

Input: [1,2,3,-4,-5,6,7,-8,9,10,-11,-12]
Output: -7

Input: [1,2,3,-4,-5,6,7,-8,9,10,-11,-12,-13]
Output: -8

Input: [1,2,3,-4,-5,6,7,-8,9"
Write a python function to convert the given string to lower case.,"Sample Input:

STRIKE

Sample Output:

strike"
Write a function to remove lowercase substrings from a given string.,"Example:

removeLowercaseSubstrings(""abcABC"") ➞ ""ABC""

removeLowercaseSubstrings(""abcabc"") ➞ """"

removeLowercaseSubstrings(""Abcabc"") ➞ ""Abcabc""

removeLowercaseSubstrings(""fuuuUuu"") ➞ """"

removeLowercaseSubstrings(""FuuuUuu"") ➞ ""FuuuUuu""

removeLowercaseSubstrings("""") ➞ """"

Notes

N/A

*/

#include <assert.h>
#include <stdio.h>
#include <string.h>
#include <ctype.h>
#include ""uthash.h""

char *
removeLowercaseSubstrings(const char *s)
{
	static char b[128];
	size_t i, j, k;

	b[0] = '\0';
	for (i = 0, j = 0; s[i]; i++) {
		if (islower(s[i]))
			continue;
		for (k = j; k > 0 && b[k - 1] != s[i]; k--)
			;
		if (k == 0)
			b[j++] = s[i];
	}
	b[j] = '\0';
	return b;
}

void
test(const char *s, const char *r)
{
	char b[128];

	strcpy(b, removeLowercaseSubstrings(s));
	printf(""%s\n"", b);
	assert(!strcmp(b, r));
}

int
main(void)
{
	test(""abcABC"", ""ABC"");
	test(""abcabc"", """");
	test(""Abcabc"", ""Abcabc"");
	test(""fuuuUuu"", """");
	test(""FuuuUuu"", ""FuuuUuu"");
	test("""", """");

	return 0;
}"
Write a python function to find the first digit of a given number.,"Sample Input:

12345

Sample Output:

1

Explanation:

The first digit of the number 12345 is 1."
Write a python function which takes a list of integers and only returns the odd ones.,"Example:

Input: [1, 2, 7, 9, 11]

Output: [1, 7, 9, 11]


def odd_numbers(numbers):
    return [number for number in numbers if number % 2 != 0]


print(odd_numbers([1, 2, 7, 9, 11]))"
Write a python function to find the difference between the sum of cubes of the first n natural numbers and the sum of the first n natural numbers.,"Input:

n=5

Output:

difference=124

Explanation:

(1^3+2^3+3^3+4^3+5^3)-(1+2+3+4+5)

=(1+8+27+64+125)-(1+2+3+4+5)

=124"
Write a python function to count the number of pairs whose xor value is odd.,"Input Format

First line contains an integer N.

Next line contains N space separated integers.

Output Format

Print the number of pairs whose xor value is odd.

Sample Input

5
1 2 3 4 5
Sample Output

4
Explanation

Pairs whose xor value is odd are (1, 3), (1, 5), (2, 4), (3, 5)"
Write a function to toggle the case of all characters in a string.,"Example:

Input: ""AaBbCc""
Output: ""aAbBcC""

Input: ""AaBbCcDd""
Output: ""aAbBcCdD""

Input: ""AaBbCcDdEe""
Output: ""aAbBcCdDeE""

Input: ""AaBbCcDdEeFf""
Output: ""aAbBcCdDeEfF""

Input: ""AaBbCcDdEeFfGg""
Output: ""aAbBcCdDeEfFgG""

Input: ""AaBbCcDdEeFfGgHh""
Output: ""aAbBcCdDeEfFgGhH""

Input: ""AaBbCcDdEeFfGgHhIi""
Output: ""aAbBcCdDeEfFgGhHiI""

Input: ""AaBbCcDdEeFfGgHhIiJj""
Output: ""aAbBcCdDeEfFgGhHiIjJ""

Input: ""AaBbCcDdEeFfGgHhIiJjKk""
Output: ""aAbBcCdDeEfFgGhHiIjJkK""

Input: ""AaBbCcDdEeFfGgHhIiJjKkLl""
Output: ""aAbBcCdDeEfFgGhHiIjJkKlL""

Input: ""AaBbCcDdEeFfGgHhIiJjKkLlMm""
Output: ""aAbBcCdDeEfFgGhHiIjJkKlLmM""

Input: ""AaBbCcDdEeFfGgHhIiJjKkLlMmNn""
Output: ""aAbBcCdDeEfFgG"
Write a python function to find the sum of the per-digit difference between two integers.,"Input:

First line of input contains a single integer T which denotes the number of test cases.

The first line of each test case contains two space separated integers A and B.

Output:

For each test case, print the sum of the per-digit difference between the two integers.

Constraints:

1 <= T <= 100

1 <= A, B <= 10^18

Example:

Input:

2

123 1234

1234 123

Output:

1

1

Explanation:

Test Case 1:

The per-digit difference between 123 and 1234 is 1 - 2 + 3 - 4 = 1.

Test Case 2:

The per-digit difference between 1234 and 123 is 1 - 2 + 3 - 4 = 1."
Write a function to find the sum of the largest contiguous sublist in the given list.,"Example:

Input: [-1, 3, -1, 8, 5, 4]
Output: 17
Explanation: [8, 5, 4] is the largest sublist with sum = 17

Input: [1, 0, 3, 7, 0, 17, 2, 1, 6]
Output: 23
Explanation: [7, 0, 17, 2, 1, 6] is the largest sublist with sum = 23

Input: [1, 2, 3]
Output: 6
Explanation: [1, 2, 3] is the largest sublist with sum = 6

Input: [-1, -2, -3]
Output: -1
Explanation: [-1] is the largest sublist with sum = -1"
Write a function to find the union of the elements of two given tuples and output them in sorted order.,"Sample Input

(1, 2, 3, 4, 5)
(2, 3, 4, 5, 6)
Sample Output

(1, 2, 3, 4, 5, 6)"
Write a python function to find the length of the longest sublists.,"Input:

[1,2,3,4,5,6,7,8,9,10]

Output:

5

Explanation:

The longest sublist is [1,2,3,4,5]"
Write a function to extract values between quotation marks from a string.,"Example:

Input: ""name = 'John' age = '21' country = 'USA'""
Output: ['John', '21', 'USA']"
Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.,"Input Format

The first line contains an integer N, the number of elements in the list.
The second line contains N space-separated integers.

Constraints

1 <= N <= 1000
1 <= A[i] <= 1000

Output Format

Print the number of unordered pairs where both elements are unequal.

Sample Input 0

5
1 2 3 4 5
Sample Output 0

10
Explanation 0

The possible unordered pairs are:
(1,2)
(1,3)
(1,4)
(1,5)
(2,3)
(2,4)
(2,5)
(3,4)
(3,5)
(4,5)

Sample Input 1

3
1 1 1
Sample Output 1

0
Explanation 1

The only possible unordered pair is (1,1).

Sample Input 2

4
1 2 3 4
Sample Output 2

6
Explanation 2

The possible unordered pairs are:
(1,2)
(1,3)
(1,4)
(2,3)
(2,4)
(3,4)"
Write a python function to split a string into characters.,"Sample Input:

'hello'

Sample Output:

['h', 'e', 'l', 'l', 'o']"
Write a function to get the sum of the digits of a non-negative integer.,"Example:

Input: 123
Output: 6

*/"
Write a function to check whether a specified list is sorted or not.,"def is_sorted(lst):
    return all(lst[i] <= lst[i+1] for i in range(len(lst)-1))"
Write a function to create a list of N empty dictionaries.,"Sample Input:

2
Sample Output:

[{}, {}]
Explanation:

The list contains 2 empty dictionaries."
Write a function to sort each sublist of strings in a given list of lists.,"Example:

Input: [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']]
Output: [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']]

Explanation: The sublists are already sorted.

Input: [['c', 'b', 'a'], ['f', 'e', 'd'], ['i', 'h', 'g']]
Output: [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']]

Explanation: The sublists are sorted in reverse alphabetical order.

Input: [['a', 'c', 'b'], ['d', 'f', 'e'], ['g', 'i', 'h']]
Output: [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']]

Explanation: The sublists are sorted in alphabetical order.

Input: [['c', 'a', 'b'], ['f', 'd', 'e'], ['h', 'i', 'g']]
Output: [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']]

Explanation: The sublists are sorted in reverse alphabetical order.

Input: [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']]
Output: [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']]

Explanation: The sublists are already sorted.

Input: [['c', 'b', 'a'], ['f', 'e', 'd'], ['i', 'h', 'g']]
Output: [['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']]

Explanation: The sublists are sorted in reverse alphabetical order.

Input: [['a', 'c', 'b'], ['d', 'f', '"
Write a python function to remove duplicate numbers from a given number of lists.,"Input:

[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

[2, 4, 6, 8]

[1, 3, 5, 7, 9]

Output:

[5, 7]"
Write a python function to calculate the product of the unique numbers in a given list.,"Input
[1,2,3,4,5,6,7,8,9,10]

Output
945

Explanation
The unique numbers are [2,3,4,5,6,7,8,9,10]

The product of the unique numbers is 945"
Write a function to find the surface area of a cylinder.,"The function is expected to return a DOUBLE.
The function accepts following parameters:
1. INTEGER h
2. INTEGER r

*/

function surfaceArea(h, r) {
  return 2 * Math.PI * r * (r + h);
}

console.log(surfaceArea(3, 2));"
Write a python function to check whether a list is sublist of another or not.,"def is_sublist(l1,l2):
    for i in l1:
        if i not in l2:
            return False
    return True

l1=[1,2,3,4,5]
l2=[1,2,3,4,5,6,7,8,9]
print(is_sublist(l1,l2))"
Write a python function to find the last digit in factorial of a given number.,"Your function should accept one positive integer 'n' and return the last non zero digit in factorial of 'n'.

Example:

Input: 5

Output: 2

Explanation: Factorial of 5 is 120. Last digit of 120 is 2."
Write a function to interleave 3 lists of the same length into a single flat list.,
Write a function to find the dissimilar elements in the given two tuples.,"Input:

tuple1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)

tuple2 = (1, 2, 3, 10, 11, 12)

Output:

(4, 5, 6, 7, 8, 9, 11, 12)"
Write a function to remove uneven elements in the nested mixed tuple.,"Example:

Input:

(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)

Output:

(2, 4, 6, 8, 10)"
Write a python function to find the surface area of a square pyramid with a given base edge and height.,
Write a function to check if a dictionary is empty,"or not.

def is_empty(d):
    return len(d) == 0"
Write a function which returns nth catalan number.,"Catalan number is a mathematical sequence that arises frequently in theoretical computer science.

The first few Catalan numbers for n = 0, 1, 2, 3, … are 1, 1, 2, 5, 14, 42, 132, 429, 1430, 4862, …

Examples

catalan(0) ➞ 1

catalan(5) ➞ 42

catalan(10) ➞ 16796

catalan(15) ➞ 9694845
Notes

Inputs will be whole numbers."
Write a function to find the first adverb ending with ly and its positions in a given string.,"Input:

A string

Output:

A list of tuples containing the adverb and its position in the string.

Sample Input:

""I am happy and I am learning""

Sample Output:

[('happy', 3), ('learning', 7)]

Explanation:

The first adverb ending with ly is happy and its position is 3. The second adverb ending with ly is learning and its position is 7."
Write a function to find the n most expensive items in a given dataset.,"The function should take two arguments:

1. The dataset
2. The number of items to return

The function should return a list of the n most expensive items.

The dataset is a list of dictionaries. Each dictionary contains the name of the item and the price.

The function should return a list of the n most expensive items.

The dataset is a list of dictionaries. Each dictionary contains the name of the item and the price.

The function should return a list of the n most expensive items.

The dataset is a list of dictionaries. Each dictionary contains the name of the item and the price.

The function should return a list of the n most expensive items.

The dataset is a list of dictionaries. Each dictionary contains the name of the item and the price.

The function should return a list of the n most expensive items.

The dataset is a list of dictionaries. Each dictionary contains the name of the item and the price.

The function should return a list of the n most expensive items.

The dataset is a list of dictionaries. Each dictionary contains the name of the item and the price.

The function should return a list of the n most expensive items.

The dataset is a list of dictionaries. Each dictionary contains the name of the item and the price.

The function should return a list of the n most expensive items.

The dataset is a list of dictionaries. Each dictionary contains the name of the item and the price.

The function should return a list of the n most expensive items.

The dataset is a list of dictionaries. Each dictionary contains the name of the item and the price.

The function should return a list of the n most expensive items.

The dataset is a list of dictionaries. Each dictionary contains the name of the item and the price.

The function should return a list of the n most expensive items.

The dataset is a list of dictionaries. Each dictionary contains the name of the item and the price.

The function should return a list of the n most expensive items.

The dataset is a list of dictionaries. Each dictionary contains the name of the item and the price.

The function should return a list of the n most expensive items.

The dataset is a list of dictionaries. Each dictionary contains the name of"
Write a python function to split a list at the nth eelment and add the first part to the end.,"Sample Input

[1, 2, 3, 4, 5, 6]

Sample Output

[2, 3, 4, 5, 6, 1]

Explanation

The list was split at the 0th index, so the first element is removed and added to the end."
Write a function to convert a list to a tuple.,"def list_to_tuple(lst):
    return tuple(lst)


print(list_to_tuple([1, 2, 3, 4, 5]))"
Write a python function to find the difference between largest and smallest value in a given list.,"Sample Input
[1,2,3,4,5]
Sample Output
4
Explanation
The largest value is 5 and smallest value is 1."
Write a function to find perfect squares between two given numbers.,"Input:

Input consists of 2 integers.

First Input denotes as N1 and second input as N2.

Output:

Print the output as given in the sample output.

Constraints:

1<=N1<=10000

1<=N2<=10000

Sample Input:

1

10

Sample Output:

1

4

9

Explanation:

The perfect squares between 1 and 10 are 1,4,9."
Write a function to convert polar coordinates to rectangular coordinates.,"The function should take two arguments, rho and phi, and return an array containing the x and y values.

Examples
polar_to_cartesian(0, 0) ➞ [0, 0]

polar_to_cartesian(1, 2) ➞ [0.99, 0.45]

polar_to_cartesian(4, 1.57) ➞ [4, 0]
Notes
rho is the distance from the origin to the point.
phi is the angle from the x-axis to the point.
Return an array in the form [x, y]."
Write a python function to interchange the first and last elements in a list.,"Sample Input:
[1,2,3,4,5]

Sample Output:
[5,2,3,4,1]

Explanation:
The first element is 1 and the last element is 5.
After swapping the first and last element, the list becomes [5,2,3,4,1]"
Write a python function to find the sum of the product of consecutive binomial co-efficients.,"Input Format

The first line contains an integer N.

Constraints

1<=N<=1000

Output Format

Print the answer modulo 1000000007.

Sample Input 0

5
Sample Output 0

10
Explanation 0

The binomial co-efficients are 1, 5, 10, 10, 5, 1.

The product of consecutive binomial co-efficients are 5, 50, 100, 100, 50, 1.

The sum of the product of consecutive binomial co-efficients is 110.

Sample Input 1

10
Sample Output 1

1000
Explanation 1

The binomial co-efficients are 1, 10, 45, 120, 210, 252, 210, 120, 45, 10, 1.

The product of consecutive binomial co-efficients are 10, 450, 12000, 210000, 2520000, 21000000, 12000000, 4500000, 1000000, 100000, 10000.

The sum of the product of consecutive binomial co-efficients is 1000000000.

Sample Input 2

100
Sample Output 2

100000000
Explanation 2

The binomial co-efficients are 1, 100, 4950, 160700, 3268760, 46848280, 468482800, 3268760000, 16070000000, 49500000"
Write a function to remove leading zeroes from an ip address.,"Examples
removeLeadingZeroes(""255.024.01.01"") ➞ ""255.24.1.1""

removeLeadingZeroes(""1.023.004.56"") ➞ ""1.23.4.56""

removeLeadingZeroes(""04.03.02.01"") ➞ ""4.3.2.1""
Notes
You may have to remove leading zeroes for some digits in an ip address, so make sure they are removed.
If your function is passed a string that doesn't contain .ip address characters, return the string as is.
""""""


def remove_leading_zeroes(ip):
    return ""."".join(str(int(i)) for i in ip.split("".""))


print(remove_leading_zeroes(""255.024.01.01""))
print(remove_leading_zeroes(""1.023.004.56""))
print(remove_leading_zeroes(""04.03.02.01""))
print(remove_leading_zeroes(""0.0.0.0""))
print(remove_leading_zeroes(""123.045.067.089""))
print(remove_leading_zeroes(""123.045.067.089""))
print(remove_leading_zeroes(""123.045.067.089""))
print(remove_leading_zeroes(""123.045.067.089""))
print(remove_leading_zeroes(""123.045.067.089""))
print(remove_leading_zeroes(""123.045.067.089""))
print(remove_leading_zeroes(""123.045.067.089""))
print(remove_leading_zeroes(""123.045.067.089""))
print(remove_leading_zeroes(""123.04"
Write a function to find the difference of the first even and first odd number of a given list.,"Example:

Input:

[1,2,3,4,5,6,7,8,9]

Output:

-6

Explanation:

The first even number is 2 and the first odd number is 1.

Hence the difference is -6."
Write a python function to count minimum number of swaps required to convert one binary number represented as a string to another.,"Input:

The first line of input contains an integer T denoting the number of test cases.
The first line of each test case is a string s1.
The second line of each test case is a string s2.

Output:

Print the minimum number of swaps required to convert one binary number to another.

Constraints:

1 ≤ T ≤ 100
1 ≤ |s1|, |s2| ≤ 105

Example:

Input:
2
111000
100100
111000
001001

Output:
1
2

Explanation:
Testcase 1: There is only one swap required to convert one string to other.
Testcase 2: There are multiple swaps to convert one string to other."
Write a function to find the size in bytes of the given tuple.,"Example:

Input: (1, 2, 3, 4, 5)

Output: 20

Input: (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)

Output: 40

Input: (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)

Output: 80

Input: (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)

Output: 120

Input: (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50)

Output: 160

Input: (1, 2, 3, 4, 5, 6, 7, 8, 9,"
Write a function to find kth element from the given two sorted arrays.,"Input:

A = [1, 2, 3, 4, 5, 6]

B = [2, 4, 6, 8]

k = 3

Output: 3

Explanation: The 3rd element in the sorted array is 3."
Write a function to check whether the given number is armstrong or not.,
Write a function to find sum and average of first n natural numbers.,"Input:

n = 5

Output:

Sum = 15

Average = 3

Explanation:

1 + 2 + 3 + 4 + 5 = 15

15 / 5 = 3"
Write a python function to check whether the given number is even or not.,"Sample Input:
10

Sample Output:
Even

Sample Input:
11

Sample Output:
Odd"
Write a python function to find the first repeated character in a given string.,"Sample Input:

'abcdabcd'

Sample Output:

'a'

""""""

def first_repeated_char(str):
    for i in str:
        if str.count(i) > 1:
            return i
    return None

print(first_repeated_char('abcdabcd'))

"""""""
Write a function to get all lucid numbers smaller than or equal to a given integer.,"A lucid number is a number that is divisible by the sum of its digits. For example, 1729 is a lucid number because 1 + 7 + 2 + 9 = 19 and 19 is a divisor of 1729.

Example

For n = 1000, the output should be
lucidNumbers(n) = [1, 2, 3, 4, 5, 6, 7, 8, 9, 18, 27, 28, 36, 37, 38, 39, 45, 46, 47, 48, 49, 54, 56, 57, 58, 59, 63, 64, 68, 69, 72, 73, 74, 75, 76, 78, 79, 87, 94, 95, 96, 98, 99, 105, 111, 112, 114, 117, 122, 123, 124, 125, 126, 128, 129, 135, 144, 153, 154, 155, 156, 158, 159, 162, 165, 166, 168, 171, 172, 173, 174, 175, 176, 178, 179, 187, 194, 195, 196, 198, 199, 218, 227, 228, 236, 237, 238, 239, 245, 246, 248, 249, 254, 256, 257, 2"
Write a function to reverse words seperated by spaces in a given string.,"Example:

Input: ""Hello World""
Output: ""World Hello""

Input: ""Hello  World""
Output: ""World  Hello""

Input: ""Hello  World  ""
Output: ""World  Hello  ""

Input: ""Hello  World  ""
Output: ""World  Hello  ""

Input: ""Hello  World  ""
Output: ""World  Hello  ""

Input: ""Hello  World  ""
Output: ""World  Hello  ""

Input: ""Hello  World  ""
Output: ""World  Hello  ""

Input: ""Hello  World  ""
Output: ""World  Hello  ""

Input: ""Hello  World  ""
Output: ""World  Hello  ""

Input: ""Hello  World  ""
Output: ""World  Hello  ""

Input: ""Hello  World  ""
Output: ""World  Hello  ""

Input: ""Hello  World  ""
Output: ""World  Hello  ""

Input: ""Hello  World  ""
Output: ""World  Hello  ""

Input: ""Hello  World  ""
Output: ""World  Hello  ""

Input: ""Hello  World  ""
Output: ""World  Hello  ""

Input: ""Hello  World  ""
Output: ""World  Hello  ""

Input: ""Hello  World  ""
Output: ""World  Hello  ""

Input: ""Hello  World  ""
Output: ""World  Hello  ""

Input: ""Hello  World  ""
Output: ""World  Hello  ""

Input: ""Hello  World  ""
Output: ""World  Hello  ""

Input: ""Hello  World  ""
Output: ""World  Hello  ""

Input: ""Hello  World  ""
Output: ""World  Hello  ""

Input: ""Hello  World  ""
Output: ""World  Hello  ""

Input: ""Hello  World  ""
Output: ""World  Hello  ""

Input: ""Hello  World  ""
Output: ""World  Hello  ""

Input: ""Hello  World  ""
Output: """
Write a function to check if the given integer is a prime number.,"Example

Input: 19

Output: true

Input: 10

Output: false

Input: 2

Output: true

Input: 1

Output: false

Input: 0

Output: false"
Write a function to convert degrees to radians.,"The radians are calculated by multiplying the degrees by pi divided by 180.

The function should take the degrees as an argument and return the radians.

Examples
degreesToRadians(180) ➞ 3.141593

degreesToRadians(90) ➞ 1.5708

degreesToRadians(45) ➞ 0.785398

Notes
The input will always be a whole number.

*/

function degreesToRadians(degrees) {
	return (degrees * Math.PI) / 180;
}

console.log(degreesToRadians(180));
console.log(degreesToRadians(90));
console.log(degreesToRadians(45));"
"Write a function to search a string for a regex pattern. The function should return the matching subtring, a start index and an end index.","Examples

search(""Hello World"", /o/) ➞ [""o"", 4, 6]

search(""Hello World"", /Hello/) ➞ [""Hello"", 0, 4]

search(""Hello World"", /goodbye/) ➞ null

Notes

    All functions should be case-sensitive (see second example).
    Remember to return an array containing the substring, start index and end index.
    Return null if the pattern does not appear in the string.

*/

function search(str, pattern) {
  let res = str.match(pattern);
  if (res) {
    return [res[0], str.indexOf(res[0]), str.indexOf(res[0]) + res[0].length - 1];
  } else {
    return null;
  }
}

console.log(search(""Hello World"", /o/));
console.log(search(""Hello World"", /Hello/));
console.log(search(""Hello World"", /goodbye/));"
Write a python function to find nth bell number.,
"Write a python function which takes a list and returns a list with the same elements, but the k'th element removed.","Example:

Input:

list = [1,2,3,4,5,6,7,8,9]
k = 3

Output:

[1,2,3,5,6,7,8,9]"
Write a function which given a matrix represented as a list of lists returns the max of the n'th column.,"Example:

matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

get_column_max(matrix, 0) # returns 7
get_column_max(matrix, 1) # returns 8
get_column_max(matrix, 2) # returns 9"
"Write a python function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.","Example:

Input: [[1, 2], [3, 4], [5, 6]]

Output: [[1, 3, 5], [2, 4, 6]]



def transpose(lst):
    return [[row[i] for row in lst] for i in range(2)]

print(transpose([[1, 2], [3, 4], [5, 6]]))"
Write a function to find the cumulative sum of all the values that are present in the given tuple list.,"Input:

[(1, 2), (3, 4), (5, 6)]

Output:

[(1, 2), (3, 4), (5, 6), (6, 8), (10, 12), (15, 18)]

Explanation:

(1, 2) -> (1, 2)

(3, 4) -> (1, 2), (3, 4)

(5, 6) -> (1, 2), (3, 4), (5, 6)

(6, 8) -> (1, 2), (3, 4), (5, 6), (6, 8)

(10, 12) -> (1, 2), (3, 4), (5, 6), (6, 8), (10, 12)

(15, 18) -> (1, 2), (3, 4), (5, 6), (6, 8), (10, 12), (15, 18)"
Write a function which takes a tuple of tuples and returns the average value for each tuple as a list.,"Examples

get_average_of_tuples(((1, 2, 3), (4, 5, 6), (7, 8, 9))) ➞ [2, 5, 8]

get_average_of_tuples(((1, 5, 10), (2, 6, 11), (3, 7, 12))) ➞ [2, 6, 10]

get_average_of_tuples(((1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12))) ➞ [2, 5, 8, 11]
Notes

Return a list of integers.
""""""


def get_average_of_tuples(tuples):
    return [sum(i) // len(i) for i in zip(*tuples)]


print(get_average_of_tuples(((1, 2, 3), (4, 5, 6), (7, 8, 9))))
print(get_average_of_tuples(((1, 5, 10), (2, 6, 11), (3, 7, 12))))
print(get_average_of_tuples(((1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12))))"
Write a function which takes two tuples of the same length and performs the element wise modulo.,"Example:

modulo_tuples((1,2,3), (4,5,6)) ➞ (1, 2, 3)

modulo_tuples((10, 10, 10, 10), (1, 2, 3, 4)) ➞ (0, 0, 1, 4)

modulo_tuples((5, 9, 8, 3, 4), (2, 3, 4, 5, 6)) ➞ (1, 0, 0, 3, 4)

Notes

N/A"
"Write a function to check for the number of jumps required of given length to reach a point of form (d, 0) from origin in a 2d plane.","Input:

d = 12

Output:

3

Explanation:

(1, 1) -> (2, 2) -> (4, 4) -> (6, 6)

Input:

d = 10

Output:

4

Explanation:

(1, 1) -> (2, 2) -> (4, 4) -> (5, 5) -> (6, 6)"
Write a function to divide two lists element wise.,"The lists are of same length.

Example:

Input:

list1 = [1,2,3,4,5]

list2 = [2,3,4,5,6]

Output:

[0.5,0.6666666666666666,0.75,0.8,0.8333333333333333]

""""""

def divide_lists(list1, list2):
    return [list1[i]/list2[i] for i in range(len(list1))]"
Write a function to move all the numbers to the end of the given string.,"Input: “123456789”
Output: “123456789”

Input: “1234567890”
Output: “1234567890”

Input: “12345678901234567890”
Output: “12345678901234567890”

Input: “123456789012345678901234567890”
Output: “123456789012345678901234567890”

Input: “1234567890123456789012345678901234567890”
Output: “1234567890123456789012345678901234567890”

Input: “12345678901234567890123456789012345678901234567890”
Output: “12345678901234567890123456789012345678901234567890”

Input: “123456789012345678901234567890123456789012345678901234567890”
Output: “12345678901234567890123456789012345678901234"
Write a function to find the size of the largest subset of a list of numbers so that every pair is divisible.,"Example:

largest_subset([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])

Returns: 5

The subset of numbers that can be paired together are:

[1, 2, 3, 4, 5]
[1, 2, 3, 6, 9]
[1, 2, 4, 5, 6]
[1, 2, 4, 7, 10]
[1, 3, 5, 6, 7]
[1, 3, 5, 8, 10]
[1, 3, 6, 9, 10]
[1, 4, 5, 7, 8]
[1, 4, 5, 9, 10]
[2, 3, 5, 7, 8]
[2, 3, 5, 9, 10]
[2, 3, 6, 8, 10]
[2, 4, 6, 7, 8]
[2, 4, 6, 9, 10]
[2, 4, 7, 8, 9]
[3, 5, 6, 8, 9]
[3, 5, 7, 8, 10]
[3, 6, 7, 9, 10]
[4, 5, 7, 8, 9]
[4, 5, 7, 9, 10]
[4, 6, 8, 9, 10]

The subset with the most numbers is [1, 2, 3, 4, 5]"
Write a function to find the median of two sorted lists of same size.,"Example:

Input:

list1 = [1, 2, 3, 4, 5]

list2 = [6, 7, 8, 9, 10]

Output: 5.5

Explanation: The median of both the sorted arrays will be 5.5"
Write a function to compute the n-th power of each number in a list.,"Example:

power_numbers(2, [1, 2, 3, 4, 5, 6])
[1, 4, 9, 16, 25, 36]


def power_numbers(n, list_numbers):
    return [i ** n for i in list_numbers]"
Write a python function to convert a given string to uppercase.,"Sample Input:

hello world

Sample Output:

HELLO WORLD"
Write a python function to interchange the first and last element in a given list.,"Sample Input:
[1,2,3,4,5]

Sample Output:
[5,2,3,4,1]

Explanation:
First element of the list is replaced by last element and vice versa."
Write a python function to find the area of the largest triangle that can be inscribed in a semicircle with a given radius.,"Input
The input contains a single integer R (1 ≤ R ≤ 10000), the radius of the semicircle.

Output
Output the area of the largest triangle that can be inscribed in the semicircle. The area should be written with 3 digits after the decimal point.

Sample Input 1 
1
Sample Output 1 
0.785
Sample Input 2 
2
Sample Output 2 
5.027
Sample Input 3 
3
Sample Output 3 
11.549"
Write a python function to find the smallest missing number from a sorted list of natural numbers.,"Input: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]

Output: 101

Input: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,"
Write a function to replace all spaces in the given string with '%20'.,"You may assume that the string has sufficient space at the end to hold the additional characters, and that you are given the ""true"" length of the string.

Example:
Input: ""Mr John Smith "", 13
Output: ""Mr%20John%20Smith"""
Write a python function to find even numbers from a list of numbers.,"Sample List : [2, 7, 5, 64, 14]
Expected Result : [2, 64, 14]

""""""

def even_num(lst):
    even_lst = []
    for i in lst:
        if i % 2 == 0:
            even_lst.append(i)
    return even_lst

print(even_num([2, 7, 5, 64, 14]))"
Write a function to extract all the adjacent coordinates of the given coordinate tuple.,"Example:

Input: (1, 2)
Output: [(0, 1), (0, 2), (1, 1), (1, 3), (2, 1), (2, 2)]"
Write a function to replace whitespaces with an underscore and vice versa in a given string.,"Example:

Input: ""Jon Snow""
Output: ""Jon_Snow""

Input: ""Jon_Snow""
Output: ""Jon Snow""

*/

function replace(str) {
  return str.replace(/_/g, "" "").replace(/\s/g, ""_"");
}

console.log(replace(""Jon Snow""));
console.log(replace(""Jon_Snow""));"
Write a python function to move all zeroes to the end of the given list.,"Input: [0,2,0,3,0,5,6,0,0]

Output: [2, 3, 5, 6, 0, 0, 0, 0, 0]

""""""

def move_zeroes(nums):
    # Initialize a variable to keep track of the position of the last non-zero element
    last_non_zero = 0

    # Iterate through the list
    for i in range(len(nums)):
        # If the current element is non-zero, swap it with the last non-zero element
        if nums[i] != 0:
            nums[last_non_zero], nums[i] = nums[i], nums[last_non_zero]
            last_non_zero += 1

    # Return the modified list
    return nums

# Test the function
nums = [0, 2, 0, 3, 0, 5, 6, 0, 0]
print(move_zeroes(nums))  # Output: [2, 3, 5, 6, 0, 0, 0, 0, 0]"
Write a python function to find the sum of xor of all pairs of numbers in the given list.,"Input:

[1,2,3]

Output:

10

Explanation:

1^2+1^3+2^3=10"
Write a function to sort the given list.,"Input:

[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

Output:

[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"
Write a function to check whether the given amount has no profit and no loss,".

Input:

The first line of the input contains an integer T denoting the number of test cases.

The first line of each test case contains an integer N denoting the number of days.

The second line of each test case contains N space-separated integers denoting the price of the stock on N consecutive days.

Output:

For each test case, print ""Yes"" if the amount has no profit and no loss, else print ""No"".

Constraints:

1 <= T <= 100

1 <= N <= 100

1 <= A[i] <= 1000

Example:

Input:

2

7

100 180 260 310 40 535 695

10

23 13 25 29 33 19 34 45 65 67

Output:

Yes

No

Explanation:

Test Case 1:

As the given amount has no profit and no loss, so the output is ""Yes"".

Test Case 2:

As the given amount has a loss of 19, so the output is ""No"".


*/

#include <iostream>
using namespace std;

int main() {
	//code
	int t;
	cin>>t;
	while(t--){
	    int n;
	    cin>>n;
	    int arr[n];
	    for(int i=0;i<n;i++){
	        cin>>arr[i];
	    }
	    int flag=0;
	    for(int i=0;i<n-1;i++){
	        if(arr[i]<arr[i+1]){
	            flag=1;
	            break;
	        }
	    }
	    if(flag==0){
	        cout<<""Yes""<<endl;
	    }
	    else{
	        cout<<""No""<<endl;
	    }
	}
	return 0;
}"
Write a function to calculate the wind chill index rounded to the next integer given the wind velocity in km/h and a temperature in celsius.,"The formula for the wind chill index is:

wci = 13.12 + 0.6215 * t - 11.37 * v^0.16 + 0.3965 * t * v^0.16

where t is the temperature in celsius and v is the wind velocity in km/h.

The function should return the wind chill index rounded to the next integer.

Examples

windChill(20, 10) ➞ 10

windChill(10, 15) ➞ 13

windChill(40, 5) ➞ 11

Notes

    The formula only applies for wind speeds in excess of 3 mph (km/h) in炎热的天气。
    v^0.16 means ""v to the power of 0.16"".
    The supplied temperature and wind velocity should be integers.

*/

#include <assert.h>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int
wind_chill(int t, int v)
{
	double wci;

	wci = 13.12 + 0.6215 * t - 11.37 * pow(v, 0.16) + 0.3965 * t * pow(v, 0.16);
	return (int)round(wci);
}

void
test(int t, int v, int r)
{
	int x;

	x = wind_chill(t, v);
	printf(""%d %d %d %d\n"", t, v, x, r);
	assert(x == r);
}

int
main(void)
{
	test(20, 10, 10);
	test(10, 15, 13);
	test(40, 5, 11);
	test(10, 20, 14);
	test(10, 30, 16);
	test(10"
Write a function to sum the length of the names of a given list of names after removing the names that start with a lowercase letter.,"def filter_name(names):
    return sum(len(name) for name in names if name[0].isupper())


print(filter_name([""Kris"", ""Tom"", ""Bob"", ""Rebecca"", ""Tim"", ""Jill""]))"
Write a function to remove the parenthesis and what is inbetween them from a string.,"Examples
""Example(Unwanted thing)Example"" ➞ ""ExampleExample""

""Example(unwanted thing)Example"" ➞ ""ExampleExample""

""Example(unwanted thing) exaMple"" ➞ ""Example exaMple""
Notes
The parentheses can be in any position:

Examples
""a (b) c"" ➞ ""a c""
""a (b)c"" ➞ ""a c""
""(a)bc(d)"" ➞ ""bc""
""(a(b)c)d"" ➞ ""a(b)c"""
Write a function to find the nth nonagonal number.,
"Write a function that checks if a strings contains 'z', except at the start and end of the word.","For example:

'zazbz' -> true
'zazbzbz' -> false
'zazbzbzb' -> true


function zz(str) {
  return str.slice(1, -1).includes('z')
}"
Write a python function to reverse an array upto a given position.,"Input:

[1,2,3,4,5,6,7,8,9,10]

Output:

[10,9,8,7,6,5,4,3,2,1]"
Write a function to add a dictionary to the tuple. The output should be a tuple.,"Sample Input:

(1,2,3,4,5,6,7,8,9,10)

{'a':1,'b':2,'c':3,'d':4}

Sample Output:

(1,2,3,4,5,6,7,8,9,10,{'a':1,'b':2,'c':3,'d':4})"
"Given a square matrix of size N*N given as a list of lists, where each cell is associated with a specific cost. A path is defined as a specific sequence of cells that starts from the top-left cell move only right or down and ends on bottom right cell. We want to find a path with the maximum average over all existing paths. Average is computed as total cost divided by the number of cells visited in the path.","Example:

Input:

[

[1, 2, 3],

[4, 5, 6],

[7, 8, 9]

]

Output:

5.5

Explanation:

There are two paths of equal average:

1->4->7->8->9 and 1->4->7->5->9.

The first path has a better average since it visits 5 more cells."
"The input is given as - a dictionary with a student name as a key and a tuple of float (student_height, student_weight) as a value, - minimal height, - minimal weight. Write a function to filter students that have height and weight above the minimum.","Example:

students = {
    'John': (175, 75),
    'Mike': (180, 80),
    'Alice': (165, 50),
    'Kate': (160, 60)
}

min_height = 170
min_weight = 60

filter_students(students, min_height, min_weight)

Output:

{'Mike': (180, 80)}"
The input is defined as two lists of the same length. Write a function to count indices where the lists have the same values.,"Example:

input: [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]
output: 5

input: [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]
output: 4

input: [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]
output: 4

input: [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8]
output: 4

input: [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9]
output: 4

input: [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
output: 4

input: [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
output: 4

input: [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
output: 4

input: [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
output: 4

input: [1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7"
Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power.,"Examples
sumDigPow(1, 10) ➞ 1

sumDigPow(2, 15) ➞ 26

sumDigPow(3, 14) ➞ 0

Notes
The given integers will be positive integers.
Don't forget to return the result.
If the sum is a single digit number, return it.
*/

function sumDigPow(a, b) {
  let sum = 0;
  for (let i = a; i <= b; i++) {
    let num = i.toString().split("""");
    let sum2 = 0;
    for (let j = 0; j < num.length; j++) {
      sum2 += Math.pow(num[j], j + 1);
    }
    if (sum2 === i) {
      sum += i;
    }
  }
  return sum;
}

console.log(sumDigPow(1, 10));
console.log(sumDigPow(2, 15));
console.log(sumDigPow(3, 14));"
"Write a function to extract values between quotation marks "" "" of the given string.","Example:

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Nothing""
Output: []

Input: ""Nothing""
Output: []

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output: [""Hello"", ""world""]

Input: ""Hello world""
Output"
"Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th element of the tuple is equal to t_i * t_{i+1}.","Example:

```
tuple_multiply((1,2,3,4,5))
```

returns `(2,3,4,5)`"
"Write a function takes as input two lists [a_1,...,a_n], [b_1,...,b_n] and returns [a_1+b_1,...,a_n+b_n].","Example:

add_lists([1,2,3],[4,5,6]) ➞ [5, 7, 9]

add_lists([-1,0,1],[1,2,3]) ➞ [0, 2, 4]

add_lists([100,200,300],[100,200,300]) ➞ [200, 400, 600]

Notes

N/A"
Write a function to remove consecutive duplicates of a given list.,"Input Format:

A list of elements without duplicate

Output Format:

A list of elements after removing the consecutive duplicates

Sample Input:

1,2,2,3,3

Sample Output:

1,2,3

Explanation:

Remove the consecutive duplicates and give the output.

Sample Input:

1,2,2,2,3,3

Sample Output:

1,2,3

Explanation:

Remove the consecutive duplicates and give the output."
Write a function to find the lateral surface area of a cone given radius r and the height h.,"The formula for the lateral surface area of a cone is:

LSA = π * r * √(r^2 + h^2)

Examples
coneLSA(5, 3) ➞ 47.12

coneLSA(3, 2) ➞ 11.78

coneLSA(10, 5) ➞ 157.48

Notes
Return the answer rounded to two decimal places."
"Write a function to replace all occurrences of spaces, commas, or dots with a colon.","Examples
replaceAll(""John, Jacob, Jingle, Heimer, Schmidt"") ➞ ""John: Jacob: Jingle: Heimer: Schmidt""

replaceAll(""Earth, Wind, Fire"") ➞ ""Earth: Wind: Fire""

replaceAll(""E.T. phone home."") ➞ ""E:T: phone: home:""
Notes
There are no spaces between the tokens.
""""""


def replace_all(txt):
    return txt.replace("","", "":"").replace(""."", "":"").replace("" "", "":"")


print(replace_all(""John, Jacob, Jingle, Heimer, Schmidt""))
print(replace_all(""Earth, Wind, Fire""))
print(replace_all(""E.T. phone home.""))"
Write a function to find the index of the first occurrence of a given number in a sorted array.,"Input:
 
 1. Array of integers
 2. Target number
 
 Output:
 
 1. Index of the first occurrence of the target number
 2. -1 if the target number is not found
 
 Example:
 
 Input:
 
 Array: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
 Target: 5
 
 Output:
 
 4
 
 Explanation:
 
 The first occurrence of 5 is at index 4.
 
 */

#include <iostream>
#include <vector>

using namespace std;

int firstOccurrence(vector<int>& nums, int target) {
    int left = 0, right = nums.size() - 1;
    int result = -1;
    
    while (left <= right) {
        int mid = left + (right - left) / 2;
        
        if (nums[mid] == target) {
            result = mid;
            right = mid - 1;
        } else if (nums[mid] < target) {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }
    
    return result;
}

int main() {
    vector<int> nums = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    int target = 5;
    
    int result = firstOccurrence(nums, target);
    
    if (result == -1) {
        cout << ""Target number not found in the array."" << endl;
    } else {
        cout << ""The first occurrence of "" << target << "" is at index "" << result << ""."" << endl;
    }
    
    return 0;
}"
Write a python function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/,
Write a python function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/,"Input : 10
Output : 5

Input : 15
Output : 10

Input : 1
Output : 0

Input : 0
Output : 0

Input : 100
Output : 56

Input : 101
Output : 57

Input : 111
Output : 63

Input : 110
Output : 62

Input : 1111
Output : 14

Input : 1110
Output : 14

Input : 1000
Output : 512

Input : 1001
Output : 513

Input : 1010
Output : 514

Input : 1011
Output : 515

Input : 1100
Output : 520

Input : 1101
Output : 521

Input : 1110
Output : 522

Input : 1111
Output : 523

Input : 10000
Output : 1024

Input : 10001
Output : 1025

Input : 10010
Output : 1026

Input : 10011
Output : 1027

Input : 10100
Output : 1028

Input : 10101
Output : 1029

Input : 10110
Output : 1030

Input : 10111
Output : 1031

Input : 11000
Output : 1040

Input : 11001
Output : 1041

Input : 11010
Output : 1042

Input : 11011
Output : 1043

Input : 11100
Output : 1044

Input : 11101
Output : 104"
Write a function to locate the left insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php,"<jupyter_code>
def insertion_point(lst, val):
    for i in range(len(lst)):
        if lst[i] > val:
            return i
    return len(lst)

lst = [1, 2, 4, 5, 6]
print(insertion_point(lst, 6))
print(insertion_point(lst, -1))
<jupyter_output>
5
0
<jupyter_text>
Write a function to locate the right insertion point for a specified value in sorted order. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php
<jupyter_code>
def insertion_point(lst, val):
    for i in range(len(lst)):
        if lst[i] > val:
            return i
    return len(lst)

lst = [1, 2, 4, 5, 6]
print(insertion_point(lst, 6))
print(insertion_point(lst, -1))
<jupyter_output>
5
0
<jupyter_text>
Write a function to find the maximum and minimum numbers from a sequence of numbers. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php
<jupyter_code>
def max_min(lst):
    return max(lst), min(lst)

lst = [1, 2, 4, 5, 6]
print(max_min(lst))
<jupyter_output>
(6, 1)
<jupyter_text>
Write a function to calculate the average of a sequence of numbers. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-data-structure-exercise-24.php
<jupy"
Write a function to check whether the given string is starting with a vowel or not using regex.,
Write a function to calculate the geometric sum of n-1. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-9.php,"<jupyter_code>
def geometric_sum(n):
    if n < 0:
        return 0
    else:
        return 1 / pow(2, n) + geometric_sum(n - 1)

print(geometric_sum(5))
<jupyter_output>
0.9375
<jupyter_text>
Write a Python program to calculate the value of 'a' to the power 'b'. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-10.php
<jupyter_code>
def power(a, b):
    if b == 0:
        return 1
    else:
        return a * power(a, b - 1)

print(power(2, 3))
<jupyter_output>
8
<jupyter_text>
Write a Python program to count the number of digits in a number. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-11.php
<jupyter_code>
def count_digits(n):
    if n == 0:
        return 0
    else:
        return 1 + count_digits(n // 10)

print(count_digits(12345))
<jupyter_output>
5
<jupyter_text>
Write a Python program to print the first n Fibonacci numbers. https://www.w3resource.com/python-exercises/data-structures-and-algorithms/python-recursion-exercise-12.php
<jupyter_code>
def fibonacci(n):
    if n <= 1:
        return n
    else:
        return fibonacci(n - 1) + fibonacci(n - 2)

n = 10
for i in range(n):
    print(fibonacci(i))
<jupy"
Write a python function to find the index of smallest triangular number with n digits. https://www.geeksforgeeks.org/index-of-smallest-triangular-number-with-n-digits/,
Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/,"<jupyter_code>
def convert(tup, di):
    for a, b in tup:
        di.setdefault(a, []).append(b)
    return di
     
# Driver Code    
tups = [(""akash"", 10), (""gaurav"", 12), (""anand"", 14), 
     (""suraj"", 20), (""akhil"", 25), (""ashish"", 30)]
dictionary = {}
print (convert(tups, dictionary))
<jupyter_output>
{'akash': [10], 'gaurav': [12], 'anand': [14], 'suraj': [20], 'akhil': [25], 'ashish': [30]}
<jupyter_text>
Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/
<jupyter_code>
def convert(tup, di):
    for a, b in tup:
        di.setdefault(a, []).append(b)
    return di
     
# Driver Code    
tups = [(""akash"", 10), (""gaurav"", 12), (""anand"", 14), 
     (""suraj"", 20), (""akhil"", 25), (""ashish"", 30)]
dictionary = {}
print (convert(tups, dictionary))
<jupyter_output>
{'akash': [10], 'gaurav': [12], 'anand': [14], 'suraj': [20], 'akhil': [25], 'ashish': [30]}
<jupyter_text>
Write a function to convert the given tuple to a key-value dictionary using adjacent elements. https://www.geeksforgeeks.org/python-convert-tuple-to-adjacent-pair-dictionary/
<jupyter_code>
def convert(tup, di):
    for a, b in tup:"
Write a python function to check whether all the characters are same or not.,"Input:

string = ""aaaaa""

Output:

True

Explanation:

All the characters are same.

Input:

string = ""abab""

Output:

False

Explanation:

All the characters are not same."
Write a function to caluclate the area of a tetrahedron.,
Write a function to rotate a given list by specified number of items to the right direction. https://www.geeksforgeeks.org/python-program-right-rotate-list-n/,
Write a function to check if the given tuple has any none value or not.,"Input:

tuple1 = (1, 2, 3, None)

Output:

True

Explanation:

The given tuple has a none value.

Input:

tuple1 = (1, 2, 3)

Output:

False

Explanation:

The given tuple doesn't have any none value."
Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php,"<jupyter_code>
def check_num(start_num,end_num):
    result=[]
    for i in range(start_num,end_num+1):
        for j in range(len(str(i))):
            if i%int(str(i)[j])==0:
                result.append(i)
    return result
check_num(1,22)
<jupyter_output>
<empty_output>"
Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return None if the angle is larger than 360 degrees.,
Write a function to find the longest common subsequence for the given three string sequence. https://www.geeksforgeeks.org/lcs-longest-common-subsequence-three-strings/,
Write a function to put spaces between words starting with capital letters in a given string.,"Example

For inputString = ""SheWalksToTheBeach"", the output should be
solution(inputString) = ""She Walks To The Beach"";
For inputString = ""TheGreatBritainBrewery"", the output should be
solution(inputString) = ""The Great Britain Brewery"".
Input/Output

[execution time limit] 3 seconds (java)

[input] string inputString

A string that consists of lowercase English letters, uppercase English letters, spaces, and/or digits.

Guaranteed constraints:
1 ≤ inputString.length ≤ 100.

[output] string

A string with spaces inserted between words starting with capital letters."
Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/,
Write a function to add the given tuple to the given list.,"Input:

list1 = [(1,2),(3,4),(5,6),(4,5)]

tuple1 = (10,11)

Output:

[(1,2),(3,4),(5,6),(4,5),(10,11)]"
Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/,
"Write a function to find the nth jacobsthal number. https://www.geeksforgeeks.org/jacobsthal-and-jacobsthal-lucas-numbers/ 0, 1, 1, 3, 5, 11, 21, 43, 85, 171, 341, 683, 1365, 2731, ...",
Write a function to find minimum k records from tuple list. https://www.geeksforgeeks.org/python-find-minimum-k-records-from-tuple-list/ - in this case a verbatim copy of test cases,is not enough.
"We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list.","Example:

Input:

l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

l2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

l3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

Output:

[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"
Write a function to find the second smallest number in a list.,"Example:

secondSmallest([1, 2, -8, -2, 0]) ➞ 0
// The smallest numbers are 1 and -2

secondSmallest([879, 953, 694, -847, 342, 221, -91, -723, 791, -587]) ➞ -847

secondSmallest([3683, 2563, 2754, 2136, 1712, 542, -1153, 769, -561, 578, 412, 1590, 250, -1874, 1534, -355, -699, 465, 694, 478, -989, -795, -127, 1015, -1403, -1448, -357, 1103, -1669, 1037, -1246, -1019, 551, -1083, 1670, -1047, 1894, 1504, 1117, 801, -1409, -1651, 1052, 1679, 174, -1503, -1529, 1416, 1145, -1069, 1379, 1656, 1033, 1199, 1206, 1021, 1463, 1352, 1010, 1907, 1255, 1187, 2000, 1978, 1861, 1754, 1004, 1029, 1874]) ➞ 102"
Write a function that matches a string that has an 'a' followed by one or more 'b's. https://www.w3resource.com/python-exercises/re/python-re-exercise-3.php,"<jupyter_code>
import re
def text_match(text):
    patterns = 'ab?'
    if re.search(patterns,  text):
        return 'Found a match!'
    else:
        return('Not matched!!')

print(text_match(""ac""))
print(text_match(""abc""))
print(text_match(""abbc""))
<jupyter_output>
Found a match
Found a match
Found a match
<jupyter_text>
Write a Python program that matches a string that has an 'a' followed by two to three 'b'. https://www.w3resource.com/python-exercises/re/python-re-exercise-4.php
<jupyter_code>
import re
def text_match(text):
    patterns = 'ab{2,3}'
    if re.search(patterns,  text):
        return 'Found a match!'
    else:
        return('Not matched!!')

print(text_match(""ab""))
print(text_match(""abb""))
print(text_match(""abbb""))
<jupyter_output>
Not matched!!
Found a match
Found a match
<jupyter_text>
Write a Python program that matches a string that has an 'a' followed by anything, ending in 'b'. https://www.w3resource.com/python-exercises/re/python-re-exercise-5.php
<jupyter_code>
import re
def text_match(text):
    patterns = 'a.*?b$'
    if re.search(patterns,  text):
        return 'Found a match!'
    else:
        return('Not matched!!')

print(text_match(""aabbbbd""))
print(text_match(""aabAbbbc""))
print(text_match(""accddbbjjjb""))
<jupyter_output>
Found a match
Found a match
Found a match
<jupyter_text>
Write a Python program that matches a word at the beginning of a string. https://www.w3resource.com/python-exercises"
Write a function to count the pairs of reverse strings in the given string list. https://www.geeksforgeeks.org/python-program-to-count-the-pairs-of-reverse-strings/,
Write a function to count lists within a list. The function should return a dictionary where every list is converted to a tuple and the value of such tuple is the number of its occurencies in the original list.,"Example:

count_lists([1, 2, 3, [1, 2, 3], [1, 2, 3], [1, 2, 3]])

should return:

{
  (1, 2, 3): 3,
  (1, 2, 3,): 3
}"
Write a function to check whether a given string is a decimal number with a precision of 2.,"Example

Input: ""3.14""

Output: true

Input: ""3.""

Output: false

Input: ""3""

Output: true

Input: ""3.1""

Output: true

Input: ""3.145""

Output: false

Input: ""3.000""

Output: true

Input: ""0.3e8""

Output: true

Input: ""0.3e8.1""

Output: false

Input: ""0.03e8""

Output: true

Input: ""12.""

Output: false

Input: ""12.3""

Output: true

Input: ""12.345""

Output: false

Input: ""12.3456""

Output: false

Input: ""12.34e5""

Output: true

Input: ""12.34e5.6""

Output: false

Input: ""12.34e+5""

Output: true

Input: ""12.34e+5.6""

Output: false

Input: ""12.34e-5""

Output: true

Input: ""12.34e-5.6""

Output: false

Input: ""12.34e56""

Output: false

Input: ""12.34e-56""

Output: false

Input: ""12.34e56""

Output: false

Input: ""12.34e-56""

Output: false

Input: ""12.34e56""

Output: false

Input: ""12.34e-56""

Output: false

Input: ""12.34e56""

Output: false

Input: ""12.34e-56""

Output: false

Input: ""12.34e56""

Output: false

Input: ""12.34e-56"""
Write a python function to check whether a list of numbers contains only one distinct element or not.,"Input: [1, 1, 1, 1]
Output: True

Input: [1, 2, 3, 4]
Output: False

Input: [1, 1, 1, 3, 3, 3, 3, 3]
Output: True

Input: [1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,"
Write a function to check whether the given month number contains 30 days or not. Months are given as number from 1 to 12.,"Input:

Enter the month number: 1

Output:

30 days

Input:

Enter the month number: 5

Output:

31 days

Input:

Enter the month number: 11

Output:

30 days

Input:

Enter the month number: 13

Output:

Invalid input

Input:

Enter the month number: 0

Output:

Invalid input

Input:

Enter the month number: -1

Output:

Invalid input

Input:

Enter the month number: 100

Output:

Invalid input

Input:

Enter the month number: 1000

Output:

Invalid input

Input:

Enter the month number: 10000

Output:

Invalid input

Input:

Enter the month number: 100000

Output:

Invalid input

Input:

Enter the month number: 1000000

Output:

Invalid input

Input:

Enter the month number: 10000000

Output:

Invalid input

Input:

Enter the month number: 100000000

Output:

Invalid input

Input:

Enter the month number: 1000000000

Output:

Invalid input

Input:

Enter the month number: 10000000000

Output:

Invalid input

Input:

Enter the month number: 100000000000

Output:

Invalid input

Input:

Enter the month number: 1000000000000

Output:

Invalid input

Input:

Enter the month number: 10000000000000

Output:

Invalid input

Input:

Enter the month number: 100000000000000

Output:

Invalid input

Input:"
Write a python function to find the minimum difference between any two elements in a given array. https://www.geeksforgeeks.org/find-minimum-difference-pair/,
Write a python function to count number of digits in a given string.,"Sample Input:

string = ""123456789""

Sample Output:

9

Explanation:

The length of the string is 9."
Write a function to find nth polite number. geeksforgeeks.org/n-th-polite-number/,
Write a function to return a list of all pairs of consecutive items in a given list.,"For example, if given the list [1, 2, 3, 4], your function should return [(1, 2), (2, 3), (3, 4)].


def consecutive_pairs(lst):
    return [(lst[i], lst[i + 1]) for i in range(len(lst) - 1)]


print(consecutive_pairs([1, 2, 3, 4]))"
"Write a python function to count the number of pairs whose sum is equal to ‘sum’. The funtion gets as input a list of numbers and the sum,","and returns the number of pairs.

Example:

Input:

nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
sum = 10

Output:

4

Explanation:

There are 4 pairs whose sum is equal to 10. They are (1, 9), (2, 8), (3, 7) and (4, 6)."
Write a python function to get the difference between two lists.,"Sample Input

list1 = [10, 15, 20, 25, 30, 35, 40, 45]
list2 = [4, 9, 14, 19, 24, 29, 34, 39]

Sample Output

[5, 10, 15, 20, 25, 30, 35, 40]"
Write a python function to find the sum of fourth power of first n odd natural numbers.,"""""""

def fourth_power_sum(n):
    sum = 0
    for i in range(1, n+1):
        sum += i**4
    return sum

n = int(input(""Enter a number: ""))
print(""The sum of fourth power of first"", n, ""odd natural numbers is"", fourth_power_sum(n))"
Write a function to check if the given expression is balanced or not. https://www.geeksforgeeks.org/check-for-balanced-parentheses-in-an-expression/,
Write a function to remove all the words with k length in the given string.,"Input:

string = ""Good is good not bad""

k = 4

Output:

""good not bad""

Explanation:

The word ""Good"" of length 4 is removed from the string."
Write a function to find the occurrence and position of the substrings within a string. Return None if there is no match.,"Example:

find_substring(""the cat and the rat"", ""the"")

Output:

[(""the"", 0, 3), (""the"", 10, 13)]"
Write a python function to check whether every odd index contains odd numbers of a given list.,"Sample Input:
[1,2,3,4,5,6,7,8,9]

Sample Output:
True

Explanation:
The odd index contains odd numbers 1,3,5,7,9

Sample Input:
[1,2,3,4,5,6,7,8,9,10]

Sample Output:
False

Explanation:
The odd index contains odd numbers 1,3,5,7,9

Sample Input:
[1,2,3,4,5,6,7,8,9,10,11]

Sample Output:
True

Explanation:
The odd index contains odd numbers 1,3,5,7,9,11

Sample Input:
[1,2,3,4,5,6,7,8,9,10,11,12]

Sample Output:
False

Explanation:
The odd index contains odd numbers 1,3,5,7,9,11

Sample Input:
[1,2,3,4,5,6,7,8,9,10,11,12,13]

Sample Output:
True

Explanation:
The odd index contains odd numbers 1,3,5,7,9,11,13

Sample Input:
[1,2,3,4,5,6,7,8,9,10,11,12,13,14]

Sample Output:
False

Explanation:
The odd index contains odd numbers 1,3,5,7,9,11,13

Sample Input:
[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]

Sample Output:
True

Explanation:
The odd index contains odd numbers 1,3,5,7,9,11,13,15

Sample Input:
[1,2,3,4,5,6,7,8,9,10,11,12,13,"
Write a function to count those characters which have vowels as their neighbors in the given string.,"Input:

The first line of input contains an integer T denoting the number of test cases.
The first line of each test case is N, the size of the string.
The second line of each test case contains the string.

Output:

Print the count of those characters which have vowels as their neighbors.

Constraints:

1 ≤ T ≤ 100
1 ≤ N ≤ 100

Example:

Input:
2
5
abecd
10
geeksforgeeks

Output:
2
4

Explanation:
Testcase 1: 'e' and 'c' are the only characters which have vowels as their neighbors.
Testcase 2: 'e', 'o', 'e', 'e' are the only characters which have vowels as their neighbors.


*/

#include <iostream>
#include <string>
using namespace std;

int countVowels(string str)
{
    int count = 0;
    for (int i = 0; i < str.length(); i++)
    {
        if (str[i] == 'a' || str[i] == 'e' || str[i] == 'i' || str[i] == 'o' || str[i] == 'u')
        {
            if (i + 1 < str.length() && str[i + 1] == 'a' || str[i + 1] == 'e' || str[i + 1] == 'i' || str[i + 1] == 'o' || str[i + 1] == 'u')
            {
                count++;
            }
            if (i - 1 >= 0 && str[i - 1] == 'a' || str[i - 1] == 'e' || str[i - 1] == 'i' || str[i - 1] == 'o' || str[i - 1] == 'u')
            {
                count++;
            }
        }
    }
    return count;
}

int main()
{
    int t;
    cin >> t;
    while ("
Write a python function to find the sum of non-repeated elements in a given list.,"Sample Input
[1,2,3,4,5,6,7,8,9,10,1,2,3,4,5,6,7,8,9,10]

Sample Output
45

Explanation
The non-repeated elements are 1,2,3,4,5,6,7,8,9,10."
Write a function to pack consecutive duplicates of a given list elements into sublists.,"Example:

pack_consecutive(['a', 'a', 'a', 'a', 'b', 'c', 'c', 'a', 'a', 'd', 'e', 'e', 'e', 'e'], []) 
➞ [['a', 'a', 'a', 'a'], ['b'], ['c', 'c'], ['a', 'a'], ['d'], ['e', 'e', 'e', 'e']]

pack_consecutive([1, 1, 3, 3, 5, 7, 7, 7, 7], []) 
➞ [[1, 1], [3, 3], [5], [7, 7, 7, 7]]

pack_consecutive([1, 2, 3, 3, 4, 4, 5, 7, 7], []) 
➞ [[1], [2], [3, 3], [4, 4], [5], [7, 7]]
Notes

Keep the original order of the elements in the list."
"Write a function to count the number of lists within a list. The function should return a dictionary, where every list is turned to a tuple, and the value of the tuple is the number of its occurrences.","Examples

count_list([1, 1, 2, 2, 3, 3, 3, 3]) ➞ {(1, 2): 2, (2, 3): 4}

count_list([1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3]) ➞ {(1, 2): 2, (2, 3): 7}

count_list([1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3]) ➞ {(1, 2): 3, (2, 3): 10}

count_list([1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]) ➞ {(1, 2): 4, (2, 3): 13}
Notes

Lists can be of any size."
Write a function to find the combinations of sums with tuples in the given tuple list. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/,"<jupyter_code>
def combinations_of_sum(tuples, target):
    result = []
    for i in range(len(tuples)):
        for j in range(i+1, len(tuples)):
            if tuples[i][0] + tuples[j][0] == target:
                result.append((tuples[i], tuples[j]))
    return result

tuples = [(1, 2), (2, 3), (3, 4), (4, 5)]
target = 5
print(combinations_of_sum(tuples, target))
<jupyter_output>
[(1, 2), (2, 3)]
<jupyter_text>
Write a function to find the combinations of sums with tuples in the given tuple list. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/
<jupyter_code>
def combinations_of_sum(tuples, target):
    result = []
    for i in range(len(tuples)):
        for j in range(i+1, len(tuples)):
            if tuples[i][0] + tuples[j][0] == target:
                result.append((tuples[i], tuples[j]))
    return result

tuples = [(1, 2), (2, 3), (3, 4), (4, 5)]
target = 5
print(combinations_of_sum(tuples, target))
<jupyter_output>
[(1, 2), (2, 3)]
<jupyter_text>
Write a function to find the combinations of sums with tuples in the given tuple list. https://www.geeksforgeeks.org/python-combinations-of-sum-with-tuples-in-tuple-list/
<jupyter_code>
def combinations_of_sum(tuples, target):
    result"
Write a python function to check whether the count of divisors is even. https://www.w3resource.com/python-exercises/basic/python-basic-1-exercise-24.php,"def count_divisors(n):
    count = 0
    for i in range(1, n + 1):
        if n % i == 0:
            count += 1
    return count


def is_even(n):
    return count_divisors(n) % 2 == 0


print(is_even(10))
print(is_even(15))
print(is_even(20))
print(is_even(25))
print(is_even(30))
print(is_even(35))
print(is_even(40))
print(is_even(45))
print(is_even(50))
print(is_even(55))
print(is_even(60))
print(is_even(65))
print(is_even(70))
print(is_even(75))
print(is_even(80))
print(is_even(85))
print(is_even(90))
print(is_even(95))
print(is_even(100))
print(is_even(105))
print(is_even(110))
print(is_even(115))
print(is_even(120))
print(is_even(125))
print(is_even(130))
print(is_even(135))
print(is_even(140))
print(is_even(145))
print(is_even(150))
print(is_even(155))
print(is_even(160))
print(is_even(165))
print(is_even(170))
print(is_even(175))
print(is_even(180))
print(is_even(185))
print(is_even(190))
print(is_even(195))
print(is_even(200))
print(is_even(205))
print(is_even(210))
print("
Write a python function to find the sum of all odd length subarrays. https://www.geeksforgeeks.org/sum-of-all-odd-length-subarrays/,
Write a function to convert rgb color to hsv color. https://www.geeksforgeeks.org/program-change-rgb-color-model-hsv-color-model/,
Write a function to find the product of first even and odd number of a given list.,"Input:

[1,2,3,4,5,6,7,8,9,10]

Output:

20

Explanation:

Even numbers are 2 and 4

Odd numbers are 1,3,5,7,9

Product of 2 and 1 is 2"
Write a function to convert tuple string to integer tuple.,"Input:

tuple_string = ('1', '2', '3', '4', '5')

Output:

tuple_int = (1, 2, 3, 4, 5)"
Write a function to locate the right insertion point for a specified value in sorted order.,"The array may contain duplicates.

You may assume there are no duplicates in the array.

Example 1:

Input: [1,3,5,6], 5
Output: 2
Example 2:

Input: [1,3,5,6], 2
Output: 1
Example 3:

Input: [1,3,5,6], 7
Output: 4
Example 4:

Input: [1,3,5,6], 0
Output: 0"
Write a function that matches a string that has an a followed by three 'b'.,"function checkAB(str) {
  let regex = /a(b){3}/;
  return regex.test(str);
}

checkAB(""lane borrowed"");"
Write a function to create a new tuple from the given string and list.,"Sample Input:

    string = ""Hello World""
    list = [1,2,3,4,5]

Sample Output:

    ('Hello World', [1, 2, 3, 4, 5])"
Write a python function to check whether every even index contains even numbers of a given list.,"Sample Input:
[1,2,3,4,5,6,7,8,9]

Sample Output:
False

Explanation:
The element at index 0 is 1.
The element at index 2 is 3.
The element at index 4 is 5.
The element at index 6 is 7.
The element at index 8 is 9.

Hence, every even index contains even numbers.

Sample Input:
[1,2,3,4,5,6,7,8,9,10]

Sample Output:
True

Explanation:
The element at index 0 is 1.
The element at index 2 is 3.
The element at index 4 is 5.
The element at index 6 is 7.
The element at index 8 is 9.
The element at index 10 is 11.

Hence, every even index contains even numbers.

Sample Input:
[1,2,3,4,5,6,7,8,9,10,11]

Sample Output:
False

Explanation:
The element at index 0 is 1.
The element at index 2 is 3.
The element at index 4 is 5.
The element at index 6 is 7.
The element at index 8 is 9.
The element at index 10 is 11.

Hence, every even index contains even numbers.

Sample Input:
[1,2,3,4,5,6,7,8,9,10,11,12]

Sample Output:
True

Explanation:
The element at index 0 is 1.
The element at index 2 is 3.
The element at index 4 is 5.
The element at index 6 is 7.
The element at index 8 is 9.
The element at index 10 is 11.
The element at index 12 is 13.

Hence, every even index contains even numbers.

Sample Input:
[1,2,3,4,5,6,7,8,9,1"
Write a function to remove tuples from the given tuple.,"Input:

tuple1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)

Output:

(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)

(1, 2, 3, 4, 5, 6, 7, 8, 9)

(1, 2, 3, 4, 5, 6, 7, 8)

(1, 2, 3, 4, 5, 6, 7)

(1, 2, 3, 4, 5, 6)

(1, 2, 3, 4, 5)

(1, 2, 3, 4)

(1, 2, 3)

(1, 2)

(1,)

()"
Write a python function to count the number of lists in a given number of lists.,"Sample Input:

[[1, 2, 3], [4, 5, 6], [7, 8, 9]]

Sample Output:

3"
Write a python function to find the last position of an element in a sorted array.,"Return -1 if the element is not present.

Input:

arr = [1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5"
"Write a function that matches a string that has an 'a' followed by anything, ending in 'b'.","function abTest(str) {
  let regex = /a.+b$/;
  return regex.test(str);
}

abTest(""lane borrowed"");"
Write function to find the sum of all items in the given dictionary.,"Input:

{
  ""a"": 1,
  ""b"": 2,
  ""c"": 3
}
Output:

6"
Write a python function to find the sum of all odd natural numbers within the range l and r.,"Input:

l = 1, r = 10

Output:

30

Explanation:

The odd numbers within the range are 1, 3, 5, 7, 9.

Sum of all odd numbers = 1 + 3 + 5 + 7 + 9 = 30"
Write a python function to find the sum of an array.,"Sample Input

[1,2,3,4,5]

Sample Output

15

Explanation

1+2+3+4+5=15"
Write a function to that rotate left bits by d bits a given number. We assume that the number is 32 bit.,"Example:

Input: 16, d = 2
Output: 64

Input: 16, d = 4
Output: 16

Input: 16, d = 8
Output: 16

Input: 16, d = 16
Output: 16

Input: 16, d = 32
Output: 16

Input: 16, d = 33
Output: 16

Input: 16, d = -1
Output: 16

Input: 16, d = -2
Output: 16

Input: 16, d = -3
Output: 16

Input: 16, d = -4
Output: 16

Input: 16, d = -5
Output: 16

Input: 16, d = -6
Output: 16

Input: 16, d = -7
Output: 16

Input: 16, d = -8
Output: 16

Input: 16, d = -9
Output: 16

Input: 16, d = -10
Output: 16

Input: 16, d = -11
Output: 16

Input: 16, d = -12
Output: 16

Input: 16, d = -13
Output: 16

Input: 16, d = -14
Output: 16

Input: 16, d = -15
Output: 16

Input: 16, d = -16
Output: 16

Input: 16, d = -17
Output: 16

Input: 16, d = -18
Output: 16

Input: 16, d = -19
Output: 16

Input: 16, d = -20
Output: 16

Input: 16, d = -21
Output: 16

Input: 16, d = -22"
Write a function to remove all whitespaces from a string.,"Example:

removeWhitespaces('I love you')
// returns 'Iloveyou'

removeWhitespaces('I love you')
// returns 'Iloveyou'

removeWhitespaces('I love you')
// returns 'Iloveyou'

removeWhitespaces('I love you')
// returns 'Iloveyou'

removeWhitespaces('I love you')
// returns 'Iloveyou'

removeWhitespaces('I love you')
// returns 'Iloveyou'

removeWhitespaces('I love you')
// returns 'Iloveyou'

removeWhitespaces('I love you')
// returns 'Iloveyou'

removeWhitespaces('I love you')
// returns 'Iloveyou'

removeWhitespaces('I love you')
// returns 'Iloveyou'

removeWhitespaces('I love you')
// returns 'Iloveyou'

removeWhitespaces('I love you')
// returns 'Iloveyou'

removeWhitespaces('I love you')
// returns 'Iloveyou'

removeWhitespaces('I love you')
// returns 'Iloveyou'

removeWhitespaces('I love you')
// returns 'Iloveyou'

removeWhitespaces('I love you')
// returns 'Iloveyou'

removeWhitespaces('I love you')
// returns 'Iloveyou'

removeWhitespaces('I love you')
// returns 'Iloveyou'

removeWhitespaces('I love you')
// returns 'Iloveyou'

removeWhitespaces('I love you')
// returns 'Iloveyou'

removeWhitespaces('I love you')
// returns 'Iloveyou'

removeWhitespaces('I love you')
// returns 'Iloveyou'

removeWhitespaces('I love you')
// returns 'Iloveyou'

removeWhitespaces('I love you')
// returns 'Iloveyou'

removeWhitespaces('I love you')
// returns 'Iloveyou'

removeWhitespaces('I love you')
// returns 'Iloveyou'

removeWhitespaces('I love you')
// returns"
Write a python function to count the number of equal numbers from three given integers.,
Write a python function to count the number of rotations required to generate a sorted array. https://www.geeksforgeeks.org/count-of-rotations-required-to-generate-a-sorted-array/,
Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/,
Write a function to check whether the product of numbers in a list is even or not.,"def product_even(numbers):
    product = 1
    for number in numbers:
        product *= number
    return product % 2 == 0

numbers = [1, 2, 3, 4, 5]
print(product_even(numbers))"
Write a function that returns the list in a list of lists whose sum of elements is the highest.,"Example:

[[1, 2, 3], [4, 5, 6], [10, 11, 12], [1, 2], [1, 2, 3]] --> [[1, 2, 3], [1, 2, 3]]

If two lists have the same sum of elements, return the one with more elements.

If there are still duplicates, return the one that appears first.

*/

function highestRank(arr) {
  let obj = {};
  let max = 0;
  let res = [];
  for (let i = 0; i < arr.length; i++) {
    let sum = arr[i].reduce((a, b) => a + b);
    if (obj[sum]) {
      obj[sum].push(arr[i]);
    } else {
      obj[sum] = [arr[i]];
    }
    if (sum > max) {
      max = sum;
    }
  }
  for (let key in obj) {
    if (key == max) {
      res = obj[key];
    }
  }
  return res.length > 1 ? res.sort((a, b) => b.length - a.length)[0] : res[0];
}"
Write a function to find maximum run of uppercase characters in the given string.,"Input:

""abcd""

Output:

0

Explanation:

No uppercase characters present.

Input:

""ABCD""

Output:

4

Explanation:

All characters are uppercase.

Input:

""abcdEFG""

Output:

3

Explanation:

""EFG"" is the longest run of uppercase characters.

Input:

""abcdEFGh""

Output:

3

Explanation:

""EFG"" is the longest run of uppercase characters.

Input:

""abcdEFGhijkLMN""

Output:

6

Explanation:

""EFGhijk"" is the longest run of uppercase characters.

Input:

""abcdEFGhijkLMNopqrstUVWxyz""

Output:

6

Explanation:

""EFGhijk"" is the longest run of uppercase characters.

Input:

""abcdEFGhijkLMNopqrstUVWxyzABCDEFGHIJKLMNOPQRSTUVWXYZ""

Output:

26

Explanation:

""ABCDEFGHIJKLMNOPQRSTUVWXYZ"" is the longest run of uppercase characters.

Input:

""abcdEFGhijkLMNopqrstUVWxyzABCDEFGHIJKLMNOPQRSTUVWXYZ123456789""

Output:

26

Explanation:

""ABCDEFGHIJKLMNOPQRSTUVWXYZ"" is the longest run of uppercase characters.

Input:

""abcdEFGhijkLMNopqrstUVWxyzABCDEFGHIJKLMNOPQRSTUVWXYZ123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ""

Output:

52

Explanation:"
Write a python function to find the first odd number in a given list of numbers.,"The values in the list are all positive. If the list does not contain any odd number, then return -1.

Sample Input:

[1, 2, 3, 4, 5]

Sample Output:

1

Explanation:

The first odd number in the list is 1."
Write a function to check if the given tuples contain the k or not.,"Input:

tuple1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)

tuple2 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)

k = 11

Output:

False

Explanation:

11 is not present in the tuple1 and tuple2."
Write a function to check if each element of second tuple is smaller than its corresponding element in the first tuple.,"Input Format

First line contains the first tuple

Second line contains the second tuple

Output Format

Print True if each element of second tuple is smaller than its corresponding element in the first tuple. Otherwise, print False.

Sample Input 0

1,2,3
2,3,4
Sample Output 0

True
Explanation 0

In the first tuple, 1 < 2 < 3. In the second tuple, 2 < 3 < 4.

Sample Input 1

1,2,3
2,3,1
Sample Output 1

False
Explanation 1

In the first tuple, 1 < 2 < 3. In the second tuple, 2 < 3 < 1.

Sample Input 2

1,2,3
1,2,3
Sample Output 2

False
Explanation 2

In the first tuple, 1 < 2 < 3. In the second tuple, 1 < 2 < 3.

Sample Input 3

1,2,3
1,2,3,4
Sample Output 3

False
Explanation 3

In the first tuple, 1 < 2 < 3. In the second tuple, 1 < 2 < 3 < 4.

Sample Input 4

1,2,3
1,2
Sample Output 4

False
Explanation 4

In the first tuple, 1 < 2 < 3. In the second tuple, 1 < 2.

Sample Input 5

1,2,3
1,2,3,4,5
Sample Output 5

False
Explanation 5

In the first tuple, 1 < 2 < 3. In the second tuple, 1 < 2 < 3 < 4 < 5.

Sample Input 6

1,2,3
1,2,3,4,5,6
Sample Output 6

False
Explanation 6

In the first tuple, 1 < 2 < 3. In the second tuple, 1 < 2 < 3 < 4 < 5 < 6.

Sample Input 7

1,2,3
1,2,3,4,5,6,7
Sample"
